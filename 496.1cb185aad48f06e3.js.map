{"version":3,"file":"496.1cb185aad48f06e3.js","mappings":"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WAlCjD,+BACAwhE,2BACArhE,yBA+BA,iBACA,qBACAmhD,iCACAA,iBACAmgB,aACAj7D,WACAk7D,cACAC,YACSrgB,UACT96C,YACAk7D,eACAC,aACSrgB,eACT96C,iBACAm7D,kBACSrgB,IAETjrC,GAAkBurD,GAElBC,GADA,wCACA1hE,KACAyhE,iBAGAC,+BAWA,qBACA,MAuBA,GAtBA,qBACAC,WACArqD,GAAkB6pC,GAClBygB,QACAD,gBAEA3qD,GAAkBmqC,GAClBygB,QACAD,gBAEA9/D,EAAmBs/C,GACnBygB,SACAD,iBAEAxrD,EAAqBgrC,GACrBygB,WACAD,mBAEaP,GAAOjgB,IACpBygB,UACAD,kBAEQtrD,GAAMsrD,IAAU9/D,EAAM8/D,IAC9B,sBACA,GAAYvrD,GAAYyrD,GACxBA,qBAEiBhgE,EAAMggE,GACvB,UACAA,QAEAA,mBAEiB3rD,GAAU2rD,GAG3B,CACA,QAAuBT,GAAOS,oBAC9B,4CAAwDC,YAJxDD,aAMA,mBAEA,sBACA,GAAYzrD,GAAY+qC,IACxBkY,6BACA,YAA4BwI,mBAAuBA,GACnD,6BACA,sBACAA,UACA,WACA,UACAC,SACA3gB,oBACA0gB,gBAIiBhgE,EAAMs/C,IACvBkY,6BACA,4BACA,UACA,UACAwI,SACA1gB,YACA,gCACA,UACA,UACA2gB,SACA3gB,cAGA,SA9EA4gB,YAEAA,WAEAA,aAjEA,UACA,UACA,UACA,UACA,UACA,IAAM,MACN,IAAM,OAGN,SACA5jE,iBAKAC,iBACAA,2BAAoC4jE,kBACpC5jE,2BAAoC4jE,kBAMpCC,aACA,oCACA,8BACA,MACA7jE,uBACA,UACA,MACAA,uBACAA,WACA8jE,iCACAC,eAEA/jE,2BAA4C4jE,gBAG5C,SAMA52C,SACAhtB,sBACAA,WAA0B8jE,gDAC1B9jE,2BAAwC4jE,gBACxC5jE,wBAEA,iCACAujE,YACA,cACA,QACA,kBACAC,uDACAvI,YACA,SAEA,aACA,uBACA,MAEA,SAEA,GADAj7D,sBACAi7D,WACA,+DACA,EAEA,WACA,4BACAj7D,qBACA,IAGAwjE,gCAA2DC,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A,gBACA,sBACA,uBACA,GAAYrtD,GAAYijD,GACxB,qBAEA,+CAA2DlY,sBAAwBygB,KAOnF8B,kBACA,uBACA,qBACArK,GAAkCljD,EAAQwrD,aAEvBvrD,GAAYurD,uBAE/BgC,oBACA,4BACA,IAAiB9hE,EAAM+/D,GACvB,SACA,gBACA,gBACAzgB,GACoBhrC,EAAQkjD,IAC5B,gBACAA,kBACAA,YACAA,QAMA/iC,gBACA,gBACA,mBACA,uBACA,QAAelgB,GAAYijD,eAM3BuK,kBACA,gBACAxlE,kBAEA,CACA,uBACA,GAAgBgY,GAAYurD,GAC5BA,0BACA,oBAGA,+CAA+DxgB,sBAAwBygB,KAFvFxjE,mCAMAylE,oCAlIA,MACAC,WACAC,YAMA,0BAAsDC,2EAA0E,IAChI,WACA,SACA,mCACA,eACA,SACA,WACAb,KACA,iBACA,qBACA9J,kBACA0J,UAEAK,OAEA,MACAa,EAUAC,GATAC,MACAC,KACAC,KACAC,KAMA,IALA1C,SACAwC,WACA,QACAhB,QAEiBc,YAAsB,CACvC,sBAEA,OADAG,IACA5C,YACA,IACA2C,KACA,UACA,IACAA,KACA,UACA,IACAA,KACA,cAEAA,KAEAE,IAEA,aACA1C,SACAwC,WACAhB,MACAP,aAEA,CACA,aACAoB,GACA,SACA,UACA,UAEA,gBACAM,qCACA1B,KAEA,QACA,KACAE,UACAK,MACAP,iBAEAjB,QAEA,wBACAqC,KACAC,WACAC,MAGA,uBAEA,SACA,SACApB,WACAI,SACAC,OACAP,cAGAsB,MAIAF,KAIA,GAFAE,OACAplB,IACA,aACA,SACA+iB,GACAA,IACA,uBACA,aAAoBoC,cAAkBA,IACtC,eACAM,qBACA,OACAC,QAAuBtjB,IAASsgB,iBAEhCG,gBACA6C,OAA0BhD,WAC1BgD,SAAwBtjB,IAASsgB,oBAGjC,UAMA,iBACA,aACA,yBACA,GACAG,gBACUA,aACVA,SAEA,SAhIA,cACAoC,8BACAU,8BACAC,4CAIAC,iCAmBA,iBACA,0BACA,gCACA,SACA,MAAYC,eAAc1jB,EAC1BwgB,2CACAE,4BACA,SACA9iB,IACA,mBAAkCgkB,EAAIA,SAQtC,GAPA,uCAEAjB,sBACAmB,KACAlkB,IACAgkB,QAEA,SACA,mBACA,IACA,CACAjB,gBACA,wBACA,cACA,OACAA,SACA,UACA,OACAA,SACA,UACA,OACAA,SACA,UACA,OACAA,SACA,UACA,OACAA,SACA,UACA,OACAA,SACA,UACA,OACAA,SACA,UACA,OACAA,SACA,cAEA,qBACAA,qBAEAA,iBAEAmB,KACAlkB,MAEA,UACA,IACA,MACA,cACA6iB,WACAqB,SAEA,CAGA,IADAnB,uBACA,eACA,cACA,cACAA,QACAmB,KAEAnB,KAEA,eACAA,SACAmB,KACAlkB,MAEA,cAEAkkB,KAGA,0BACA5J,EACAyI,EACUn8D,GAAam8D,IAAciC,GAAWe,OAEhD,iBACA,kBACA,gBACA,uBAIA,0BACA,eAEA,kCACAzL,iDAAuEuI,KAAO,IAC9E,qBACAvI,EACU1zD,GAAa0zD,IArIvB,OAqI8CyL,OAE9C,aAAuBC,0BAAsB1L,OAG7C,wCACA,eAEA,mBACAA,mCACAta,MAA6B36C,kBAE7B+8C,IAAmB/8C,mBAtInB,mBACA,WACA,SACA,YACAu9D,WACA,QACA,SACA,gBAA+BE,MAAYA,EAC3C,gBACA,SACA,SAEA,GADAC,MACAH,OACA,SAGA,SAwHAqD,kCACA,MACA,qBAEA,MACAjC,EACA,eAAkCA,MAAcA,GAChD,gBACA,kCACA,MAEA,qBACA,yBACA,MACAE,MAEArB,uBACAqB,MACApB,GACAA,KAGAoB,KAEAE,IACAvB,uBACA,uBACAuB,iBACAA,gCAA+CrB,MAG/C,IACAmC,EADApB,KAEAsB,MACA,QAAuBF,aAAyBA,GAChD,cACA,YACApB,aACA,UAGA,MAFAsB,MAIA,iCACAC,IACAxC,wBACAwC,wBAA2CtC,MAG3C,qBADAA,UACA,MAMA,GALAL,IACA6C,oCACA3C,GACAA,KAEA5iB,EACA,MACA,GAAkBulB,MAAWxC,IAASsC,IADtCxC,wBAA2CE,OACWqB,IAQtD,SAAcmB,MAAWxC,IADRn8D,GAAa,GAAIy+D,IALlCxC,IACA9+C,uBACAA,iEAEAA,oBAA8Bg/C,OACoBqB,IAAIrB,EAAWgC,GAAUgB,SAiE3E,YAAwBrD,SACxB,MAAYoD,wBAAsB1jB,EAClC2gB,2BACAL,EACA3+D,iBAA0B2+D,GAAU5hE,wBACpC,IAAUwF,QAAOo8D,EACjB1iB,IAAiB36C,iBAEjB,kDAA0Dsf,gBAC1Dq7B,EAAmB36C,iBAEnB,YACA,eACiBA,qBACAA,iBACjB,YACA6gE,cACA1+D,iBACiBnC,gBACjB,0BACiBA,gBACjB,0BACiBA,SACjB,OArFA,qBACA,MACA,MAAYiB,gBAAco8D,GACdyD,gDAA4C/jB,EACxD,mBAAiCz9B,SACjCy/C,cAA0Bz/C,QAC1B,eAEA,OACA,oFAAsBA,SACtB,4BACAugD,sBACA,OACA,OACAE,GADAtB,MACAsC,GAEAlB,MACAgB,GAEA9jB,sBACAgkB,GAGAF,GAQAhC,2BACAkB,QACA59D,YAEA,QACA48D,GACAtB,IAAiBz9D,WACjB,oBAEA,mBAEA,iBACA,6BACAmC,YAEA,gCAA6Cw8D,KAI7C,KACA,iCACA,cACA,kCACA,gDACA,eAGA,SACAK,EACUz9D,GAAay9D,IAlRvB,OAkR8C0B,OAyB9CM,kBAEA,cAGA,WACA,aACA,MAAgBC,sCAAoClkB,UACpD0hB,UAEA,GADAE,OACA,SACA,mDAA+DF,KAE/D,SApTA,kBACAN,gBACA+C,MACAC,UACAC,+DACAp+B,uBACAi+B,oBACAI,0BACAC,gBACAC,sBACAC,kCACAC,iBACAC,aACApB,aACAC,mBACAoB,eACAC,cACAC,eACAC,eACAC,qBACKhlB,KA2CL,qBACA,GAAQt/C,EAAM4/D,GACd,yBACA,GAAQL,GAAOK,GACf,qBACA,MACA,QAAiBprD,GAAMorD,GACvBA,EACAtgB,oBAAqCilB,kBACrCzE,IACAA,EAnDA,iBACA,UACA,mCACA,cACA,4CAEA,MACAtI,EACA,GAAQljD,EAAQgrC,IAChBkY,UACA,+CACAuI,EACAD,0DAGAtI,IACAuI,mDAEA,OAEA,qDACA,wCAAgDD,WAEhD,SA4BAl7D,uBACA,QA1BA,iBAAwC87D,kBACxC,WACA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CA,gBACA,yBACA,uCACAK,gBAEAH,aAA2B0B,GAAUvB,cAGrC,UAKA+F,WACAC,UAAeE,GACfz6C,4BACAyV,gBACahsB,GAAKyqD,IAClBtgB,sCACAsgB,IA1BAwG,IACAC,+BACAL,WACAt6C,4BACAyV,aACAptB,qBAEepP,GAAei7D,EAD9BtgB,iBAA8B+jB,iBAAoB/jB,GACpBygB,MAP9Bh1D,GACAs7D,oBACAtF,mBAA0Bx+D,GAAM,MAChCyjE,WACAt6C,6BACA7J,6BACAsf,gBAAuB5+B,GAAM,MAC7BwR,YAAkBwE,UAAQ+mC,2CAP1B1D,GACAyqB,gCACAL,WACAt6C,6BACA7J,yCACAsf,eAAwB5+B,GAAM,wBAC9BwR,WAAgBwE,kBAAewnD,GAC/B,sBAEA,QADA,wBAEA,SAEA,gDAdA,YAA2BuG,6CAC3B,sBACA,iBACA,uCACA,gBACA,0CACA,wBACA,OACAhnB,KACAygB,mCACA,eACA,qBACAE,MACAA,WACAD,QAEA,uBACA,aACAA,OAEA,SAjBA,SACAqG,+BACAL,WACAt6C,8BACA7J,gDACAsf,6CACAolC,IACA,WACA1F,yBACAA,yBACA9sD,UAAe4O,GAEfu8C,GACAmH,+BACAL,WACAt6C,8BACA46C,aACAzkD,8DACAsf,yBACAptB,YAAkB/V,WAAO6iE,2BAEnB2F,EAAK,CACXH,+BACAL,WACAt6C,8BACA7J,0CACAsf,WACA,YAAyB5+B,GAAMwa,eAC/BgjD,iBACA,oCACAzgB,kCACAA,GAEAvrC,UAAe4O,GAlCf7W,6CACAsqD,UAA0C0O,iBAAatN,uCACvD,mBACA,MAAYx5D,SAAQ4hE,EACpB,kBACAG,gBACWp9C,EAAei9C,GAE1B,UACAyG,uBACAL,WACAt6C,4BACA46C,aACAzkD,kBACAsf,4BACAptB,2BAEM0yD,GAAG,CACTJ,WACAL,WACAt6C,4BACA7J,qBACAsf,6BACAptB,UAAe4O,GAEf+jD,IACAL,uBACAL,WACAt6C,4BACA46C,aACAzkD,wBACAsf,6BACAptB,4BA1BA4yD,IACIC,GACA97D,GACAs7D,GACAr7D,EACA6wC,EACAirB,GAC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C+oE,GAAIhmB,IAGpC7D,YACA,6BAEA1zC,gBACA,MACA,4BACA,6BACA,uCAAkDu3C,GAASulB,mBAAqB9E,KAEhF,wDAGAzuD,+BACA,UACA4O,iBACAmmD,6BACAJ,aACAD,WACAt6C,4BACAyV,aACA,GAAY1rB,GAAKmqD,IACjB,0BACA,+BAEAtgB,8CAGAA,qCACA,UAEAyhB,kBACA,MAAgBmF,YAAWnG,EAC3BD,YACA,mCACA,eACA,uBACAE,iBACAF,aAA+BiG,GAAU/F,WAEzC,WA/EA,iBACA,aACAxI,oCACAsI,2BACAE,IACA/+C,iBACAsB,WACAq0B,iCACA,wBAOA,eACA,IAAU54C,SAAQ4hE,EAClBG,OACA,sBACAA,uBACAjrB,uBACA,OAAenyB,EAAei9C,GAC9B,SACAtgB,MACAkY,MACAlY,UAEA,cACA0gB,QACA,YACAA,cAGA1gB,aACA0gB,eACA1gB,QACAA,aACA0gB,eAGAxI,EACAwI,EACA14D,qCACA0U,UACAiF,yBAGA,UACAolD,oDACAL,WACAt6C,4BACA46C,cACAzkD,4CACAsf,cAA+B2jC,iBAAa0C,QAC5CzzD,cAEArC,IACA20D,+BACAL,WACAt6C,8BACA46C,cACAzkD,qDACAsf,oBACAptB,cAEAlB,IACAwzD,8BACAL,WACAt6C,kCAIA7J,yKAMAsf,WACA,yBACA,MACA,wEACA,kCACAigC,yCACA,yCACA,aACA,eACA,eACAn+C,iBACAs+C,OACAL,SAEA,oBAEAntD,YAAkB/V,WAAO4hE,sDApFnB6H,GAAM,CACRb,GACA97D,GACAs7D,GACAr7D,EACAoE,GACAH,GACA04D,GACAr3D,GACAG,GACAF,GACA2C,GACA/D,GACAi4D,GACAH,GACAz5D,GACAD,GACAgF,GACAq1D,GACAj2D,GACAmB,IAjBJ+0D,IACAC,KAAUlB,GACVmB,UAAelB,GAAK97D,GAAKs7D,IACzB2B,KAAUhB,GACViB,OAAYP,GACZ,WAAgBA,IAEhBQ,IACAC,OAAUlB,GACVmB,KAAUvsB,EACVwsB,MAAS5B,EACT6B,SAAYnJ,EACZoJ,SAAYt9D,EACZu9D,UAAa72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kEAA4D,IACvE,SACArH,gBACA+C,SACAqG,QACAC,gBACAC,gBACAC,uCACAl2D,UAAqBjP,IAErBs8D,EAAoBN,GAAIvkE,uBACxB,wBACA,UAAyBwlC,iBAAamb,mBACtC8iB,OACA,2BACckK,GAAYjK,GAAY,MAAS,MAC/CmB,EAQA3lB,YACA,kBAA2BssB,2CAG3BhgE,eACA,wBACA,8DACA,mBACA84D,kDACA,iCACA,mEAA+Ed,KAE/E,OArQA,iBACA,WACA,wBACA,sBACA,iCACAqB,GACArB,UACAvI,MAEAoI,sBACApI,MAEAA,GACAuI,cACAH,kBACA,cACAG,cACAA,UAAsBh7D,GAAgB66D,sBAEtC,QAAgB6E,GAAsB7E,KACtC,SACAK,OACA,eACYzrD,GAAMorD,cAClBA,2BACAG,WACAH,0BACAG,OAA2Bh7D,GAAgB66D,8BAE3CE,+BACAG,sBAEA,0BACA,MAAmBn7D,GAAS86D,2BAC5BK,IACAiB,EAAmBl8D,GAAUk8D,SAC7B,wBACA,sBAMAnB,UAHAA,qBAA6CmB,SAM7CnB,OAAmBj7D,GAAS86D,eAE5B,gBACA,cACA1iB,wBACAA,MACA8iB,2BACAD,WACAA,OAAmBh7D,GAAgBm4C,QAEnC6iB,kBA6MeoK,CAAiB5tE,SAGhC,eACA,GAAQgY,GAAYqrD,GACpB,SACA,mEA/QA,uBACAtjE,qBACAc,QACAb,YACAA,YACAA,eACAA,YAGA,iBAAoB6tE,GACpB9tE,mBACAc,+BAGA,oBACAd,mBACAc,4BAGA,MAAMitE,GAAa,WACnB,iBACA,OACAtK,qCACA,MAAYuK,cAAYvK,aACxBA,uBAAiCvI,aAAgBsI,IACjD,UACAG,IACAxmB,6CACAx4B,uBAEA,uBACA,mCACAg/C,0BACAD,OAKA,GAHAC,cACAA,8BAEAzI,oCAEA,uDACAta,cACAA,gCACA+iB,MAEA,mBACA,QACA,qBACAmB,yBACAlkB,0BAEA,oCACA6iB,mBAAiCE,MAAYiB,QApD7C,eAAgC31B,gEAChC,SACA61B,IACAF,IACAI,KACAC,KACAP,KACAoB,KACAE,QACAC,OACAC,OACAC,OACAG,QACA,kBAQA,OAPAR,IACA,mBACA,qBACA,mBACApC,oGACAoC,MAEAO,aACA,SAIArjB,GACA8hB,GACA,iBACA,qBACApB,4DACAkB,KACA,UACA,WACAA,GACAlB,8FACA,qCACAsB,EAGAA,QAFAA,KAGAC,KACAH,KACA,UAEA,UACAA,EACAE,EACAA,aAEApkB,KAGAqkB,aACAH,KACAJ,KACAE,KACA,UACA,SACAoB,IACAtC,8DACAsC,MACA,YACAM,cACAxB,KACAF,KACAkB,KACA,UACA,MACAG,GACAvC,wDACAuC,KACA,YACAK,cACAxB,KACAF,KACAkB,KACA,WAEArC,GAEAuC,QACAtC,4DAA2F2C,uBAC3FF,KACArB,KACAF,KACA,UACA,QACA,MACAsB,GACAxC,2CAA8E1gB,KAC9EkjB,KACApB,KACAF,KACA,cAIAlB,sCAAiE2C,iBACjEvB,KACAF,KAGA,uBACAwB,mCACA,UACAlL,GACA,kBACA,oBACA,mBACA,mCACAwI,mGACA,CACAuK,QACAC,QACAC,cACAvH,UACAwH,aACA3tE,UACA2uB,MACA6L,OACAV,sBAzHA,cACA,MACA,YACA,mBACA,YACA,aACA,2BACA,uBACA,2BACA,SACA,SACA,qBACA,sBACA,SACA,aACA,kBACA,wBACA,uBACA,sBACA,SACA,SACA,qBACA,sBACA,SACA,wBACA,SAEA,iBAEA,UA3BA,kBACA,MAAYquC,cAAatF,UACzB,UACA,SACA,6BACApI,EACA,cACaljD,EAAQ0rD,IACL1rD,EAAQ2rD,IACxBD,qBACA,gCACA,6BAPA,0DANA,oBACA,SACA,MACA,SACAC,KACA,kBACA,MAAoB1nD,iBAAe2kC,EACnC,cACA,QACA8iB,KACA,UACA,WACAD,OACAvI,6FACA,4BACAsI,EAGAA,OAFAA,IAGAG,KACA,UAEA,UACAH,IACAG,MACAD,KACA,cAEAxI,qCAAqE0J,iBAErE5hB,aAGA,OAAa4jB,oBAxBb,qEACAlhE,sDAJA,uBACA,MACA,mBACA,YACAg+D,EAHA,YAA2B2K,kCAA+B5K,OAC1D,MACA,YAAoB+F,GAAO/F,UAC3B,eACA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nD,UAAS+mC,KACrB0gB,OACA,QACA9iB,KACAkkB,KACA,YAAoBJ,aAAmBA,GACvC,aACA,uBAEA,CACA,oBACAf,MACAA,MACA,QACAmB,YANAlkB,KASA,OACAsa,yEAA6FsI,KAC7F,SACAwB,KACAC,WACA,YAAoBP,aAAkBA,GACtC,aACA,mBACA,QACAE,SAEA,UACAK,mBACA,UACA,UACAxB,OAEAvI,mBADA,0EAGA+J,mBACAD,wBACA,UACA,QACA9J,kCACA+J,mBACA,cAEA,CAEA/J,uBADA,4CAA4E4K,UAE5E,iBACAG,wBACAhB,eAIA,OAAayJ,4CAtKbnhE,QACA,MACA,OAAiB7L,6CACjB,qBAAuCuE,gBAAsBA,iBAC7D09D,WAqKA,eACA,0BACAF,OACAvI,mBAEAwI,GADAxI,4CAEA,YAAoByI,WAAkBA,KACtCD,sBACA,SA7KAj2D,cAEA,eACA,qBAAmCw4D,OAAQA,GAC3C,gBACA,oBAGA,MAFArlB,IAKA,qBACA,mDACA,iBACA,kBACAslB,oBACA,CAAiBxkE,gDAGjB,wBACAkjE,oBACAI,IACA,YAAoBiB,MAAgBA,GACpC,gBACA,oBAIA,CACA,eACA,2GACAxC,gCAEA,eACAqB,YACAE,IACA,MAXA,2BACAF,YAYAF,uBAEA,SACAF,KACAoB,KAEA,YAAoBG,MAAkBA,EACtChB,yBACA,YAA+BgB,MAAgBA,GAC/C,cACArB,uBACA,8BAIA,GAHA0B,KACAH,iBAEAA,eAIA,qEAHA3C,SACA,iCACA,cAEAC,uCACAyC,KAEAxC,IAAqBz9D,kBACrBg/D,kBACAP,QAEAwB,yBAEA,QACAxB,QACAoB,cACApB,UACAO,kBACAP,OACAoB,MAEA,OAEA,SACAb,QAEAP,QAGAO,OACAP,MACAoB,MAGA,oBACA,IACA,UACA,IACA,YAAqCG,aAAkBA,EACvDhB,yBACA,uBACAA,SACA,cAEAA,QAEA,oCACA,OAAavjE,kDA1Gb,YAA0B4hE,OAC1B,MAAY9/C,gCAA4B8/C,EACxC,MACAwB,EACA,8BACA,cACA,SACAlkB,EAAoB36C,SACpB6+D,EA6BA,iBACA,SACA,iBAEA,KACArB,kDACA,UACA,QACA,IACAA,0DAA8EH,OAC9E,UAEA,QACA,IACAG,sDAA0EH,OAI1E,UACAtgB,0BACA2rB,MAjDAniE,MACA,UACA,uBACAo0C,EAAoB36C,gBACpB6+D,EA+CA,iBACA,2CACA9hB,oDACA2rB,qCAlDAC,MACA,UACA,uBACAhuB,EAAoB36C,gBACpB6+D,EA0FA,iBACA,SACA,YAAoB5J,eAAuBA,GAC3C,aACA,2BAEA,aACA,MAAoB2T,iBAAeC,QACnCrL,KACAvI,YAEA,UACA,aACA,cACA,KACAuI,aACA,SAGA,IADAC,SACA,mBACAA,oBAEA,2BACA,SAAiC9iB,aAAkB8iB,GACnDD,iBACAvI,SAEA,CACA,wBACAlY,iDAA2EpC,KAC3E6iB,cAGA,mBAEA,UACA,aACA,wBACAE,YACA,WACAF,8BAGAA,KAGA,2CACAzgB,oDACAygB,EA1IAsL,MACA,cAGA,0EAA4FvL,KAC5F,CACA9hE,SACAwF,UACA0/D,WACA92B,iCAGA,mBACAm1B,EAAez/D,EAAUm+D,SACzB,OACAjiE,QACAwF,OACA0/D,kBACA92B,sBA8BA,eAQA,QACA,IACAkT,gDACAygB,iEAEAqB,GACA9hB,uBACAygB,6BAEA,gBACA,MACA,SACA,WACAC,MACAC,cAEA,IADAF,cACAvI,aACA,UACA,SACAsI,KAEAE,QAGAF,UACAE,OAEAC,cAEA,uBACA,qBACAzI,YACAsI,kBAwDA,iBACA,SACAtI,SACA,8CACA,0BAEA,WACAuI,SAEAvI,KADAlY,MACA,GAEA,WACAygB,OACA,CAAaoL,iBAEb,UACA,OACA3T,SACAv6D,OACAT,SACAyxB,OACApN,OACAk/C,OACArpB,OACAt1C,OACA0K,SACA6W,SACA5X,WACAy7D,WACA,QACA,QACA,QACA,UACA,WAEA,qBACA,sBAEAvG,IADA79D,qCACA6a,mBACA,aACA,0BACA,wDAAwEigC,KACxEA,EAEA,+BA1MA,qBACA,MAAYl/C,kCAA8B,wBAChC0L,GAAkB41C,sBAClBr1C,GAAiBq1C,sBAC3B8hB,IACAxB,8DACA,KACAsB,OAwBA,uBACA,MACA,WACA,SAAsBtkE,IACtB,WACA,sBACA,4BACA,wBAGA,SAFAqjE,UAKA,iBACA,kDACA,SACA,uBACA,yBAGAL,6BAAyC1iB,GAAQ8oB,0BACjD9oB,IAEA4iB,4CAA+DC,IAAQ,6BACvEH,EAAkBhjE,KA/ClB0uE,mBAiDA,mBACA,MACA,KACA,sBACA,+DACA,SAGA,SAAkB1uE,IAxDlB2uE,+BACA,MACA,IACA,iEACAjK,EAAiBhtD,EAAQitD,SAAkBh/D,GAAMg/D,SAEjDA,GACA/J,uCACA8J,MAAqB/+D,GAAMu9D,GAE3B,iBACAwB,WACAtB,IACAsB,UACAF,IACAE,SACAJ,WACAI,mBACArB,IACAqB,aACAA,EAlCA,mBACA,MACA,WACAvB,YACA,cAA8BvI,OAAQA,GACtC,WACA,mBACA,YACA,cACA,UACAoI,mBACA,SAKA,IADAE,SACA,mCACAF,mBACAE,SAEA,OAGA,SAjBA,UAAa6K,oCACb,qBACA,MAAYF,wCAAoC1K,EAChD,MACA,mBACA,QACAqB,EAiDA,aAAwB77B,YAAazlB,yBAAqBggD,GAC1D,YAAsBqB,GAAKpB,gBAC3BE,aACA/iB,EAAep7C,EAAU01D,gBACzB,8BACAta,YACA8iB,qBACAA,EAxDAwL,SACAvL,OACAzI,mEACA,UACA,aACA,2BACA,2BACA,eACA4J,EAAmBqK,GAAa7L,SAChCK,IACAmB,gCACA,UACA,gBACA,gBACA,kBACAA,EAAmB73D,GAAiBmiE,YACpCzL,IACAmB,gCACA,cAEA,qBACA,qCAAuD9hB,UAEvD,WACA8hB,kBACApB,IACA,iCACAoB,YAEAA,mBAEAA,EAEA,qBAAsDqJ,wCAAmCrJ,GACzF,MAMAE,EAAiBmK,GAAa7L,EAN9B,CACAp8D,cACAsc,OAAgB6rD,GAAmBrsB,OACnCokB,UACAnrD,WAE8B2kC,KAC9B,WACAokB,gCACAxB,IACAwB,kBACAtB,IACAsB,aACAA,EAnDA,eACA,sBACA,cACA,oBACA,kCACA,MAAYxhD,mBAAiB8/C,EAC7B,4CAEA,eACA,SACAG,KACAvI,KACA,YAAoBsI,aAAoBA,GACxC,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CA,aACA/wE,iDACA,0BACA+iD,MACA/iD,mCAEAgxE,YACA,sCAEAC,WACA,mDACAjxE,WACAA,YACA,KAEAkxE,QACA,iDAEAnuB,GACA,cACA,SACA,oCACA,aACA,uCACA,cACA,wCACA,MACA,sCACA,OACA,4CACA,gBACA,0CACA,eACA,yCACA,eACA,qDAIA,qBACA,YACA,8BAKA,GAxOA,WAoOAA,aACA/iD,kBACA+iD,kBAEA,YACA,eACA,uBACA,WACA,gBACA,qBACAygB,OAEA,QACA,eACA,qBAGA,MAFAA,KAIA,8DACA,wCACAxjE,mBACA,SAEA,qBACA,kCACA,8CACAA,mBACA,SAEA,YAhQA,aAiQAA,wCAGA,uBACA,mBACA,kCACA,qBACA,kCACA,kCACA,qBACA,iCACA,+BACAA,mBACAA,kBACA,MAEA,iCACA,+BACA,SAGA,kDACAA,wDACAA,wCACAA,0CAGA,wBACA,mBACA,mCACA,uCACA,8DACA,0CACAA,0BACAA,uBAEA,mCAGAA,oBACA,uBACA,YACA,2BACA,kCACA,iBACA,UACAA,qCAEA,EACA,sCACAA,0BACA,QACA,IACA,+BACAA,gBACAA,iBACA,WACA,QACA,IAEA,+BACA,UACA,IACA,gCACA,UACA,QACA,IACA,0CACA,QACA,IACA,gDACAwjE,qCACAxjE,iCACAA,yBACAA,gCAEA,6DAIA,QACAi7D,KACA,GACAlY,2BACAygB,4BACAzgB,MACA/iD,4BACU+iD,OACV,uBACA,YACA,4BACA,+BACA,QACAwgB,2CACA4N,YAIAlW,uBACA,oBACA,wBAGA,6BAtWA,aAwWAj7D,sBAGA,QACA,iBACAyjE,yDAEA,OADAA,iCACAF,gBACA,EACA,iBACA,IACA,wCACA,WACA,QACA,IACA,+BACAvjE,gBACAA,kBACA,WACA,QACA,IACA,+BACAA,gBACAA,kBACAA,gCACA,IACA,gCACA,WACA,QACA,IACA,6BACAA,6BACA,KACA,uBACA,gCACA,qCACAA,oBACA,eAKA,6BACAA,8CAIA,uBACA,wCACA,WACA,qCACAwjE,oCAIA,cACA,QACA,gCACAD,KACA,UACA,MACAC,+BAGA,yCACA,gBACA,mBACA,iCACA,UACA,MACAvI,+BAEA,aAEAuI,OAGA,WACA,eACA,qCACAA,qBAEA,sCACAxjE,sDAGAA,0BACAA,wBACA,eACA,QACA,yBACA,WACAA,gCACAwjE,cACAxjE,2CACA,QACA,MAEA,mEAGA,IAEAi7D,EAFAlY,aACAygB,IAEAvjE,qBAAqCg7D,mBAAuBsI,EAC5D,cACA,IACAC,KACA,UACA,KACAzgB,IACAygB,IACA,UACA,MACA,yBACA,mBACA,oCACA,YACA,cAGA,QAGA,mBACA,oCACA,wBACA,2BACAxjE,kBAEAA,wCACA,GACA,iCACA,UACA,MACA+iD,qCACc,OACd,WACA,eACA,oCACAA,sBAGA,yBACA,QACA,UACA0gB,iBAGA,IAFA,WACAA,oBACA,mBACAA,mBACA,4BAGA,MAFA1gB,IAKA,YAngBY,aAogBZ/iD,+BACAA,0CAGA,yBACA,IAEAujE,EAFAC,aACAvI,aAEA,yBACA,YACA,yBACA,qBACA,MACAuI,YAEA2N,OACA,yBACA,8BACA,MASA,GARA,WACA,UACAlW,KACAsI,QAGAC,KAEA,UACA,iCACA,UACA,MACAvI,uBAGA,CACA,qBACA,MACAuI,IAGA,2BA5iBY,aA+iBZxjE,yBACA+iD,gBAHA/iD,6BAGAoxE,WAEAruB,GACA,kBACA/iD,+BACAA,YACA+iD,GAEA,eAEAA,KACA,sCACA,gBACAkY,EACAj7D,mBACAi7D,WAEAuI,SACA,IACA,qBAGA,2BACA,IACA,wBACA,4CACAxjE,4BACAA,2BAEA,IACA,wCACAA,4BACAA,2BACA,QACA,QACA,IACA,sBACA,4BACAA,2CACAA,0BACAA,4BACAA,uBAGA,4BAGA,iBACAwjE,iBACA,sBACAA,mBACA,+DAGA,8BACA,qBACAxjE,kBACA,sCACAA,kBAEA,cAEA+iD,GACA,IACAkY,EADAuI,aAEA,GACAvI,yBACU,sBACV,mBACA,mBACAj7D,+BACAA,YAEAujE,aAEAxgB,GACA,eACAkY,iBACA,YACAA,mBACA,qCAxoBA,iBACA,YAAoBuI,aAAiBA,EACrC,iBACA,SACA,SAEA,eACA,YAAoBzgB,aAAiBA,EACrC,sBACA,YACA,cACA,UACA,cAEA,SAGA,SAEA,eACA,kCACA,YACA,aACA,2BACA,2BACA,kBACA,iBAEA,UAGA,eACA,mBACA,WACA,mBACA,aACA,kCACA,0BAEA,YACA,+CAGA,UAIA,eACA,MACA,gBACA,SACA,eACA9iD,eACA,sBACA,gBACA,uBACA,oBACA,mBACA,UACA,QAGA,+DAGA,4BAEA,eACA,mCACA,uBACA8iD,QACAA,UACAsuB,iCACAA,4BACAtuB,QACAA,sBACAA,MACAuuB,YACAvuB,YACAl7C,8CAEAk7C,kBAGAl7C,iDACAk7C,OAgCA,SAKAhjD,eAEAC,kBAEAA,iBAEAA,cAEAA,cAEAA,kBAEAA,cAEAA,eAEAA,aAEAA,eAAyBuxE,GACzBvxE,wBAUA+iD,QACA/iD,iCACAA,kBACA,yCACAA,aACAwjE,UACAxjE,kBAKA+iD,GAEA,GADA/iD,cACAA,cAIA,OAHAA,uBACAA,iBACAA,uBAGA,QAxIA,eACA,cAjCA,SAmCA,4BAjCA,OAmCA,qBAjCA,OAmCA,2BAjCY,OAmCZ,mBACA,MACA,sBACA,MACA,oBACA,OACA,SACA,OACA,oBACA,IACA,yBACA,IACA,6BACA,IACA,0BACA,IACA,2BACA,IACA,yBACA,IACA,2BACA,IACA,yBACA,IACA,cAEA,iBACA,QACA,KACA,kBACA,IACA,oBACA,IACA,2BACA,IACA,kBACA,IACA,mBACA,IACA,gBACA,IACA,iCACA,IACA,iCACA,QACA,IACA,4BAEA,YA+EqBwxE,CAASzuB,GAC9B,KAKA,gBACA/iD,kBACAA,iBACAA,uBAEA,CAGA,OAFAA,kBACAA,YACAwjE,OACA,UACAxjE,kBACAA,cACAA,gBACAA,qCACA,UACA,QACAA,6BACAA,uBACA,UACA,uBACA,oBACA,eACAA,iBACAA,uBACA,UACA,WACA,eAEAA,kBAEAA,0BAnCA,CACA,6BAAiD+iD,UACjD/iD,UAA8BiH,qDAC9BjH,8BAqCA,gCACAA,WAEAyxE,kBAOA,MANA,CACAxqE,eACAsc,mBACA4jD,mBACAnrD,4BAKA,qBACA,iDAUA,MACA,2BACA,mBACA,WACA,kCACA,YACA,aACA,2BACA,uBACA,gCACA,eACA,qCACA,YACA,kCACA,YACA,uCACA,kBACA,wCACA,UACA,uCAGAhc,eAhCA,CACA,gCACAA,WACAA,iBACAiH,eACAsc,mBACAvH,sBA4BAk1D,QACA,4CAEAnuB,GACA,4BAEA,KAIA,+BACAygB,MAEA,CACA,qBAMA,QAJA,uDACAA,mCACA,4BACAkO,MACAzW,YACA,WACAA,UACA,UACA,eACAA,gBACA,UACA,aACA,kCACA,WAGA,OAFAA,cAAyC3gC,6BACzCt6B,mBACA,IAEAujE,MAMA,OAFA7+D,iBAA4Cmf,oBAC5C7jB,gDAJAujE,UAOA,UAEA,aACA,kCACAA,QACAtI,cAAyC3gC,mBAEzCipC,UACA,UAEA,mBACA,kCAOA,aANAA,WACAtI,cAAyC3gC,wBACzCipC,MACAA,UAEA7+D,iBAA4Cmf,gBAC5C,cAIA7jB,iBACAA,YAEA,0BACA,sBACA,sBACA,6CACA,kCACAujE,IACAA,QACAA,SACAA,mBACAoO,cACA,cACApO,2DACA,oBACAtI,cAEAA,cAAyC3gC,gBACzCkpC,2BA7EA,CACA,2CACA,CAAoBv8D,gEAiFpB,sBACA,iBAEA,iBADA,CAAwBA,yDACxB,IACA,sBACA,YACA,cACA,UAEA,kBADAjH,kBACA,IACA,eACA,aACA,SACAiH,gBACAsc,mBACA+W,UAKA,MAHA,yBACAyoB,oCACA/iD,yBAIA,CACAiH,aACAsc,mBACAmS,sBAAmC11B,iCACnCgc,8BAGA+mC,GACA,WACA,6BACA,sBACA,YAOA,YANA4uB,mBACA3xE,iBACAA,aAGA+iD,gCACA,IAEA,aACA,UACA,YACA,cACA,UAEA,YADAA,+BAGA,gCACAygB,EACAxjE,wBAEA,CACAiH,aACAsc,mBACAmS,sBAAuC11B,mCACvCgc,4BAIA+mC,GACA,gCACA,MACAkY,KADA2W,kBAEA,MACA7uB,OACAwgB,QACAA,gCACAxgB,OAGAwgB,qBACA,SACAt8D,iBACAsc,gBACA4jD,gBACA/O,QAA0B99B,uBAE1Bt6B,kBACAA,6CAGAA,6BAEA+iD,GACA,sBACA,YACA,cACA,UAEA,YADAA,+BACA,IACA,SAKA,GAJAA,qBAEA/iD,kBACAA,cACAA,gBACA,kCACA,YACAA,8BACAwjE,sCAGAxjE,WACA,oBAGAA,iBACAA,uBAGA+iD,GACA,MACA,kCAEA,sBACA,UAEA,GADA/iD,kBACAi7D,SACA,2CACAwI,wCACA,oCACA,kCAEA1gB,cAAyCzoB,gCAEzC2gC,MACAA,6BAEAA,+BACA,WACA,YACA,UACA,WACAlY,cAAqCzoB,mCACrC2gC,MACAA,iCACA,CACA,6CACA,kCACAwI,6DACA,oBAIA,OAHA57D,sCACA47D,8BACA1gB,cAIAkY,+BAEA,OAEA,0BACA,yBACAj7D,yBACAi7D,oBACA,sBACA,aACA,MASA,YARAsI,YACAxgB,cAAyCzoB,2BACzCt6B,mBAEAi7D,MACAA,6BAEAA,gCACA,IACA,mBAaA,OAZAA,sCAEAsI,WACAxgB,cAAyCzoB,2BAEzCt6B,iBACAiH,iBACAsc,mBACA4jD,mBACA/O,QAAsC99B,6BARtC2gC,oCAUAj7D,mBACA,IACA,gBACA,SAC4C,GAC5Ci7D,SACAsI,mCACAxgB,cAAyCzoB,mDACzC+2C,0BACArxE,iBACAiH,iBACAsc,mBACA4jD,mBACA/O,QAAsC99B,qDAEtC+2C,gCACAC,YACAD,qBACA,oBACA3N,QACA/iB,QACAA,gCAEAsa,mBACAj7D,iBACAiH,iBACAsc,mBACA4jD,mBACA/O,QAAsC99B,6BAItC2gC,kCA5BAv2D,iBAA4Cmf,kCA8B5C,YADA7jB,mBACA,IACA,YACA,aACA,2BACA,wBACA,mCAYA,YAXAujE,YACAxgB,cAAyCzoB,wBACzCt6B,mBAEAi7D,MACAj7D,oBAGA0E,iBAA4Cmf,eAC5C7jB,oBAEA,QAEA,CACA,gCACA,KAMA,OALAujE,GACA,sBACA8N,gCACAtuB,cAA6CzoB,gBAC7Ct6B,2BAMAA,iBACAA,2BAEA+iD,GACA,MACA,kCACA,sBACA,UACA,YACA,2CACA0gB,wCACA,oCACA,kCAEA1gB,cAAyCzoB,gCAGzC2gC,+BACA,WACA,YACA,UACA,WACAlY,cAAqCzoB,+BACrC,CACA,6CACA,kCACAmpC,6DACA,oBAIA,OAHA57D,sCACA47D,8BACA1gB,cAIAkY,+BAEA,WACA,aACA,MACA,kCACA,MAEA,YADAA,+BACA,IACA,eACA,0BACA,MAKA,YAJAA,oCACAlY,cAAqCzoB,2BAErC2gC,gCAGA,yBACA,gCACA,KAEA,YADAj7D,yBAIAA,iBACAA,4BAEA+iD,GACA,kCACA,iCACA,MACA,SACA/iD,WACAi7D,qBACcA,uCAEd,kBACA,sBACA,YACA,mBAKA,aAJAuI,SACAzgB,cAAwCzoB,2BAExCkpC,gCACA,IACA,gBAOA,aANAA,WACAzgB,cAAwCzoB,2CACxCkpC,MACAA,6BAEA9+D,iBAA4Cmf,mCAC5C,IACA,YACA,cACA,cACA,aACA,MAOA,aANA2/C,WACAzgB,cAAwCzoB,2BACxCkpC,MACAA,6BAEAA,gCACA,IACA,YACA,aACA,2BACA,wBACA,mCAOA,aANAA,WACAzgB,cAAwCzoB,wBACxCkpC,MACAxjE,mBAEA0E,iBAA4Cmf,gBAC5C,IAEA,mBACA,eAEA,YADAk/B,6BAGA,gCAEAkY,EACAj7D,0BAEAA,iBACAA,iBAGA,CACA,qBACA,yBACA,8BACA,uBACAi7D,+BAEA,GAEA,6BACA,4BACA,MACAwI,KADAmO,OAEAF,MACA,qCACAhO,yBACA,SACAz8D,iBACAsc,gBACA4jD,gBACA/O,QAA8B99B,uBAE9Bt6B,kBACAA,6CAGAA,2BApBAA,iBACAA,aAuBA6xE,cACA,mBACA,kCACA,YACA7xE,8BACAwjE,gCAGA,OACAv8D,OACAsc,mBACA4jD,mBACAnrD,oBAGA81D,mBACA,sBACA,YACA,aACA,2BACA,uBACA,sCACA,sBACA,OACA7qE,oBACAsc,mBACA4jD,mBACAxiD,yBACA3I,eAEA,qBACA,iBACA,OACA/U,uBACAsc,mBACA4jD,mBACA7sC,uBACA89B,SACAp9B,YAEA,eACA,OACA/zB,iBACAsc,mBACA4jD,mBACA/O,QAA8B99B,gCAE9B,oBACAt6B,kBACA,MACAi7D,KADA2W,OAEA,gCACA,CACA3qE,iBACAsc,mBACA4jD,mBACA/O,QAA8B99B,eAG9B,iBACAt6B,kBACA,MACAi7D,KADA2W,OAEA,OACA3qE,iBACAsc,mBACA4jD,mBACA/O,QAA8B99B,4CAI9B,YAEAy3C,uBAGA,QAFA,uBAEA/xE,iBAEA+iD,8DAEAA,GACA,yBACAA,MACAA,6BAEAA,yBACA,8BACA/iD,sBAGA+iD,GACA,sBACA,YACA,gBACA,cACA,mBACA,mBACA,sBACA/iD,iBACAA,YACA,UACA,UACAA,kBAGA,QAGA+iD,MACAA,6BAEAA,yBACA,8BACA/iD,cAj2BA,SACAD,cACAC,mBAKAA,2CAMAA,iBACA,QACAi7D,yBACA,WACA,eACAj7D,qBACAwjE,MAEAvI,IAEA,0BACA,OAAyB8S,gBACzB,SACA,OAAyBA,cAEzB,OAAqBA,aADrB/tE,qBACqB,KA1BrB,eACA,gCAIA,OAAagyE,YAHb3O,kBACAtgB,OAA6BkvB,IAC7B,KACaxJ,gBA8Cb,mBACA,MACA,qBACAxN,SAEA,+BACAuI,KAEA,QA5BA,oBACA,MAAYwO,8BAA4BE,MACxC3O,MAAuB4O,GAAM,6BAC7B1O,MAAyB2O,GAAQrvB,GAEjC,WACA,iDACA,MACA,GACA,+BACA2gB,kBAAgC4L,GAAc3uB,+GAC9C,YAHA+iB,IAMA,cACAA,iBAA2BoK,GAAazK,MACxCK,mBAA6BoK,GAAazK,OAE1CK,EAUA2O,MACA,MACA,YAEA,GADA9O,sBAAoC4E,GAAI5E,uBACxCA,mBACA,iCACA,kBAEAA,YAEA,6BAAoC+O,WAAmB9O,IAEvD,YAAkBH,OAClB,WASA,GARA,uCACApI,SAEA,WACAuI,KAEA,qBACAA,YACA,oBACA,sBACAA,kBAA0D2D,UAAY,CAAIA,UAE1E,eACA,MAAgBmC,iBAAgB9F,SAChC,MACA,OAEA,WAAeoM,GAAQvM","names":["constructor","this","e","effect","effectNode","context","Ae","selectors","href","anchor","ce","b","oxw","changed","super","ngOnInit","attackBonus","spell","custom","adv","includes","advantage","customadvantage","onCustomChange","onAdvantageSelectChange","u","value","emit","onCustomAdvantageChange","ut","l","remove","ei","acrobatics","animalHandling","arcana","athletics","deception","history","initiative","insight","intimidation","investigation","medicine","nature","perception","performance","persuasion","religion","sleightOfHand","stealth","survival","strength","dexterity","constitution","intelligence","wisdom","charisma","k","filteredSkills","skillCtrl","valueChanges","pipe","_filter","skillKeyToName","skills","indexOf","splice","skillsChange","selected","push","option","skillInput","nativeElement","setValue","Object","entries","filter","v","toLowerCase","dn","contestAbility","checkType","dc","onCheckTypeChange","contestTie","success","fail","F","de","ke","treeChanged","abilityWrapper","ability","length","contestAbilityWrapper","advantageWrapper","le","wn","onAbilitySelectionChange","updateSearchFilteredGroupedLimitedUse","errorBehaviourWrapper","errorBehaviour","loadLimitedUse","counter","counterType","onCounterTypeChange","slot","id","typeId","selectedLimitedUse","limitedUse","name","searchFilteredGroupedLimitedUse","type","gamedataService","getLimitedUse","subscribe","data","find","xt","addHigher","calcLevels","C","possibleLevels","level","Array","from","parent","higher","Map","ngOnChanges","gt","Ge","An","tt","Re","_t","Bt","Fn","je","attack_advantage","defaultOptions","to_hit_bonus","damage_bonus","magical_damage","silvered_damage","resistances","isList","immunities","vulnerabilities","ignored_resistances","ac_value","ac_bonus","max_hp_value","max_hp_bonus","save_bonus","save_adv","save_dis","check_bonus","check_adv","check_dis","deleteClicked","deleteState","delete","deletePassiveEffect","deleteAttack","deleteButton","Ke","rt","fb","array","group","passiveEffects","attacks","buttons","map","populatePassiveEffectForm","onPassiveEffectsChange","populateAttackForm","onAttacksChange","populateButtonForm","onButtonsChange","durationWrapper","duration","toString","effects","addPassiveEffect","control","St","passiveEffectTypeValidator","effectType","emitEvent","removeAt","controls","get","hasDefaultOptions","isCustomValue","isValueIntExpression","addAttack","bo","attack","setTimeout","verb","thumb","phrase","proper","criton","extraCritDamage","Ye","extra_crit_damage","defaultDc","Qe","defaultDC","defaultAttackBonus","bi","defaultCastingMod","to","_automation","no","automation","_v","addButton","label","style","buttonStyleOptions","some","customStyle","isCustomButtonStyle","Sn","removeParentWrapper","removeParent","$e","L","w","loadSpells","castingMod","onSpellSelectionChange","entity_id","spellToCast","updateSearchFilteredSpells","searchFilteredSpells","allSpells","getAllEntitlements","values","entity_type","onTargetPosChange","onTargetSortChange","N","selectedTarget","isNumber","target","selectedTargetSort","sortBy","onTargetSelectChange","Et","onRefSelectionChange","debouncedUpdateSearchFilteredGroupedRefs","Hn","_i","text","ref","updateSearchFilteredGroupedRefs","loadRefs","textType","onTextTypeChange","updateSelectedRef","type_id","selectedAbilityRef","allRefs","searchFilteredGroupedRefs","getDescribableEntities","$n","Qn","icon","tooltip","_children","childrenSubject","be","children","next","at","ancestors","effectsToNodes","hit","miss","save","ieffect2","ieffect2AttackNode","ieffect2ButtonNode","condition","onTrue","onFalse","check","isSpell","effectTreeNodeMap","WeakMap","effectToNode","ai","getContext","Li","Ni","withContext","childrenBuilders","call","set","parentArray","isIEffect","isIEffectButton","assign","ieffect2Node","component","damage","temphp","ieffect","remove_ieffect","roll","variable","addEffect","Gn","Zo","rules","Yi","every","satisfiedRules","getRuleIcon","getRuleLabel","stat","amount","dice","generateAttackAndDamagePreset","doSaveForHalfPreset","console","error","newEffect","created","Vt","updateEffectData","editedYaml","deleted","Wn","moveUp","moveDown","On","isFirst","isLast","loadComponent","effectEditorDirective","viewContainerRef","clear","createComponent","instance","vi","effectYAML","beginEditEffectNode","onNewEffectCreated","toggleNode","refreshTree","yi","Kn","U","K","nodeBuilder","No","selectedEffectNode","dataSource","treeControl","dataNodes","metaKey","ctrlKey","toggleDescendants","toggle","zt","yaml","jsonOrYaml","jsonData","JSON","stringify","copy","select","document","execCommand","setSelectionRange","Le","H","ie","he","input","validateAndExit","loading","parse","validator","dialogRef","close","getEntitlements","entitlements","http","re","allEntitlements","describableEntities","entityFromEntitlement","Se","ft","Ce","ee","factory","undefined","FUNC_ERROR_TEXT","HASH_UNDEFINED","PLACEHOLDER","WRAP_ARY_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrimStart","reWhitespace","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reForbiddenIdentifierChars","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboRange","rsComboMarksRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsVarRange","rsBreakRange","rsMathOpRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","global","freeSelf","self","root","Function","freeExports","Pt","exports","nodeType","freeModule","module","moduleExports","freeProcess","process","nodeUtil","require","types","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","func","thisArg","args","apply","setter","iteratee","accumulator","index","predicate","resIndex","result","baseIndexOf","comparator","offset","initAccum","asciiSize","baseProperty","collection","eachFunc","key","fromIndex","fromRight","strictIndexOf","baseFindIndex","baseIsNaN","baseSum","object","current","n","string","slice","trimmedEndIndex","replace","props","arrayMap","cache","has","strSymbols","chrSymbols","placeholder","deburrLetter","basePropertyOf","escapeHtmlChar","chr","test","size","forEach","transform","arg","hasUnicode","lastIndex","unicodeSize","match","unicodeToArray","split","asciiToArray","charAt","unescapeHtmlChar","_","uid","defaults","pick","Date","Error","Math","String","TypeError","arrayProto","prototype","funcProto","objectProto","coreJsData","funcToString","hasOwnProperty","idCounter","maskSrcKey","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","Symbol","Uint8Array","allocUnsafe","getPrototype","overArg","getPrototypeOf","objectCreate","create","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","toStringTag","defineProperty","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Promise","Set","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","entry","__data__","MapCache","add","ListCache","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","baseTimes","isIndex","baseRandom","shuffleSelf","copyArray","baseClamp","eq","baseAssignValue","objValue","baseEach","copyObject","configurable","enumerable","writable","paths","skip","number","lower","upper","bitmask","customizer","stack","isDeep","isFlat","isFull","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","baseAssign","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","cloneSymbol","initCloneByTag","Stack","stacked","Nl","subValue","baseClone","getAllKeysIn","getAllKeys","arrayEach","assignValue","wait","arrayIncludes","isCommon","valuesLength","baseUnary","f","arrayIncludesWith","cacheHas","SetCache","outer","computed","valuesIndex","lodash","templateSettings","escape","evaluate","interpolate","imports","baseLodash","Hash","assocIndexOf","pop","hash","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","isSymbol","depth","isStrict","isFlattenable","baseFlatten","arrayPush","baseFor","createBaseFor","baseForRight","arrayFilter","isFunction","path","castPath","toKey","keysFunc","symbolsFunc","isOwn","unmasked","getRawTag","objectToString","other","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","last","baseGetTag","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","mapToArray","isPartial","setToArray","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsEqual","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","isMasked","identity","baseMatchesProperty","baseMatches","property","isPrototype","nativeKeysIn","isProto","isArrayLike","getMatchData","matchesStrictComparable","baseIsMatch","isKey","isStrictComparable","hasIn","srcIndex","mergeFunc","safeGet","assignMergeValue","newValue","isTyped","X","xe","lt","ae","me","rr","po","toPlainObject","baseMergeDeep","baseMerge","iteratees","orders","baseGet","getIteratee","comparer","sort","baseSortBy","baseMap","criteria","objCriteria","othCriteria","ordersLength","compareAscending","compareMultiple","baseSet","baseIndexOfWith","indexes","previous","baseUnset","start","setToString","overRest","arraySample","nested","baseSetData","Er","baseSetToString","wr","constant","end","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","S","M","baseToString","createSet","seenIndex","updater","isDrop","baseSlice","actions","arrayReduce","action","baseUniq","baseDifference","assignFunc","valsLength","isArrayLikeObject","stringToPath","castRest","baseRest","arrayBuffer","typedArray","valIsDefined","valIsReflexive","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","holdersIndex","rightIndex","rightLength","isNew","p","initializer","arrayAggregator","baseAggregator","assigner","sources","guard","isIterateeCall","iterable","methodName","stringToArray","trailing","castSlice","callback","words","deburr","arguments","thisBinding","findIndexFunc","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","WRAP_CURRY_FLAG","isFlip","createCtor","getHolder","holdersCount","countHolders","composeArgs","composeArgsRight","newHolders","replaceHolders","createRecurry","createHybrid","fn","reorder","toIteratee","baseInverter","operator","defaultValue","baseToNumber","arrayFunc","chars","charsLength","baseRepeat","stringSize","step","toFinite","o","baseRange","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","precision","toInteger","pair","Ao","noop","setToPairs","baseToPairs","srcBitmask","newBitmask","WRAP_BIND_FLAG","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsMerge","isPlainObject","arrLength","arrStacked","arrValue","arraySome","flatten","baseGetAllKeys","otherFunc","baseIteratee","isKeyable","getValue","baseIsNative","us","stubArray","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","intersection","mapped","castArrayLikeObject","baseIntersection","intersectionBy","intersectionWith","pull","pullAll","basePullAll","pullAt","baseAt","basePullAt","union","unionBy","unionWith","unzip","without","xor","baseXor","xorBy","xorWith","zip","zipWith","unzipWith","interceptor","wrapperAt","countBy","createAggregator","createFind","findIndex","findLast","findLastIndex","arrayEachRight","groupBy","invokeMap","baseInvoke","keyBy","partition","baseOrderBy","createWrap","bind","bindKey","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","time","timerExpired","invokeFunc","timeSinceLastCall","shouldInvoke","trailingEdge","timeWaiting","remainingWait","isInvoking","leadingEdge","debounced","cancel","flush","defer","baseDelay","delay","resolver","memoized","Cache","overArgs","transforms","funcsLength","partial","partialRight","rearg","createRelationalOperation","baseGt","gte","baseIsArguments","baseLt","lte","isString","done","iteratorToArray","remainder","baseTrim","isBinary","createAssigner","assignIn","assignInWith","assignWith","propsIndex","propsLength","defaultsDeep","mergeWith","hasPath","baseHasIn","invert","createInverter","invertBy","Fe","invoke","arrayLikeKeys","baseKeys","baseKeysIn","merge","omit","CLONE_DEEP_FLAG","customOmitClone","basePickBy","basePick","prop","toPairs","createToPairs","toPairsIn","baseValues","camelCase","createCompounder","word","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","createCaseFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","isError","bindAll","methodNames","flow","createFlow","flowRight","method","methodOf","baseFunctions","chain","over","createOver","overEvery","arrayEvery","overSome","basePropertyDeep","range","createRange","rangeRight","createMathOperation","augend","addend","createRound","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","before","castArray","chunk","compact","concat","cond","conforms","baseConformsTo","baseConforms","properties","curry","curryRight","debounce","drop","dropRight","dropRightWhile","baseWhile","dropWhile","fill","toLength","baseFill","baseFilter","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","mixin","negate","nthArg","baseNth","omitBy","pickBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","rest","sampleSize","arraySampleSize","baseSampleSize","setWith","shuffle","arrayShuffle","baseShuffle","sortedUniq","baseSortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toArray","toPath","isArrLike","ze","unary","uniq","uniqBy","uniqWith","unset","update","baseUpdate","castFunction","updateWith","valuesIn","wrap","zipObject","baseZipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","position","escapeRegExp","baseEvery","findKey","baseFindKey","findLastKey","forEachRight","forIn","forInRight","forOwn","forOwnRight","baseHas","head","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isInteger","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","baseExtremum","maxBy","mean","baseMean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","createPadding","padEnd","padStart","radix","floating","t","temp","reduce","baseReduce","reduceRight","arrayReduceRight","repeat","runInContext","sample","baseSample","baseSome","sortedIndex","baseSortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","customDefaultsAssignIn","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","escapeStringChar","times","toLower","toSafeInteger","toUpper","trim","charsStartIndex","charsEndIndex","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","baseWrapperValue","iterIndex","commit","wrapped","toJSON","define","subscriber","d","dest","importantProperties","setProperty","removeProperty","element","enable","userSelect","extendStyles","top","opacity","left","initialTransform","computedStyle","getPropertyValue","part","clientRect","getBoundingClientRect","right","bottom","width","height","x","y","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","_document","positions","elements","scrollPosition","getViewportScrollPosition","scrollTop","scrollLeft","getMutableClientRect","handleScroll","event","_getEventTarget","cachedPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","node","contains","adjustClientRect","window","scrollY","scrollX","cloneNode","descendantsWithId","querySelectorAll","nodeName","removeAttribute","i","transferCanvasData","transferInputData","transferData","selector","descendantElements","cloneElements","cloneUniqueId","drawImage","_a","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","activeEventListenerOptions","dragImportantProperties","_config","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","Subject","_pointerMoveSubscription","Subscription","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_handles","_disabledHandles","_direction","dragStartDelay","_disabled","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","targetHandle","_getTargetHandle","disabled","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","abs","_pickupPositionOnPage","dragStartThreshold","isDelayElapsed","_dragStartTime","_getDragStartDelay","container","_dropContainer","_endDragSequence","isDragging","isReceiving","preventDefault","run","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","ParentPositionTracker","registerDragItem","coerceBooleanProperty","_toggleNativeDragInteractions","handle","toggleNativeDragInteractions","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","coerceElement","disabledHandles","withPreviewTemplate","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","addEventListener","_initialTransform","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","unsubscribe","change","_containInsideBoundaryOnResize","_parentDragRef","dispose","_b","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","complete","reset","disableHandle","enableHandle","withDirection","direction","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_preview","_previewRef","destroy","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","parentNode","_createPlaceholderElement","createComment","shadowRoot","_getShadowRoot","insertBefore","_createPreviewElement","toggleVisibility","body","appendChild","replaceChild","_getPreviewInsertionPoint","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","currentIndex","isPointerOverContainer","_isOverContainer","item","previousIndex","previousContainer","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","preview","rootRect","viewRef","viewContainer","createEmbeddedView","detectChanges","getRootNode","matchElementSize","getTransform","deepCloneNode","margin","zIndex","classList","setAttribute","className","placeholderRect","getComputedStyle","transitionedProperties","parseCssPropertyValue","propertyIndex","rawDurations","rawDelays","parseCssTimeUnitsToMs","getTransformTransitionDurationInMs","handler","propertyName","removeEventListener","timeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","constrainPosition","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","combineTransforms","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","rootNodes","ELEMENT_NODE","createElement","sourceRect","toIndex","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","_isDragging","_itemPositions","_previousSwap","drag","overlaps","_draggables","_siblings","_orientation","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","interval","animationFrameScheduler","takeUntil","_scrollNode","scrollStep","scrollBy","withScrollableParents","registerDropContainer","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","newIndex","_getItemIndexFromPointerPosition","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","parentElement","_cacheItemPositions","_cacheParentPositions","_reset","withItems","items","previousItems","draggedItems","_cacheItems","connectedTo","withOrientation","orientation","_scrollableElements","currentItem","pointerDelta","_clientRect","isPointerNearClientRect","siblings","isHorizontal","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","moveItemInArray","sibling","isDraggedItem","elementToOffset","Q","isInsideClientRect","scrollNode","verticalScrollDirection","horizontalScrollDirection","computedVertical","getVerticalScrollDirection","computedHorizontal","getHorizontalScrollDirection","scrollHeight","clientHeight","scrollWidth","clientWidth","getElementScrollDirections","getViewportSize","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","elementToMeasure","a","_stopReceiving","immediateSibling","itemPositions","lastItemRect","firstItemRect","_canReceive","elementFromPoint","_startReceiving","activeSiblings","activeCapturingEventOptions","capture","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","config","_clearGlobalListeners","streams","Observable","observer","eventOptions","ngOnDestroy","DragDropRegistry","ɵfac","i0","DOCUMENT","ɵprov","DEFAULT_CONFIG","createDrag","DragRef","createDropList","DropListRef","DragDrop","i1","CDK_DRAG_PARENT","InjectionToken","CDK_DROP_LIST_GROUP","_items","CdkDropListGroup","ɵdir","provide","useExisting","CDK_DRAG_CONFIG","_uniqueIdCounter","CDK_DROP_LIST","dragDrop","_changeDetectorRef","_scrollDispatcher","_dir","_group","_destroyed","EventEmitter","_unsortedItems","_dropListRef","_assignDefaults","_setupInputSyncSubscription","_handleEvents","CdkDropList","_dropLists","addItem","_syncItemsWithRef","removeItem","getSortedItems","documentPosition","_dragRef","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","startWith","coerceArray","list","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","coerceNumberProperty","markForCheck","draggingDisabled","listAutoScrollDisabled","listOrientation","i3","useValue","CDK_DRAG_HANDLE","parentDrag","_stateChanges","_parentDrag","CdkDragHandle","CDK_DRAG_PLACEHOLDER","templateRef","CdkDragPlaceholder","CDK_DRAG_PREVIEW","_matchSize","CdkDragPreview","_viewContainerRef","_selfHandle","subscription","movedEvent","CdkDrag","_syncInputs","ngAfterViewInit","onStable","_updateRootElement","_setupHandlesListener","freeDragPosition","changes","rootSelectorChange","rootElementSelector","positionChange","firstChange","closest","_getBoundaryElement","boundary","childHandleElements","switchMap","handleInstance","dragRef","E","DragDropModule","ɵmod","ɵinj","CdkScrollableModule","ye","qt","Alias","Scalar","Seq","s","wt","c","r","h","g","We","it","atDocument","explicit","version","tagName","tagString","Value","anchors","Rn","aliasCount","Number","ht","createNode","B","onAnchor","I","Cn","A","Dt","Z","$","Xe","schema","sourceObjects","addIn","deleteIn","getIn","hasAllNullValues","setIn","Un","Tn","En","indentAtStart","Y","ue","pe","G","z","V","se","oe","fe","lineWidth","minContentWidth","Nt","implicitKey","kt","comment","qn","Lt","actualString","pt","go","defaultKeyType","doc","indent","indentStep","defaultStringType","directives","doubleQuotedAsJSON","doubleQuotedMinMultiLineLength","falseStr","indentSeq","nullStr","simpleKeys","singleQuote","trueStr","verifyAliasOrder","onTagObj","jt","ti","Ii","ni","Yt","allNullValues","intAsBigInt","logLevel","prettyErrors","strict","uniqueKeys","blockItem","qe","ui","ot","Kt","mt","flowChars","itemIndent","onChompKeep","onComment","keepUndefined","Ve","ii","default","nodeClass","replacer","pn","rn","identify","format","NaN","P","De","st","Tt","Jt","ge","At","ki","oi","si","ri","Ki","li","mi","Zi","Zt","ci","ji","Lo","_o","mo","core","failsafe","json","yaml11","Vi","binary","bool","float","floatExp","floatNaN","floatTime","int","intHex","intOct","intTime","null","omap","seq","timestamp","vo","customTags","Jn","jn","createAlias","gi","anchorPrefix","setAnchors","createPair","xn","hn","setSchema","yo","toJS","keep","mapAsMap","mapKeyWarned","maxAliasCount","Yn","zi","Xi","eo","line","comma","found","spaceBefore","hasNewline","composeNode","indicator","onError","startOnNewline","Rt","mode","Ue","Je","fold","Vr","jr","es","ar","lr","sr","yt","ts","Co","Ci","decorate","qo","streamInfo","errors","warnings","Mn","Ro","Ui","Uo","Ot","$t","rs","Bo","io","Xt","BREAK","SKIP","REMOVE","itemAtPath","parentCollection","wo","fi","atLineEnd","continueScalar","getLine","hasChars","setNext","peek","sn","pushCount","gn","To","as","ss","sourceToken","dr","xo","Fi","flowScalar","startBlockValue","atIndentedComment","lineCounter","$o","hr","Ho","cr","en","reviver"],"sourceRoot":"webpack:///","sources":["./src/app/shared/automation-editor/effect-editor/shared/EffectComponent.ts","./src/app/shared/automation-editor/effect-editor/shared/autodoc-link.component.ts","./src/app/shared/automation-editor/effect-editor/attack-effect/attack-effect.component.html","./src/app/shared/automation-editor/effect-editor/attack-effect/attack-effect.component.ts","./src/app/shared/automation-editor/effect-editor/check-effect/ability-select.component.html","./src/app/shared/automation-editor/effect-editor/check-effect/ability-select.component.ts","./src/app/shared/automation-editor/effect-editor/check-effect/check-effect.component.html","./src/app/shared/automation-editor/effect-editor/check-effect/check-effect.component.ts","./src/app/shared/automation-editor/effect-editor/condition-effect/condition-effect.component.ts","./src/app/shared/automation-editor/effect-editor/condition-effect/condition-effect.component.html","./src/app/shared/automation-editor/effect-editor/counter-effect/counter-effect.component.html","./src/app/shared/automation-editor/effect-editor/counter-effect/counter-effect.component.ts","./src/app/shared/automation-editor/effect-editor/shared/higher-level.component.ts","./src/app/shared/automation-editor/effect-editor/damage-effect/damage-effect.component.html","./src/app/shared/automation-editor/effect-editor/damage-effect/damage-effect.component.ts","./src/app/shared/automation-editor/effect-editor/ieffect-effect/ieffect-effect.component.html","./src/app/shared/automation-editor/effect-editor/ieffect-effect/ieffect-effect.component.ts","./src/app/shared/automation-editor/effect-editor/ieffect-effect/passiveEffects.ts","./src/app/shared/automation-editor/effect-editor/shared/doubleclick-delete-button.component.ts","./src/app/shared/automation-editor/effect-editor/ieffect-effect/ieffect2-effect.component.html","./src/app/shared/automation-editor/effect-editor/ieffect-effect/ieffect2-effect.component.ts","./src/app/shared/automation-editor/effect-editor/remove-ieffect-effect/remove-ieffect-effect.component.ts","./src/app/shared/automation-editor/effect-editor/roll-effect/roll-effect.component.html","./src/app/shared/automation-editor/effect-editor/remove-ieffect-effect/remove-ieffect-effect.component.html","./src/app/shared/automation-editor/effect-editor/roll-effect/roll-effect.component.ts","./src/app/shared/automation-editor/effect-editor/save-effect/save-effect.component.html","./src/app/shared/automation-editor/effect-editor/save-effect/save-effect.component.ts","./src/app/shared/automation-editor/effect-editor/spell-effect/spell-effect.component.html","./src/app/shared/automation-editor/effect-editor/spell-effect/spell-effect.component.ts","./src/app/shared/automation-editor/effect-editor/target-effect/target-effect.component.html","./src/app/shared/automation-editor/effect-editor/target-effect/target-effect.component.ts","./src/app/shared/automation-editor/effect-editor/temphp-effect/temphp-effect.component.html","./src/app/shared/automation-editor/effect-editor/temphp-effect/temphp-effect.component.ts","./src/app/shared/automation-editor/effect-editor/text-effect/text-effect.component.html","./src/app/shared/automation-editor/effect-editor/text-effect/text-effect.component.ts","./src/app/shared/automation-editor/effect-editor/variable-effect/variable-effect.component.html","./src/app/shared/automation-editor/effect-editor/variable-effect/variable-effect.component.ts","./src/app/shared/automation-editor/utils.ts","./src/app/shared/automation-editor/new-effect-button.component.ts","./src/app/shared/automation-editor/effect-editor/unknown-effect/unknown-effect.component.html","./src/app/shared/automation-editor/effect-editor/unknown-effect/unknown-effect.component.ts","./src/app/shared/automation-editor/effect-editor/effect-editor.component.html","./src/app/shared/automation-editor/effect-editor/effect-editor.component.ts","./src/app/shared/automation-editor/automation-editor.component.html","./src/app/shared/automation-editor/automation-editor.component.ts","./src/app/shared/dialogs/json-export-dialog/json-export-dialog.component.ts","./src/app/shared/dialogs/json-export-dialog/json-export-dialog.component.html","./src/app/shared/dialogs/json-import-dialog/json-import-dialog.component.html","./src/app/shared/dialogs/json-import-dialog/json-import-dialog.component.ts","./src/app/shared/gamedata.service.ts","./node_modules/lodash/lodash.js","./node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js","./node_modules/@angular/cdk/fesm2015/drag-drop.mjs","javascript/esm|/home/runner/work/avrae.io/avrae.io/node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js"],"sourcesContent":["import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Spell} from '../../../../schemas/homebrew/Spells';\nimport {AutomationEffect} from '../../types';\nimport {AutomationEffectTreeNode, NodeContext} from '../../utils';\n\n@Component({template: ''})\nexport abstract class EffectComponent<T extends AutomationEffect> {\n  @Input() effectNode: AutomationEffectTreeNode;\n  @Input() spell: Spell;\n\n  @Output() changed = new EventEmitter();\n  @Output() treeChanged = new EventEmitter();\n  @Output() deleted = new EventEmitter();\n\n  get effect(): T {\n    return this.effectNode.effect as T;\n  }\n\n  get context(): NodeContext {\n    return this.effectNode.context;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'avr-autodoc-link',\n  template: `\n    <a [href]=\"href\" target=\"_blank\">View the documentation on ReadTheDocs.</a>\n  `,\n  styles: []\n})\nexport class AutodocLinkComponent {\n  @Input() anchor: string;\n\n  get href(): string {\n    return `https://avrae.readthedocs.io/en/latest/automation_ref.html#${this.anchor}`;\n  }\n}\n","<p>\n  An Attack effect makes an attack roll against a targeted creature.\n  <avr-autodoc-link anchor=\"attack\"></avr-autodoc-link>\n</p>\n\n<!-- attack bonus -->\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\">\n  <mat-checkbox matTooltip=\"If not checked, uses the caster's default spell attack bonus.\"\n                [(ngModel)]=\"custom\"\n                (change)=\"changed.emit(); onCustomChange()\"\n                *ngIf=\"spell != null\">\n    Has custom attack bonus\n  </mat-checkbox>\n  <mat-form-field fxFlex=\"grow\" *ngIf=\"custom\">\n    <input matInput\n           placeholder=\"Attack Bonus\"\n           class=\"text-monospace\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.attackBonus\">\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n      calculate\n    </mat-icon>\n  </mat-form-field>\n</div>\n\n<!-- advantage -->\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\">\n  <mat-form-field matTooltip=\"The default advantage for this attack roll.\">\n    <mat-label>Advantage</mat-label>\n    <mat-select [(value)]=\"advantage\" (selectionChange)=\"onAdvantageSelectChange($event)\">\n      <mat-option value=\"0\">Flat</mat-option>\n      <mat-option value=\"1\">Advantage</mat-option>\n      <mat-option value=\"2\">Elven Accuracy</mat-option>\n      <mat-option value=\"-1\">Disadvantage</mat-option>\n      <mat-option value=\"custom\">Custom</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field fxFlex=\"grow\" *ngIf=\"advantage === 'custom'\">\n    <input matInput\n           [(ngModel)]=\"customadvantage\"\n           placeholder=\"Custom Advantage\"\n           class=\"text-monospace\"\n           (change)=\"onCustomAdvantageChange(); changed.emit()\"\n           matTooltip=\"0 for Flat\n1 for Advantage\n2 for Elven Accuracy\n-1 for Disadvantage\"\n           [matTooltipClass]=\"'adv-tooltip'\">\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n      calculate\n    </mat-icon>\n  </mat-form-field>\n</div>\n\n<p>\n  Use the Effect Tree to edit the on-hit and on-miss effects!\n</p>\n","import {Component, OnInit} from '@angular/core';\nimport {MatSelectChange} from '@angular/material/select';\nimport {Attack} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-attack-effect',\n  templateUrl: './attack-effect.component.html',\n  styleUrls: ['../shared.scss', './attack-effect.component.css']\n})\nexport class AttackEffectComponent extends EffectComponent<Attack> implements OnInit {\n  custom = false;\n  advantage = '0';\n  customadvantage = '';\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.effect.attackBonus || this.spell == null) {\n      this.custom = true;\n    }\n    if (this.effect.adv && !['-1', '0', '1', '2'].includes(this.effect.adv)) {\n      this.advantage = 'custom';\n      this.customadvantage = this.effect.adv;\n    } else {\n      this.advantage = this.effect.adv || '0';\n    }\n  }\n\n  onCustomChange() {\n    if (!this.custom) {\n      this.effect.attackBonus = undefined;\n    }\n  }\n\n  onAdvantageSelectChange(changeEvent: MatSelectChange) {\n    if (changeEvent.value === 'custom') {\n      this.effect.adv = this.customadvantage;\n    } else {\n      this.effect.adv = changeEvent.value;\n    }\n\n    this.changed.emit();\n  }\n\n  onCustomAdvantageChange() {\n    this.effect.adv = this.customadvantage;\n  }\n}\n","<mat-form-field class=\"is-fullwidth\" matTooltip=\"The highest of any listed abilities will be used.\">\n  <mat-label>{{label}}</mat-label>\n\n  <mat-chip-list #chipList aria-label=\"Fruit selection\" [required]=\"required\">\n    <mat-chip *ngFor=\"let skillKey of skills\" (removed)=\"remove(skillKey)\">\n      {{skillKeyToName(skillKey)}}\n      <button matChipRemove>\n        <mat-icon>cancel</mat-icon>\n      </button>\n    </mat-chip>\n\n    <input placeholder=\"Add skill...\"\n           #skillInput\n           [formControl]=\"skillCtrl\"\n           [matAutocomplete]=\"auto\"\n           [matChipInputFor]=\"chipList\">\n  </mat-chip-list>\n\n  <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\n    <mat-option *ngFor=\"let skillPair of filteredSkills | async\" [value]=\"skillPair[0]\">\n      {{skillPair[1]}}\n    </mat-option>\n  </mat-autocomplete>\n</mat-form-field>\n","import {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\nconst ALL_SKILLS = {\n  'acrobatics': 'Acrobatics',\n  'animalHandling': 'Animal Handling',\n  'arcana': 'Arcana',\n  'athletics': 'Athletics',\n  'deception': 'Deception',\n  'history': 'History',\n  'initiative': 'Initiative',\n  'insight': 'Insight',\n  'intimidation': 'Intimidation',\n  'investigation': 'Investigation',\n  'medicine': 'Medicine',\n  'nature': 'Nature',\n  'perception': 'Perception',\n  'performance': 'Performance',\n  'persuasion': 'Persuasion',\n  'religion': 'Religion',\n  'sleightOfHand': 'Sleight of Hand',\n  'stealth': 'Stealth',\n  'survival': 'Survival',\n  'strength': 'Strength',\n  'dexterity': 'Dexterity',\n  'constitution': 'Constitution',\n  'intelligence': 'Intelligence',\n  'wisdom': 'Wisdom',\n  'charisma': 'Charisma'\n};\n\n@Component({\n  selector: 'avr-ability-select',\n  templateUrl: './ability-select.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class AbilitySelectComponent {\n\n  @Input() label = 'Skills';\n  @Input() required = false;\n\n  @Input() skills!: string[];\n  @Output() skillsChange = new EventEmitter<string[]>();\n\n  skillCtrl = new FormControl('');\n  filteredSkills: Observable<[string, string][]>;\n\n  @ViewChild('skillInput') skillInput: ElementRef<HTMLInputElement>;\n\n  constructor() {\n    this.filteredSkills = this.skillCtrl.valueChanges.pipe(\n      startWith(''),\n      map((skillName: string) => (this._filter(skillName))),\n    );\n  }\n\n  // utils\n  skillKeyToName(key: string): string {\n    return ALL_SKILLS[key] ?? 'Invalid Skill';\n  }\n\n  // autocomplete handlers\n  remove(skill: string): void {\n    const index = this.skills.indexOf(skill);\n    if (index >= 0) {\n      this.skills.splice(index, 1);\n      this.skillsChange.emit(this.skills);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.skills.push(event.option.value);\n    this.skillsChange.emit(this.skills);\n    this.skillInput.nativeElement.value = '';\n    this.skillCtrl.setValue('');\n  }\n\n  private _filter(value: string): [string, string][] {\n    if (!value) {\n      // not a duplicate\n      return Object.entries(ALL_SKILLS).filter(([key, _]) => !this.skills.includes(key));\n    }\n\n    const filterValue = value.toLowerCase();\n\n    return Object.entries(ALL_SKILLS)\n      // matches query, not a duplicate\n      .filter(\n        ([key, name]) => (key.toLowerCase().includes(filterValue) || name.toLowerCase().includes(filterValue))\n          && !this.skills.includes(key)\n      );\n  }\n\n}\n","<p>\n  Makes an ability check as the targeted creature, optionally as a contest against the caster.\n  <avr-autodoc-link anchor=\"ability-check\"></avr-autodoc-link>\n</p>\n\n<!-- check type -->\n<div>\n  <mat-form-field>\n    <mat-label>Check Type</mat-label>\n    <mat-select [(value)]=\"checkType\" (selectionChange)=\"onCheckTypeChange()\">\n      <mat-option value=\"basic\">Check Roll</mat-option>\n      <mat-option value=\"dc\">Check Against DC</mat-option>\n      <mat-option value=\"contest\">Contest Against Caster</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<!-- ability -->\n<div>\n  <avr-ability-select class=\"is-fullwidth\" required [(skills)]=\"abilityWrapper\" (skillsChange)=\"changed.emit()\">\n  </avr-ability-select>\n</div>\n\n<!-- dc -->\n<div *ngIf=\"checkType === 'dc'\">\n  <mat-form-field class=\"is-fullwidth\">\n    <input matInput required placeholder=\"DC\" class=\"text-monospace\" (change)=\"changed.emit()\" [(ngModel)]=\"effect.dc\">\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n      calculate\n    </mat-icon>\n  </mat-form-field>\n</div>\n\n<!-- contest -->\n<div *ngIf=\"checkType === 'contest'\">\n  <avr-ability-select class=\"is-fullwidth\"\n                      required\n                      label=\"Caster Skills (Contest)\"\n                      [(skills)]=\"contestAbilityWrapper\"\n                      (skillsChange)=\"changed.emit()\">\n  </avr-ability-select>\n</div>\n\n<span class=\"auto-label\">Additional Options</span>\n\n<!-- advantage -->\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left baseline\" class=\"auto-row\">\n  <mat-form-field matTooltip=\"The default advantage for the target's ability check.\">\n    <mat-label>Advantage</mat-label>\n    <mat-select [(value)]=\"advantageWrapper\" (selectionChange)=\"changed.emit()\">\n      <mat-option [value]=\"0\">Flat</mat-option>\n      <mat-option [value]=\"1\">Advantage</mat-option>\n      <mat-option [value]=\"-1\">Disadvantage</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field matTooltip=\"Which list of effects to run if the ability contest results in a tie.\"\n                  *ngIf=\"checkType === 'contest'\">\n    <mat-label>Tie Behaviour</mat-label>\n    <mat-select [(value)]=\"effect.contestTie\" (selectionChange)=\"changed.emit()\">\n      <mat-option value=\"success\">Target Wins</mat-option>\n      <mat-option value=\"fail\">Caster Wins</mat-option>\n      <mat-option value=\"neither\">Neither</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<p *ngIf=\"checkType !== 'basic'\">\n  Use the Effect Tree to edit the on-fail and on-success effects!\n</p>\n","import {Component, OnInit} from '@angular/core';\nimport {AbilityCheck} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-check-effect',\n  templateUrl: './check-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class CheckEffectComponent extends EffectComponent<AbilityCheck> implements OnInit {\n  checkType: 'basic' | 'dc' | 'contest' = 'basic';\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.effect.contestAbility != null) {\n      this.checkType = 'contest';\n    } else if (this.effect.dc != null) {\n      this.checkType = 'dc';\n    }\n  }\n\n  onCheckTypeChange() {\n    if (this.checkType === 'basic') {\n      // basic checks: remove contestAbility, dc, contestTie\n      this.effect.contestAbility = undefined;\n      this.effect.dc = undefined;\n      this.effect.contestTie = undefined;\n    } else if (this.checkType === 'dc') {\n      // dc: remove contestAbility, contestTie\n      this.effect.contestAbility = undefined;\n      this.effect.contestTie = undefined;\n      // set dc attributes\n      this.effect.dc = this.effect.dc ?? '';\n      this.effect.success = this.effect.success ?? [];\n      this.effect.fail = this.effect.fail ?? [];\n    } else {\n      // contest: remove dc\n      this.effect.dc = undefined;\n      // set contest attributes\n      this.effect.contestAbility = this.effect.contestAbility ?? 'athletics'\n      this.effect.contestTie = this.effect.contestTie ?? 'success';\n      this.effect.success = this.effect.success ?? [];\n      this.effect.fail = this.effect.fail ?? [];\n    }\n    this.changed.emit();\n    this.treeChanged.emit();  // we emit treeChanged to re-render the contest/dc/no children branches\n  }\n\n  // ==== wrappers ====\n  get abilityWrapper(): string[] {\n    if (typeof this.effect.ability !== 'string') {\n      return this.effect.ability;\n    } else {\n      return [this.effect.ability];\n    }\n  }\n\n  set abilityWrapper(value: string[]) {\n    if (value.length === 1) {\n      this.effect.ability = value[0];\n    } else {\n      this.effect.ability = value;\n    }\n  }\n\n  get contestAbilityWrapper(): string[] {\n    if (typeof this.effect.contestAbility !== 'string') {\n      return this.effect.contestAbility;\n    } else {\n      return [this.effect.contestAbility];\n    }\n  }\n\n  set contestAbilityWrapper(value: string[]) {\n    if (value.length === 1) {\n      this.effect.contestAbility = value[0];\n    } else {\n      this.effect.contestAbility = value;\n    }\n  }\n\n  // --- adv ---\n  // copied from Save effect\n  get advantageWrapper(): -1 | 0 | 1 {\n    return this.effect.adv ?? 0;\n  }\n\n  set advantageWrapper(value) {\n    this.effect.adv = value || undefined;\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Condition} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-condition-effect',\n  templateUrl: 'condition-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class ConditionEffectComponent extends EffectComponent<Condition> implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<p>\n  A Branch effect runs certain effects if a certain condition is met, or other effects otherwise.\n  AKA \"condition\" or \"if-else\".\n  <avr-autodoc-link anchor=\"condition-branch\"></avr-autodoc-link>\n</p>\n\n<!-- condition -->\n<div>\n  <mat-form-field class=\"is-fullwidth\">\n    <input matInput placeholder=\"Condition\" class=\"text-monospace\" (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.condition\" required>\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n      calculate\n    </mat-icon>\n  </mat-form-field>\n</div>\n\n<!-- error behaviour -->\n<div>\n  <mat-form-field>\n    <mat-label>Error Behaviour</mat-label>\n    <mat-select [(value)]=\"effect.errorBehaviour\" (selectionChange)=\"changed.emit()\">\n      <mat-option value=\"true\">Treat as True</mat-option>\n      <mat-option value=\"false\">Treat as False</mat-option>\n      <mat-option value=\"both\">Run Both</mat-option>\n      <mat-option value=\"neither\">Skip Effect</mat-option>\n      <mat-option value=\"raise\">Stop Execution</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<p>\n  Use the Effect Tree to edit the on-true and on-false effects!\n</p>\n","<p>\n  Uses a number of charges of the given counter, and displays the remaining amount and delta.\n  <avr-autodoc-link anchor=\"use-counter\"></avr-autodoc-link>\n</p>\n\n<!-- counter type -->\n<div class=\"auto-row\">\n  <span>Use {{counterType === 'ability' ? 'an' : 'a'}} </span>\n\n  <mat-form-field>\n    <mat-label>Counter Type</mat-label>\n    <mat-select [(value)]=\"counterType\" (selectionChange)=\"changed.emit(); onCounterTypeChange()\">\n      <mat-option value=\"ability\">ability</mat-option>\n      <mat-option value=\"counter\">custom counter</mat-option>\n      <mat-option value=\"slot\">spell slot</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <span [ngSwitch]=\"counterType\">\n    <span *ngSwitchDefault>\n      <span> named </span>\n      <mat-form-field>\n        <input matInput placeholder=\"Counter Name\" (change)=\"changed.emit()\" [(ngModel)]=\"effect.counter\" required>\n      </mat-form-field>\n    </span>\n\n    <span *ngSwitchCase=\"'slot'\">\n      <span> of level </span>\n      <mat-form-field>\n        <input matInput\n               placeholder=\"Slot Level\"\n               class=\"text-monospace\"\n               (change)=\"changed.emit()\"\n               [(ngModel)]=\"effect.counter.slot\"\n               required>\n        <mat-icon matSuffix\n                  matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n          calculate\n        </mat-icon>\n      </mat-form-field>\n    </span>\n\n    <span *ngSwitchCase=\"'ability'\">\n      <span> named </span>\n      <mat-form-field\n        matTooltip=\"When you run this action, I'll find the best counter to use for this ability automatically.\">\n        <mat-select [value]=\"selectedLimitedUse\" (selectionChange)=\"onAbilitySelectionChange($event)\">\n          <mat-option>\n            <ngx-mat-select-search placeholderLabel=\"Search\"\n                                   noEntriesFoundLabel=\"No matches found.\"\n                                   ngModel (ngModelChange)=\"updateSearchFilteredGroupedLimitedUse($event)\">\n            </ngx-mat-select-search>\n          </mat-option>\n          <mat-optgroup *ngFor=\"let tup of searchFilteredGroupedLimitedUse\" [label]=\"tup[0]\">\n            <mat-option *ngFor=\"let limitedUse of tup[1]\" [value]=\"limitedUse\">\n              {{limitedUse.name}}\n            </mat-option>\n          </mat-optgroup>\n        </mat-select>\n      </mat-form-field>\n    </span>\n  </span>\n</div>\n\n<!-- amount -->\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n  <mat-form-field fxFlex=\"grow\">\n    <input matInput\n           placeholder=\"Amount\"\n           class=\"text-monospace\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.amount\"\n           required>\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n      calculate\n    </mat-icon>\n  </mat-form-field>\n</div>\n\n<!-- options -->\n<span class=\"auto-label\">Additional Options</span>\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left baseline\" class=\"auto-row\">\n  <mat-checkbox [(ngModel)]=\"effect.allowOverflow\" (change)=\"changed.emit()\">\n    Allow Overflow\n  </mat-checkbox>\n\n  <span>|</span>\n\n  <mat-form-field>\n    <mat-label>Error Behaviour</mat-label>\n    <mat-select [(value)]=\"errorBehaviourWrapper\" (selectionChange)=\"changed.emit()\">\n      <mat-option value=\"ignore\">Ignore</mat-option>\n      <mat-option value=\"warn\">Show Warning</mat-option>\n      <mat-option value=\"raise\">Stop Execution</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {MatSelectChange} from '@angular/material/select';\nimport {groupBy} from 'lodash';\nimport {LimitedUse} from '../../../../schemas/GameData';\nimport {GamedataService} from '../../../gamedata.service';\nimport {AbilityReference, UseCounter} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-counter-effect',\n  templateUrl: './counter-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class CounterEffectComponent extends EffectComponent<UseCounter> implements OnInit {\n  counterType: 'counter' | 'slot' | 'ability';\n\n  // abilityreference builder stuff\n  limitedUse: LimitedUse[] = [];\n  selectedLimitedUse: LimitedUse;\n  searchFilteredGroupedLimitedUse: [string, LimitedUse[]][] = [];\n\n  // error behaviour - defaults to warn on undefined\n  get errorBehaviourWrapper(): 'warn' | 'raise' | 'ignore' {\n    if (this.effect.errorBehaviour === undefined) {\n      return 'warn';\n    }\n    return this.effect.errorBehaviour ?? 'ignore';\n  }\n\n  set errorBehaviourWrapper(value: 'warn' | 'raise' | 'ignore') {\n    if (value === 'warn') {\n      this.effect.errorBehaviour = undefined;\n    } else {\n      this.effect.errorBehaviour = value;\n    }\n  }\n\n  constructor(private gamedataService: GamedataService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.loadLimitedUse();\n    if (typeof this.effect.counter === 'string') {\n      this.counterType = 'counter';\n    } else if ('slot' in this.effect.counter) {\n      this.counterType = 'slot';\n    } else if ('id' in this.effect.counter) {\n      this.counterType = 'ability';\n    }\n  }\n\n  onCounterTypeChange(): void {\n    if (this.counterType === 'counter') {\n      this.effect.counter = '';\n    } else if (this.counterType === 'slot') {\n      this.effect.counter = {slot: 1};\n    } else if (this.counterType === 'ability') {\n      this.effect.counter = {id: 1091, typeId: 222216831};  // default to like... second wind?\n    }\n  }\n\n  onAbilitySelectionChange(event: MatSelectChange) {\n    this.effect.counter = {id: event.value.id, typeId: event.value.typeId};\n    this.selectedLimitedUse = event.value;\n  }\n\n  updateSearchFilteredGroupedLimitedUse(searchTerm: string) {\n    let filteredLimitedUse = this.limitedUse.filter(lu => lu.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    this.searchFilteredGroupedLimitedUse = Object.entries(groupBy(filteredLimitedUse, lu => lu.type));\n  }\n\n  // loaders\n  loadLimitedUse() {\n    this.gamedataService.getLimitedUse()\n      .subscribe(result => {\n        if (result.success) {\n          this.limitedUse = result.data;\n          const tempCounter = this.effect.counter as AbilityReference;  // WTF typescript? Next line doesn't work unless this is here\n          this.selectedLimitedUse = this.limitedUse.find(lu => lu.id === tempCounter.id && lu.typeId === tempCounter.typeId);\n          this.updateSearchFilteredGroupedLimitedUse('');\n        }\n      });\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {Damage, Roll, SetVariable, TempHP} from '../../types';\nimport {Spell} from '../../../../schemas/homebrew/Spells';\n\nconst range = (start, end) => Array.from({length: (end - start)}, (v, k) => k + start);\n\n@Component({\n  selector: 'avr-higher-level',\n  template: `\n    <div *ngIf=\"parent.higher != undefined\" style=\"min-width: 300px;\">\n      <mat-expansion-panel class=\"higher-level-panel\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            At Higher Levels\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n        <div fxLayout=\"column\">\n          <mat-form-field fxFlex *ngFor=\"let level of possibleLevels\">\n            <input matInput placeholder=\"Level {{level}}\" (change)=\"changed.emit()\" [(ngModel)]=\"parent.higher[level]\">\n          </mat-form-field>\n        </div>\n      </mat-expansion-panel>\n    </div>\n\n    <div *ngIf=\"parent.higher === undefined\">\n      <button mat-stroked-button (click)=\"addHigher()\">Add Higher Level</button>\n    </div>\n  `,\n  styleUrls: ['../shared.scss']\n})\nexport class HigherLevelComponent implements OnInit, OnChanges {\n\n  @Input() parent: Damage | Roll | TempHP | SetVariable;\n  @Input() spell: Spell;\n  @Output() changed = new EventEmitter();\n\n  undefined = undefined;\n  possibleLevels: number[] = [];\n\n\n  constructor() {\n  }\n\n  calcLevels() {\n    this.possibleLevels = range(this.spell.level + 1, 10);\n  }\n\n  addHigher() {\n    this.parent.higher = new Map<number, string>();\n    this.changed.emit();\n  }\n\n  ngOnInit() {\n    this.calcLevels();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.calcLevels();\n  }\n}\n","<p>\n  Deals damage to or heals a targeted creature.\n  <avr-autodoc-link anchor=\"damage\"></avr-autodoc-link>\n</p>\n\n<div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n  <mat-form-field fxFlex>\n    <input matInput placeholder=\"Damage\" (change)=\"changed.emit()\" [(ngModel)]=\"effect.damage\" required>\n    <span matSuffix matTooltip=\"AnnotatedString - variables and functions allowed in braces\">{{\"{ }\"}}</span>\n  </mat-form-field>\n  <span>\n        <mat-checkbox [(ngModel)]=\"effect.overheal\" (change)=\"changed.emit()\">\n          Allow Overheal\n        </mat-checkbox>\n      </span>\n</div>\n\n<div fxLayout=\"column\"\n     fxFill\n     fxLayout.gt-xs=\"row\"\n     fxLayoutGap=\"8px\"\n     fxLayoutAlign=\"space-evenly center\"\n     fxLayoutAlign.gt-xs=\"left center\"\n     *ngIf=\"spell != null\">\n  <avr-higher-level fxFlex [parent]=\"effect\" [spell]=\"spell\" (changed)=\"changed.emit()\"></avr-higher-level>\n  <mat-checkbox [(ngModel)]=\"effect.cantripScale\" (change)=\"changed.emit()\">\n    Scales like Cantrip\n  </mat-checkbox>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Damage} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-damage-effect',\n  templateUrl: './damage-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class DamageEffectComponent extends EffectComponent<Damage> implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n}\n","<p>\n  This IEffect version (v1) has been deprecated in v4 of Avrae. Please recreate this effect to migrate to the new effect\n  version!\n  <avr-autodoc-link anchor=\"ieffect\"></avr-autodoc-link>\n</p>\n\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" class=\"auto-row\">\n  <mat-form-field fxFlex=\"1 2 auto\">\n    <input matInput placeholder=\"Name\" (change)=\"changed.emit()\" [(ngModel)]=\"effect.name\" required>\n  </mat-form-field>\n  <mat-form-field fxFlex=\"1 2 auto\">\n    <input matInput\n           placeholder=\"Duration\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.duration\"\n           required\n           matTooltip=\"Use -1 for infinite duration.\">\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">calculate\n    </mat-icon>\n  </mat-form-field>\n  <mat-form-field fxFlex=\"2 1 auto\">\n    <input matInput placeholder=\"Effects\" (change)=\"changed.emit()\" [(ngModel)]=\"effect.effects\">\n    <span matSuffix matTooltip=\"AnnotatedString - variables and functions allowed in braces\">{{\"{ }\"}}</span>\n  </mat-form-field>\n</div>\n\n<div style=\"color: red; font-weight: bold; margin-bottom: 10px; margin-top: -10px;\"\n     *ngIf=\"spell != null && spell.concentration && spell.name == effect.name\">\n  <span>\n    Concentration spells create an effect with the spell name automatically, this will overwrite it, potentially\n    breaking things.\n  </span>\n</div>\n\n<div fxLayout=\"row\" fxLayoutGap=\"8px\" class=\"auto-row\">\n      <span>\n        <mat-checkbox [(ngModel)]=\"effect.end\"\n                      (change)=\"changed.emit();\"\n                      matTooltip=\"Whether the effect duration ticks down at the end of the turn rather than the start.\">\n          Ticks on end of turn?\n        </mat-checkbox>\n        <mat-checkbox [(ngModel)]=\"effect.conc\" (change)=\"changed.emit();\">\n          Requires concentration?\n        </mat-checkbox>\n        <mat-checkbox [(ngModel)]=\"effect.stacking\"\n                      (change)=\"changed.emit();\"\n                      matTooltip=\"If another effect with the same name exists, add this effect as a child instead of overwriting it.\">\n          Stacking?\n        </mat-checkbox>\n      </span>\n</div>\n\n<div fxLayout=\"row\">\n  <mat-form-field class=\"is-fullwidth\">\n    <textarea matInput\n              placeholder=\"Description\"\n              rows=\"3\"\n              (change)=\"changed.emit()\"\n              [(ngModel)]=\"effect.desc\"\n              maxlength=\"500\">\n    </textarea>\n    <span matSuffix matTooltip=\"AnnotatedString - variables and functions allowed in braces\">{{\"{ }\"}}</span>\n  </mat-form-field>\n</div>\n\n<div fxLayout=\"row\" style=\"gap: 8px;\">\n  <mat-form-field fxFlex style=\"max-width: calc(50% - 4px)\">\n    <input matInput\n           placeholder=\"Save As\"\n           class=\"text-monospace\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.save_as\"\n           matTooltip=\"If supplied, saves the added effect as an automation variable. Use this in another IEffect's parent field to set this effect as its parent.\">\n  </mat-form-field>\n  <mat-form-field fxFlex style=\"max-width: calc(50% - 4px)\">\n    <input matInput\n           placeholder=\"Parent\"\n           class=\"text-monospace\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.parent\"\n           matTooltip=\"If supplied, sets the added effect's parent to the given effect. This must be the same as another IEffect's save_as.\">\n  </mat-form-field>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {LegacyIEffect} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-ieffect-effect',\n  templateUrl: './ieffect-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class IEffectEffectComponent extends EffectComponent<LegacyIEffect> implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n}\n","import {PassiveEffects} from '../../types';\n\ntype PassiveEffectType = 'annotatedstring' | 'intexpression';\nconst AnnotatedString = 'annotatedstring';\nconst IntExpression = 'intexpression';\n\n// utility consts\nconst DAMAGE_TYPES = [\n  {name: 'Bludgeoning', value: 'bludgeoning'},\n  {name: 'Piercing', value: 'piercing'},\n  {name: 'Slashing', value: 'slashing'},\n  {name: 'Acid', value: 'acid'},\n  {name: 'Cold', value: 'cold'},\n  {name: 'Fire', value: 'fire'},\n  {name: 'Force', value: 'force'},\n  {name: 'Lightning', value: 'lightning'},\n  {name: 'Necrotic', value: 'necrotic'},\n  {name: 'Poison', value: 'poison'},\n  {name: 'Psychic', value: 'psychic'},\n  {name: 'Radiant', value: 'radiant'},\n  {name: 'Thunder', value: 'thunder'},\n];\n\nconst SAVING_THROWS = [\n  {name: 'All', value: 'all'},\n  {name: 'Strength', value: 'str'},\n  {name: 'Dexterity', value: 'dex'},\n  {name: 'Constitution', value: 'con'},\n  {name: 'Intelligence', value: 'int'},\n  {name: 'Wisdom', value: 'wis'},\n  {name: 'Charisma', value: 'cha'},\n];\n\nconst SKILL_NAMES = [\n  {name: 'All', value: 'all'},\n  {name: 'Acrobatics', value: 'acrobatics'},\n  {name: 'Animal Handling', value: 'animalHandling'},\n  {name: 'Arcana', value: 'arcana'},\n  {name: 'Athletics', value: 'athletics'},\n  {name: 'Deception', value: 'deception'},\n  {name: 'History', value: 'history'},\n  {name: 'Initiative', value: 'initiative'},\n  {name: 'Insight', value: 'insight'},\n  {name: 'Intimidation', value: 'intimidation'},\n  {name: 'Investigation', value: 'investigation'},\n  {name: 'Medicine', value: 'medicine'},\n  {name: 'Nature', value: 'nature'},\n  {name: 'Perception', value: 'perception'},\n  {name: 'Performance', value: 'performance'},\n  {name: 'Persuasion', value: 'persuasion'},\n  {name: 'Religion', value: 'religion'},\n  {name: 'Sleight of Hand', value: 'sleightOfHand'},\n  {name: 'Stealth', value: 'stealth'},\n  {name: 'Survival', value: 'survival'},\n  {name: 'Strength', value: 'strength'},\n  {name: 'Dexterity', value: 'dexterity'},\n  {name: 'Constitution', value: 'constitution'},\n  {name: 'Intelligence', value: 'intelligence'},\n  {name: 'Wisdom', value: 'wisdom'},\n  {name: 'Charisma', value: 'charisma'},\n];\n\n// ==== passive effects ====\nexport interface PassiveEffectDef {\n  name: string;\n  // used to render either the intexpression help or annotatedstring help for custom values\n  type: PassiveEffectType;\n  // allow adding multiple of this passive effect\n  isList?: boolean;\n  // if set, default to the first default option and allow the user to choose between any of these or an expression\n  defaultOptions?: { name: string, value: string }[];\n}\n\ntype PassiveEffectMap = {\n  [key in keyof PassiveEffects]: PassiveEffectDef;\n};\n\nexport const PASSIVE_EFFECTS: PassiveEffectMap = {\n  attack_advantage: {\n    name: 'Attack Advantage',\n    type: IntExpression,\n    defaultOptions: [\n      {name: 'Flat', value: '0'},\n      {name: 'Advantage', value: '1'},\n      {name: 'Disadvantage', value: '-1'},\n      {name: 'Elven Accuracy', value: '2'}\n    ]\n  },\n  to_hit_bonus: {\n    name: 'To Hit Bonus',\n    type: AnnotatedString\n  },\n  damage_bonus: {\n    name: 'Damage Bonus',\n    type: AnnotatedString\n  },\n  magical_damage: {\n    name: 'Magical Damage',\n    type: IntExpression,\n    defaultOptions: [{name: 'True', value: '1'}]\n  },\n  silvered_damage: {\n    name: 'Silvered Damage',\n    type: IntExpression,\n    defaultOptions: [{name: 'True', value: '1'}]\n  },\n  resistances: {\n    name: 'Resistance',\n    type: AnnotatedString,\n    isList: true,\n    defaultOptions: DAMAGE_TYPES\n  },\n  immunities: {\n    name: 'Immunity',\n    type: AnnotatedString,\n    isList: true,\n    defaultOptions: DAMAGE_TYPES\n  },\n  vulnerabilities: {\n    name: 'Vulnerability',\n    type: AnnotatedString,\n    isList: true,\n    defaultOptions: DAMAGE_TYPES\n  },\n  ignored_resistances: {\n    name: 'Ignore Resistance',\n    type: AnnotatedString,\n    isList: true,\n    defaultOptions: DAMAGE_TYPES\n  },\n  ac_value: {\n    name: 'Set AC',\n    type: IntExpression\n  },\n  ac_bonus: {\n    name: 'AC Bonus',\n    type: IntExpression\n  },\n  max_hp_value: {\n    name: 'Set Max HP',\n    type: IntExpression\n  },\n  max_hp_bonus: {\n    name: 'Max HP Bonus',\n    type: IntExpression\n  },\n  save_bonus: {\n    name: 'Saving Throw Bonus',\n    type: AnnotatedString\n  },\n  save_adv: {\n    name: 'Saving Throw Advantage',\n    type: AnnotatedString,\n    isList: true,\n    defaultOptions: SAVING_THROWS\n  },\n  save_dis: {\n    name: 'Saving Throw Disadvantage',\n    type: AnnotatedString,\n    isList: true,\n    defaultOptions: SAVING_THROWS\n  },\n  check_bonus: {\n    name: 'Ability Check Bonus',\n    type: AnnotatedString\n  },\n  check_adv: {\n    name: 'Ability Check Advantage',\n    type: AnnotatedString,\n    isList: true,\n    defaultOptions: SKILL_NAMES\n  },\n  check_dis: {\n    name: 'Ability Check Disadvantage',\n    type: AnnotatedString,\n    isList: true,\n    defaultOptions: SKILL_NAMES\n  },\n};\n\n\n","import {Component, EventEmitter, Output} from '@angular/core';\n\n@Component({\n  selector: 'avr-doubleclick-delete-button',\n  template: `\n    <button mat-icon-button\n            [color]=\"deleteState === 0 ? 'warn' : 'accent'\"\n            matTooltip=\"Double click to delete.\"\n            (click)=\"deleteClicked()\"\n            (clickOutside)=\"deleteState = 0\">\n      <mat-icon aria-label=\"Delete\">delete</mat-icon>\n    </button>\n  `,\n  styles: []\n})\nexport class DoubleClickDeleteButtonComponent {\n\n  @Output() delete = new EventEmitter();\n  deleteState = 0;  // tracks 2-click on the delete button\n\n  constructor() {\n  }\n\n  deleteClicked() {\n    this.deleteState++;\n    if (this.deleteState === 2) {  // only delete on the 2nd click\n      this.delete.emit();\n      this.deleteState = 0;\n    }\n  }\n}\n","<p>\n  Adds an InitTracker Effect to a targeted creature, if the target is in combat.\n  Initiative Effects are a versatile method to modify a combatant's bonuses, maluses, grant temporary actions,\n  and create automation that runs at the click of a button!\n  <avr-autodoc-link anchor=\"ieffect\"></avr-autodoc-link>\n</p>\n\n<!-- name -->\n<div>\n  <mat-form-field class=\"is-fullwidth\">\n    <input matInput placeholder=\"Name\" (change)=\"changed.emit()\" [(ngModel)]=\"effect.name\" required>\n    <mat-error *ngIf=\"spell != null && spell.concentration && spell.name === effect.name\">\n      Concentration spells create an effect with the spell name automatically. This will overwrite it, potentially\n      creating issues.\n    </mat-error>\n  </mat-form-field>\n</div>\n\n<!-- duration, end, conc -->\n<p class=\"auto-label\">\n  Duration Options\n</p>\n<div>\n  <mat-form-field class=\"is-fullwidth\" floatLabel=\"always\">\n    <mat-label>Duration</mat-label>\n    <input matInput\n           placeholder=\"Indefinite\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"durationWrapper\"\n           matTooltip=\"The duration, in rounds. Leave blank for infinite duration.\">\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n      calculate\n    </mat-icon>\n  </mat-form-field>\n</div>\n<div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayoutAlign=\"left baseline\" class=\"auto-row\">\n  <mat-checkbox [(ngModel)]=\"effect.end\"\n                (change)=\"changed.emit();\"\n                matTooltip=\"Whether the effect duration ticks down at the end of the turn rather than the start.\">\n    Ticks on end of turn\n  </mat-checkbox>\n  <mat-checkbox [(ngModel)]=\"effect.conc\" (change)=\"changed.emit();\">\n    Requires concentration\n  </mat-checkbox>\n</div>\n\n<!-- passive effects -->\n<div [formGroup]=\"effectGroup\">\n  <div formArrayName=\"passiveEffects\">\n    <p class=\"auto-label\">\n      Passive Effects\n    </p>\n\n    <div *ngFor=\"let passiveEffectGroup of passiveEffects.controls; let i=index\">\n      <!-- The repeated passive effect template -->\n      <div [formGroupName]=\"i\" fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left baseline\" class=\"auto-row\">\n        <!-- effect type -->\n        <mat-form-field fxFlex=\"1 4 auto\">\n          <mat-label>Passive Effect</mat-label>\n          <mat-select formControlName=\"effectType\">\n            <mat-option *ngFor=\"let passiveOption of passiveEffectTypeOptions\" [value]=\"passiveOption.value\">\n              {{passiveOption.name}}\n            </mat-option>\n          </mat-select>\n          <mat-error>Only one instance of this effect may be specified.</mat-error>\n        </mat-form-field>\n\n        <!-- predefined value -->\n        <mat-form-field fxFlex=\"1 4 auto\" *ngIf=\"hasDefaultOptions(passiveEffectGroup)\">\n          <mat-label>Value</mat-label>\n          <mat-select formControlName=\"defaultOptions\">\n            <mat-option *ngFor=\"let option of PASSIVE_EFFECTS[passiveEffectGroup.get('effectType').value]!.defaultOptions\"\n                        [value]=\"option.value\">\n              {{option.name}}\n            </mat-option>\n            <mat-option [value]=\"CUSTOM_SENTINEL\">Custom</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- custom expression -->\n        <mat-form-field fxFlex=\"4 1 auto\" *ngIf=\"isCustomValue(passiveEffectGroup)\">\n          <mat-label>Custom Expression</mat-label>\n          <input matInput formControlName=\"value\">\n          <!-- intexpression or annotatedstring -->\n          <mat-icon matSuffix\n                    *ngIf=\"isValueIntExpression(passiveEffectGroup)\"\n                    matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n            calculate\n          </mat-icon>\n          <span matSuffix\n                *ngIf=\"!isValueIntExpression(passiveEffectGroup)\"\n                matTooltip=\"AnnotatedString - variables and functions allowed in braces\">\n            {{\"{ }\"}}\n          </span>\n        </mat-form-field>\n        <span fxFlex=\"4 1 auto\" *ngIf=\"!isCustomValue(passiveEffectGroup)\">\n          <!-- empty space-filler -->\n        </span>\n\n        <!-- delete -->\n        <avr-doubleclick-delete-button (delete)=\"deletePassiveEffect(i)\"></avr-doubleclick-delete-button>\n      </div>\n    </div>\n\n    <button mat-button (click)=\"addPassiveEffect()\">\n      + Add passive effect\n    </button>\n  </div>\n</div>\n\n<!-- attacks -->\n<div [formGroup]=\"effectGroup\">\n  <div formArrayName=\"attacks\">\n    <p class=\"auto-label\">\n      Granted Actions\n    </p>\n\n    <mat-accordion multi>\n      <mat-expansion-panel *ngFor=\"let attackGroup of attacks.controls; let i=index\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{attackGroup.get('name').value}}\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <div [formGroupName]=\"i\">\n          <!-- name -->\n          <mat-form-field class=\"is-fullwidth\">\n            <input matInput formControlName=\"name\" placeholder=\"Name\" required>\n          </mat-form-field>\n\n          <!-- display options -->\n          <p class=\"auto-label\">\n            Display Options\n          </p>\n          <div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n            <mat-form-field fxFlex floatLabel=\"always\">\n              <mat-label>Verb</mat-label>\n              <input matInput formControlName=\"verb\" placeholder=\"attacks with\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex>\n              <input matInput formControlName=\"thumb\" placeholder=\"Thumbnail URL\">\n            </mat-form-field>\n          </div>\n          <mat-form-field class=\"is-fullwidth\">\n            <input matInput formControlName=\"phrase\" placeholder=\"Flavor Text\">\n          </mat-form-field>\n          <mat-checkbox formControlName=\"proper\">\n            Name is proper noun\n          </mat-checkbox>\n\n          <!-- crit options -->\n          <p class=\"auto-label\">\n            Critical Hit Options\n          </p>\n          <div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n            <mat-form-field fxFlex floatLabel=\"always\">\n              <mat-label>Crit On</mat-label>\n              <input matInput\n                     formControlName=\"criton\"\n                     placeholder=\"(target's criton setting)\"\n                     type=\"number\"\n                     min=\"1\"\n                     max=\"20\">\n            </mat-form-field>\n\n            <mat-form-field fxFlex>\n              <input matInput formControlName=\"extraCritDamage\" placeholder=\"Extra Crit Damage\">\n            </mat-form-field>\n          </div>\n\n          <!-- spellcasting info -->\n          <p class=\"auto-label\">\n            Default Casting Information Overrides\n          </p>\n          <p>\n            For Attack and Save nodes without an explicitly defined attack bonus/DC, the default DC and attack modifier\n            to use. If left blank, the target's default spellcasting information is used.\n          </p>\n\n          <div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n            <mat-form-field fxFlex>\n              <input matInput formControlName=\"defaultDc\" placeholder=\"DC\" class=\"text-monospace\">\n              <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n                calculate\n              </mat-icon>\n            </mat-form-field>\n\n            <mat-form-field fxFlex>\n              <input matInput\n                     formControlName=\"defaultAttackBonus\"\n                     placeholder=\"Spell Attack Bonus\"\n                     class=\"text-monospace\">\n              <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n                calculate\n              </mat-icon>\n            </mat-form-field>\n\n            <mat-form-field fxFlex>\n              <input matInput\n                     formControlName=\"defaultCastingMod\"\n                     placeholder=\"Spellcasting Modifier\"\n                     class=\"text-monospace\">\n              <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n                calculate\n              </mat-icon>\n            </mat-form-field>\n          </div>\n\n          <p class=\"auto-label\">\n            Effects\n          </p>\n          <p>\n            To edit this action's effects, use the Effect Tree!\n          </p>\n        </div>\n\n        <mat-action-row>\n          <avr-doubleclick-delete-button (delete)=\"deleteAttack(i)\"></avr-doubleclick-delete-button>\n        </mat-action-row>\n      </mat-expansion-panel>\n    </mat-accordion>\n\n    <button mat-button (click)=\"addAttack()\">\n      + Add granted action\n    </button>\n  </div>\n</div>\n\n<!-- buttons -->\n<div [formGroup]=\"effectGroup\">\n  <div formArrayName=\"buttons\">\n    <p class=\"auto-label\">\n      Granted Buttons\n    </p>\n\n    <mat-accordion multi>\n      <mat-expansion-panel *ngFor=\"let buttonGroup of buttons.controls; let i=index\">\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            {{buttonGroup.get('label').value}}\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <div [formGroupName]=\"i\">\n          <!-- label -->\n          <mat-form-field class=\"is-fullwidth\">\n            <input matInput formControlName=\"label\" placeholder=\"Label\" required>\n            <span matSuffix matTooltip=\"AnnotatedString - variables and functions allowed in braces\">\n              {{\"{ }\"}}\n            </span>\n          </mat-form-field>\n\n          <!-- display options -->\n          <p class=\"auto-label\">\n            Display Options\n          </p>\n          <mat-form-field class=\"is-fullwidth\" floatLabel=\"always\">\n            <mat-label>Verb</mat-label>\n            <input matInput formControlName=\"verb\" [placeholder]=\"'uses ' + buttonGroup.get('label').value\">\n            <span matSuffix matTooltip=\"AnnotatedString - variables and functions allowed in braces\">\n              {{\"{ }\"}}\n            </span>\n          </mat-form-field>\n\n          <div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n            <!-- style -->\n            <mat-form-field fxFlex=\"1 4 auto\">\n              <mat-label>Style</mat-label>\n              <mat-select formControlName=\"style\">\n                <mat-option *ngFor=\"let styleOption of buttonStyleOptions\" [value]=\"styleOption.value\">\n                  <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayoutAlign=\"left center\">\n                    <span class=\"button-style button-style-{{styleOption.value}}\"></span>\n                    <span>{{styleOption.name}}</span>\n                  </div>\n                </mat-option>\n                <mat-option [value]=\"CUSTOM_SENTINEL\">\n                  Custom Expression\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <!-- custom expression -->\n            <mat-form-field fxFlex=\"4 1 auto\" *ngIf=\"isCustomButtonStyle(buttonGroup)\">\n              <mat-label>Custom Expression</mat-label>\n              <input matInput formControlName=\"customStyle\">\n              <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n                calculate\n              </mat-icon>\n            </mat-form-field>\n          </div>\n\n          <!-- spellcasting info -->\n          <p class=\"auto-label\">\n            Default Casting Information Overrides\n          </p>\n          <p>\n            For Attack and Save nodes without an explicitly defined attack bonus/DC, the default DC and attack modifier\n            to use. If left blank, the target's default spellcasting information is used.\n          </p>\n\n          <div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n            <mat-form-field fxFlex>\n              <input matInput formControlName=\"defaultDc\" placeholder=\"DC\" class=\"text-monospace\">\n              <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n                calculate\n              </mat-icon>\n            </mat-form-field>\n\n            <mat-form-field fxFlex>\n              <input matInput\n                     formControlName=\"defaultAttackBonus\"\n                     placeholder=\"Spell Attack Bonus\"\n                     class=\"text-monospace\">\n              <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n                calculate\n              </mat-icon>\n            </mat-form-field>\n\n            <mat-form-field fxFlex>\n              <input matInput\n                     formControlName=\"defaultCastingMod\"\n                     placeholder=\"Spellcasting Modifier\"\n                     class=\"text-monospace\">\n              <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n                calculate\n              </mat-icon>\n            </mat-form-field>\n          </div>\n\n          <p class=\"auto-label\">\n            Effects\n          </p>\n          <p>\n            To edit this button's effects, use the Effect Tree!\n          </p>\n        </div>\n\n        <mat-action-row>\n          <avr-doubleclick-delete-button (delete)=\"deleteButton(i)\"></avr-doubleclick-delete-button>\n        </mat-action-row>\n      </mat-expansion-panel>\n    </mat-accordion>\n\n    <button mat-button (click)=\"addButton()\">\n      + Add granted button\n    </button>\n  </div>\n</div>\n\n<!-- desc -->\n<p class=\"auto-label\">\n  Description\n</p>\n<div>\n  <mat-form-field class=\"is-fullwidth\">\n    <textarea matInput\n              placeholder=\"Description\"\n              rows=\"3\"\n              (change)=\"changed.emit()\"\n              [(ngModel)]=\"effect.desc\"\n              maxlength=\"500\">\n    </textarea>\n    <span matSuffix matTooltip=\"AnnotatedString - variables and functions allowed in braces\">{{\"{ }\"}}</span>\n  </mat-form-field>\n</div>\n\n<!-- save_as, parent -->\n<p class=\"auto-label\">\n  Parenting Options\n</p>\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left baseline\">\n  <mat-form-field fxFlex>\n    <input matInput\n           placeholder=\"Save As\"\n           class=\"text-monospace\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.save_as\"\n           matTooltip=\"If supplied, saves the added effect as an automation variable. Use this in another IEffect's parent field to set this effect as its parent.\">\n  </mat-form-field>\n  <mat-form-field fxFlex>\n    <input matInput\n           placeholder=\"Parent\"\n           class=\"text-monospace\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.parent\"\n           matTooltip=\"If supplied, sets the added effect's parent to the given effect. This must be the same as another IEffect's save_as.\">\n  </mat-form-field>\n</div>\n\n<!-- stacking -->\n<p class=\"auto-label\">\n  Other Options\n</p>\n\n\n<div>\n  <mat-checkbox [(ngModel)]=\"effect.stacking\"\n                (change)=\"changed.emit();\"\n                matTooltip=\"If another effect with the same name exists, add this effect as a child instead of overwriting it.\">\n    Enable Effect Stacking\n  </mat-checkbox>\n</div>\n\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {AbstractControl, FormBuilder, ValidationErrors} from '@angular/forms';\nimport {isEmpty} from 'lodash';\nimport {AttackInteraction, ButtonInteraction, IEffect} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\nimport {PASSIVE_EFFECTS} from './passiveEffects';\n\nconst CUSTOM_SENTINEL = '__custom';\n\n@Component({\n  selector: 'avr-ieffect2-effect',\n  templateUrl: './ieffect2-effect.component.html',\n  styleUrls: ['../shared.scss', './ieffect2-effect.component.css']\n})\nexport class IEffect2EffectComponent extends EffectComponent<IEffect> implements OnInit {\n\n  passiveEffects = this.fb.array([]);\n  attacks = this.fb.array([]);\n  buttons = this.fb.array([]);\n\n  // formgroup for the entire effect\n  effectGroup = this.fb.group({\n    passiveEffects: this.passiveEffects,\n    attacks: this.attacks,\n    buttons: this.buttons\n  });\n\n  constructor(private fb: FormBuilder) {\n    super();\n  }\n\n  ngOnInit() {\n    this.populatePassiveEffectForm();\n    this.passiveEffects.valueChanges.subscribe(value => this.onPassiveEffectsChange(value));\n    this.populateAttackForm();\n    this.attacks.valueChanges.subscribe(value => this.onAttacksChange(value));\n    this.populateButtonForm();\n    this.buttons.valueChanges.subscribe(value => this.onButtonsChange(value));\n  }\n\n  // ==== wrappers ====\n  // duration: blank -> undefined\n  get durationWrapper(): string {\n    return this.effect.duration?.toString() ?? '';\n  }\n\n  set durationWrapper(value: string) {\n    if (!value) {\n      this.effect.duration = undefined;\n    } else {\n      this.effect.duration = value;\n    }\n  }\n\n  // ==== passive effects ====\n  PASSIVE_EFFECTS = PASSIVE_EFFECTS;\n  CUSTOM_SENTINEL = CUSTOM_SENTINEL;\n\n  // --- lifecycle ---\n  populatePassiveEffectForm() {\n    // called once to set up the passive effect FormArray with the existing passive effects\n    if (!this.effect.effects) {\n      return;\n    }\n\n    for (const [pKey, pVal] of Object.entries(this.effect.effects)) {\n      const passiveEffectDef = PASSIVE_EFFECTS[pKey];\n      if (!passiveEffectDef) {\n        continue;\n      }\n\n      // helper\n      const k = (val) => passiveEffectDef.defaultOptions?.map(o => o.value).includes(val) ? [val, null, false] : [CUSTOM_SENTINEL, val, false];\n\n      // if the passive effects allows multiple entries, unroll them into a formgroup each\n      if (passiveEffectDef.isList) {\n        for (const val of pVal) {\n          this.addPassiveEffect(pKey, ...k(val));\n        }\n      } else {\n        this.addPassiveEffect(pKey, ...k(pVal));\n      }\n    }\n  }\n\n  addPassiveEffect(effectType = null, defaultOptions = '', value = '', emitChanges = true) {\n    const effectTypeControl = this.fb.control(effectType, (control) => this.passiveEffectTypeValidator(control));\n    const defaultOptionsControl = this.fb.control(defaultOptions);\n    const valueControl = this.fb.control(value);\n\n    // set up change tracking\n    effectTypeControl.valueChanges.subscribe(() => {\n      defaultOptionsControl.setValue(null);\n      valueControl.setValue(null);\n    });\n\n    // add to formarray\n    this.passiveEffects.push(\n      this.fb.group({\n        effectType: effectTypeControl,\n        defaultOptions: defaultOptionsControl,\n        value: valueControl\n      }),\n      {emitEvent: emitChanges}\n    );\n  }\n\n  deletePassiveEffect(idx: number) {\n    this.passiveEffects.removeAt(idx);\n  }\n\n  onPassiveEffectsChange(newValue: { effectType: string | null, defaultOptions: string | null, value: string | null }[]) {\n    // build new PassiveEffect\n    const out = {};\n    for (const {effectType, defaultOptions, value} of newValue) {\n      if (!(effectType in PASSIVE_EFFECTS)) {\n        continue;\n      }\n      // the final value is the custom value if the select value is __custom or null\n      const finalVal = defaultOptions === CUSTOM_SENTINEL ? value : defaultOptions || value;\n      if (PASSIVE_EFFECTS[effectType]!.isList) {\n        out[effectType] = [...out[effectType] ?? [], finalVal];\n      } else {\n        out[effectType] = finalVal;\n      }\n    }\n    // write changes back to PassiveEffect\n    this.effect.effects = isEmpty(out) ? undefined : out;\n    this.changed.emit();\n  }\n\n  passiveEffectTypeValidator(control: AbstractControl): ValidationErrors | null {\n    const allOtherUniqueEffectTypes = this.passiveEffects.controls\n      // filter to not this control\n      .filter(group => group.get('effectType') !== control)\n      // extract the type\n      .map(group => group.get('effectType').value)\n      // filter to only unique types\n      .filter(t => !PASSIVE_EFFECTS[t].isList);\n    if (allOtherUniqueEffectTypes.includes(control.value)) {\n      return {effectType: {name: `Can only specify one ${control.value} per IEffect`}};\n    }\n    return null;\n  }\n\n  // --- select helpers ---\n  passiveEffectTypeOptions = Object.entries(PASSIVE_EFFECTS)\n    .map(([k, v]) => ({value: k, name: v.name}));\n\n  hasDefaultOptions(formGroup: AbstractControl): boolean {\n    const passiveEffectDef = PASSIVE_EFFECTS[formGroup.get('effectType').value];\n    if (!passiveEffectDef) {\n      return false;\n    }\n    return passiveEffectDef.defaultOptions != null;\n  }\n\n  isCustomValue(formGroup: AbstractControl): boolean {\n    const effectType = formGroup.get('effectType').value;\n    return effectType != null\n      && (formGroup.get('defaultOptions').value === CUSTOM_SENTINEL\n        || !PASSIVE_EFFECTS[effectType]?.defaultOptions?.length);\n  }\n\n  isValueIntExpression(formGroup: AbstractControl): boolean {\n    const passiveEffectDef = PASSIVE_EFFECTS[formGroup.get('effectType').value];\n    if (!passiveEffectDef) {\n      return true;\n    }\n    return passiveEffectDef.type === 'intexpression';\n  }\n\n  // ==== actions ====\n  // --- lifecycle ---\n  populateAttackForm() {\n    // called once to set up the FormArray with the existing attacks\n    if (!this.effect.attacks) {\n      return;\n    }\n    for (const attackInteraction of this.effect.attacks) {\n      this.addAttack(attackInteraction, false);\n    }\n  }\n\n  addAttack(attackInteraction?: AttackInteraction, emitChanges = true) {\n    // name changes emit treeChanged to update the tree with interaction name\n    const nameControl = this.fb.control(attackInteraction?.attack.name ?? 'New Action');\n    nameControl.valueChanges.subscribe(() => {\n      setTimeout(() => this.treeChanged.emit());  // hack to ensure changed happens first\n    });\n    // add to formarray\n    this.attacks.push(this.fb.group(\n      {\n        name: nameControl,\n        verb: this.fb.control(attackInteraction?.attack.verb ?? null),\n        thumb: this.fb.control(attackInteraction?.attack.thumb ?? null),\n        phrase: this.fb.control(attackInteraction?.attack.phrase ?? null),\n        proper: this.fb.control(attackInteraction?.attack.proper ?? false),\n        criton: this.fb.control(attackInteraction?.attack.criton ?? null),\n        extraCritDamage: this.fb.control(attackInteraction?.attack.extra_crit_damage ?? null),\n        defaultDc: this.fb.control(attackInteraction?.defaultDC ?? null),\n        defaultAttackBonus: this.fb.control(attackInteraction?.defaultAttackBonus ?? null),\n        defaultCastingMod: this.fb.control(attackInteraction?.defaultCastingMod ?? null),\n        // used to maintain a ref to the automation that gets edited in the tree\n        _automation: this.fb.control(attackInteraction?.attack.automation ?? [])\n      },\n      {emitEvent: emitChanges}\n    ));\n    if (emitChanges) {\n      this.treeChanged.emit();\n    }\n  }\n\n  deleteAttack(idx: number) {\n    this.attacks.removeAt(idx);\n    this.treeChanged.emit();\n  }\n\n  onAttacksChange(newValue) {\n    // build new list of AttackInteractions\n    const out: AttackInteraction[] = [];\n    for (const attackGroup of newValue) {\n      out.push({\n        attack: {\n          _v: 2,\n          name: attackGroup.name,\n          automation: attackGroup._automation,  // hopefully this keeps the right ref lol\n          verb: attackGroup.verb || undefined,\n          thumb: attackGroup.thumb || undefined,\n          phrase: attackGroup.phrase || undefined,\n          proper: attackGroup.proper || undefined,\n          criton: attackGroup.criton || undefined,\n          extra_crit_damage: attackGroup.extraCritDamage || undefined,\n        },\n        defaultDC: attackGroup.defaultDc || undefined,\n        defaultAttackBonus: attackGroup.defaultAttackBonus || undefined,\n        defaultCastingMod: attackGroup.defaultCastingMod || undefined\n      });\n    }\n    // write changes back to PassiveEffect\n    this.effect.attacks = isEmpty(out) ? undefined : out;\n    this.changed.emit();\n  }\n\n  // ==== buttons ====\n  buttonStyleOptions = [\n    {name: 'Blurple', value: '1'},\n    {name: 'Grey', value: '2'},\n    {name: 'Green', value: '3'},\n    {name: 'Red', value: '4'}\n  ];\n\n  // --- lifecycle ---\n  populateButtonForm() {\n    // called once to set up the FormArray with the existing buttons\n    if (!this.effect.buttons) {\n      return;\n    }\n    for (const buttonInteraction of this.effect.buttons) {\n      this.addButton(buttonInteraction, false);\n    }\n  }\n\n  addButton(buttonInteraction?: ButtonInteraction, emitChanges = true) {\n    // name changes emit treeChanged to update the tree with interaction name\n    const labelControl = this.fb.control(buttonInteraction?.label ?? 'New Button');\n    labelControl.valueChanges.subscribe(() => {\n      setTimeout(() => this.treeChanged.emit());  // hack to ensure changed happens first\n    });\n\n    // style can be custom\n    let styleConfig;\n    if (!buttonInteraction?.style || this.buttonStyleOptions.some(style => style.value === buttonInteraction.style)) {\n      styleConfig = {\n        style: this.fb.control(buttonInteraction?.style || '1'),\n        customStyle: this.fb.control(null),\n      };\n    } else {\n      styleConfig = {\n        style: this.fb.control(CUSTOM_SENTINEL),\n        customStyle: this.fb.control(buttonInteraction?.style || null),\n      };\n    }\n\n    // add to formarray\n    this.buttons.push(this.fb.group(\n      {\n        label: labelControl,\n        verb: this.fb.control(buttonInteraction?.verb ?? null),\n        ...styleConfig,\n        defaultDc: this.fb.control(buttonInteraction?.defaultDC ?? null),\n        defaultAttackBonus: this.fb.control(buttonInteraction?.defaultAttackBonus ?? null),\n        defaultCastingMod: this.fb.control(buttonInteraction?.defaultCastingMod ?? null),\n        // used to maintain a ref to the automation that gets edited in the tree\n        _automation: this.fb.control(buttonInteraction?.automation ?? [])\n      },\n      {emitEvent: emitChanges}\n    ));\n    if (emitChanges) {\n      this.treeChanged.emit();\n    }\n  }\n\n  deleteButton(idx: number) {\n    this.buttons.removeAt(idx);\n    this.treeChanged.emit();\n  }\n\n  onButtonsChange(newValue) {\n    // build new list of ButtonInteractions\n    const out: ButtonInteraction[] = [];\n    for (const buttonGroup of newValue) {\n      const style = buttonGroup.style === CUSTOM_SENTINEL ? buttonGroup.customStyle : buttonGroup.style;\n      out.push({\n        label: buttonGroup.label,\n        automation: buttonGroup._automation,\n        verb: buttonGroup.verb || undefined,\n        style: style || undefined,\n        defaultDC: buttonGroup.defaultDc || undefined,\n        defaultAttackBonus: buttonGroup.defaultAttackBonus || undefined,\n        defaultCastingMod: buttonGroup.defaultCastingMod || undefined\n      });\n    }\n    // write changes back to PassiveEffect\n    this.effect.buttons = isEmpty(out) ? undefined : out;\n    this.changed.emit();\n  }\n\n  // helpers\n  isCustomButtonStyle(buttonGroup: AbstractControl): boolean {\n    return buttonGroup.get('style').value === CUSTOM_SENTINEL;\n  }\n}\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {RemoveIEffect} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-remove-ieffect-effect',\n  templateUrl: './remove-ieffect-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class RemoveIEffectEffectComponent extends EffectComponent<RemoveIEffect> implements OnInit {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n  get removeParentWrapper() {\n    return this.effect.removeParent ?? 'never';\n  }\n\n  set removeParentWrapper(value) {\n    if (value == 'never') {\n      this.effect.removeParent = undefined;\n    } else {\n      this.effect.removeParent = value;\n    }\n  }\n\n}\n","<p>\n  Rolls some dice and saves the result in a variable.\n  <avr-autodoc-link anchor=\"roll\"></avr-autodoc-link>\n</p>\n\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n  <mat-form-field fxFlex=\"1 3 auto\">\n    <input matInput\n           placeholder=\"Name\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.name\"\n           required\n           matTooltip=\"The result of the roll will be saved to an automation variable with this name.\"\n           class=\"text-monospace\">\n  </mat-form-field>\n  <mat-form-field fxFlex=\"3 1 auto\">\n    <input matInput placeholder=\"Dice\" (change)=\"changed.emit()\" [(ngModel)]=\"effect.dice\" required>\n    <span matSuffix matTooltip=\"AnnotatedString - variables and functions allowed in braces\">{{\"{ }\"}}</span>\n  </mat-form-field>\n</div>\n\n<p class=\"auto-label\">Additional Options</p>\n<div>\n  <mat-checkbox [(ngModel)]=\"effect.hidden\"\n                (change)=\"changed.emit()\"\n                matTooltip=\"If checked, the roll won't display in the automation's Meta field or apply bonuses from the -d argument.\">\n    Hidden\n  </mat-checkbox>\n</div>\n\n<div *ngIf=\"spell\">\n  <p class=\"auto-label\">Spell Options</p>\n  <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\">\n    <avr-higher-level fxFlex [parent]=\"effect\" [spell]=\"spell\" (changed)=\"changed.emit()\"></avr-higher-level>\n    <mat-checkbox [(ngModel)]=\"effect.cantripScale\" (change)=\"changed.emit()\">\n      Scales like Cantrip\n    </mat-checkbox>\n  </div>\n</div>\n","<p>\n  Removes the initiative effect that triggered this automation.\n  Only works when run in execution triggered by an initiative effect, such as a ButtonInteraction.\n  <avr-autodoc-link anchor=\"remove-ieffect\"></avr-autodoc-link>\n</p>\n\n<!-- remove parent -->\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n  <mat-form-field>\n    <mat-label>Remove Parent</mat-label>\n    <mat-select [(value)]=\"removeParentWrapper\" (selectionChange)=\"changed.emit()\">\n      <mat-option value=\"never\">Never</mat-option>\n      <mat-option value=\"always\">Always</mat-option>\n      <mat-option value=\"if_no_children\">If No Children</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <span>\n    <mat-icon aria-hidden=\"false\"\n              aria-label=\"Remove parent help\"\n              inline\n              matTooltip=\"If the removed effect has a parent effect, whether to remove it as well.\">\n      help\n    </mat-icon>\n  </span>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Roll} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-roll-effect',\n  templateUrl: './roll-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class RollEffectComponent extends EffectComponent<Roll> implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n}\n","<p>\n  A Save effect forces a targeted creature to make a saving throw.\n  <avr-autodoc-link anchor=\"save\"></avr-autodoc-link>\n</p>\n\n<!-- stat -->\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n  <mat-form-field>\n    <mat-label>Save Stat</mat-label>\n    <mat-select [(value)]=\"effect.stat\" (selectionChange)=\"changed.emit()\">\n      <mat-option value=\"str\">Strength</mat-option>\n      <mat-option value=\"dex\">Dexterity</mat-option>\n      <mat-option value=\"con\">Constitution</mat-option>\n      <mat-option value=\"int\">Intelligence</mat-option>\n      <mat-option value=\"wis\">Wisdom</mat-option>\n      <mat-option value=\"cha\">Charisma</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<!-- dc -->\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n  <mat-checkbox matTooltip=\"If not checked, uses the caster's default DC.\"\n                [(ngModel)]=\"custom\"\n                (change)=\"changed.emit(); onCustomChange()\"\n                *ngIf=\"spell != null\">\n    Has custom DC\n  </mat-checkbox>\n  <mat-form-field fxFlex=\"grow\" *ngIf=\"custom\">\n    <input matInput placeholder=\"DC\" class=\"text-monospace\" (change)=\"changed.emit()\" [(ngModel)]=\"effect.dc\">\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n      calculate\n    </mat-icon>\n  </mat-form-field>\n</div>\n\n<!-- advantage -->\n<div>\n  <mat-form-field matTooltip=\"The default advantage for this saving throw.\">\n    <mat-label>Advantage</mat-label>\n    <mat-select [(value)]=\"advantageWrapper\" (selectionChange)=\"changed.emit()\">\n      <mat-option [value]=\"0\">Flat</mat-option>\n      <mat-option [value]=\"1\">Advantage</mat-option>\n      <mat-option [value]=\"-1\">Disadvantage</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<p>\n  Use the Effect Tree to edit the on-fail and on-success effects!\n</p>\n","import {Component, OnInit} from '@angular/core';\nimport {Save} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-save-effect',\n  templateUrl: './save-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class SaveEffectComponent extends EffectComponent<Save> implements OnInit {\n  custom = false;\n\n  get advantageWrapper(): -1 | 0 | 1 {\n    return this.effect.adv ?? 0;\n  }\n  set advantageWrapper(value) {\n    this.effect.adv = value || undefined;\n  }\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.effect.dc || this.spell == null) {\n      this.custom = true;\n    }\n  }\n\n  onCustomChange() {\n    if (!this.custom) {\n      this.effect.dc = undefined;\n    }\n  }\n\n}\n","<p>\n  Executes the given spell’s automation as if it were immediately cast. Does not use a spell slot to cast the spell.\n  This is usually used in features that cast spells using alternate resources.\n  <avr-autodoc-link anchor=\"cast-spell\"></avr-autodoc-link>\n</p>\n\n<!-- spell -->\n<div class=\"auto-row\">\n  <span>Cast </span>\n\n  <mat-form-field>\n    <mat-label>Spell</mat-label>\n    <mat-select [value]=\"spellToCast\" (selectionChange)=\"onSpellSelectionChange($event)\">\n      <mat-option>\n        <ngx-mat-select-search placeholderLabel=\"Search\"\n                               noEntriesFoundLabel=\"No matches found.\"\n                               ngModel\n                               (ngModelChange)=\"updateSearchFilteredSpells($event)\">\n        </ngx-mat-select-search>\n      </mat-option>\n      <mat-option *ngFor=\"let spell of searchFilteredSpells\" [value]=\"spell\">\n        {{spell.name}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <span> at level </span>\n\n  <mat-form-field floatLabel=\"always\" matTooltip=\"If a level is not provided, this defaults to the spell's level.\">\n    <mat-label>Spell Level</mat-label>\n    <input matInput placeholder=\"(default level)\" [(ngModel)]=\"effect.level\" type=\"number\" min=\"0\" max=\"9\">\n  </mat-form-field>\n</div>\n\n<!-- spellcasting info -->\n<div>\n  <mat-checkbox [(ngModel)]=\"custom\"\n                (change)=\"onCustomChange(); changed.emit()\"\n                matTooltip=\"Whether to use the caster's default DC and attack modifier or the information defined here.\">\n    Override caster's spellcasting information\n  </mat-checkbox>\n</div>\n\n<div *ngIf=\"custom\" fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\">\n  <mat-form-field fxFlex>\n    <input matInput placeholder=\"DC\" class=\"text-monospace\" (change)=\"changed.emit()\" [(ngModel)]=\"effect.dc\">\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n      calculate\n    </mat-icon>\n  </mat-form-field>\n\n  <mat-form-field fxFlex>\n    <input matInput\n           placeholder=\"Spell Attack Bonus\"\n           class=\"text-monospace\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.attackBonus\">\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n      calculate\n    </mat-icon>\n  </mat-form-field>\n\n  <mat-form-field fxFlex>\n    <input matInput\n           placeholder=\"Spellcasting Modifier\"\n           class=\"text-monospace\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.castingMod\">\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">\n      calculate\n    </mat-icon>\n  </mat-form-field>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {MatSelectChange} from '@angular/material/select';\nimport {DDBEntity} from '../../../../schemas/GameData';\nimport {GamedataService} from '../../../gamedata.service';\nimport {CastSpell} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-spell-effect',\n  templateUrl: './spell-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class SpellEffectComponent extends EffectComponent<CastSpell> implements OnInit {\n  spellToCast: DDBEntity;\n  allSpells: DDBEntity[] = [];\n  searchFilteredSpells: DDBEntity[] = [];\n  custom = false;\n\n  constructor(private gamedataService: GamedataService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.loadSpells();\n    if (this.effect.dc || this.effect.attackBonus || this.effect.castingMod) {\n      this.custom = true;\n    }\n  }\n\n  onCustomChange() {\n    if (!this.custom) {\n      this.effect.dc = undefined;\n      this.effect.attackBonus = undefined;\n      this.effect.castingMod = undefined;\n    }\n  }\n\n  onSpellSelectionChange(event: MatSelectChange) {\n    const selectedSpell: DDBEntity = event.value;\n    this.effect.id = selectedSpell.entity_id;\n    this.spellToCast = selectedSpell;\n  }\n\n  updateSearchFilteredSpells(searchTerm: string) {\n    this.searchFilteredSpells = this.allSpells.filter(lu => lu.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  }\n\n  // loaders\n  loadSpells() {\n    this.gamedataService.getAllEntitlements()\n      .subscribe(result => {\n        if (result.success) {\n          // pull out all the spells\n          const values = Array.from(result.data.values());\n          this.allSpells = values.filter(entity => entity.entity_type === 'spell');\n          this.spellToCast = this.allSpells.find(spell => spell.entity_id === this.effect.id);\n          this.updateSearchFilteredSpells('');\n        }\n      });\n  }\n}\n","<p>\n  Designates what creatures to affect.\n  <avr-autodoc-link anchor=\"target\"></avr-autodoc-link>\n</p>\n\n<div fxLayout=\"row\" fxLayoutGap=\"6px\" class=\"auto-row\">\n  <mat-form-field>\n    <mat-label>Target</mat-label>\n    <mat-select [(value)]=\"selectedTarget\" (selectionChange)=\"onTargetSelectChange($event)\">\n      <mat-option value=\"all\" *ngIf=\"!context.isIEffectButton\">All</mat-option>\n      <mat-option value=\"self\">Caster</mat-option>\n      <mat-option value=\"position\" *ngIf=\"!context.isIEffectButton\">Position</mat-option>\n      <mat-option value=\"parent\" *ngIf=\"context.isIEffect\">Parent</mat-option>\n      <mat-option value=\"children\" *ngIf=\"context.isIEffect\">Children</mat-option>\n      <!-- this value is deprecated, but it still needs to exist here -->\n      <mat-option value=\"each\" style=\"height: 0;\">All</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <!-- target position -->\n  <mat-form-field *ngIf=\"isNumber(effect.target)\">\n    <input matInput\n           placeholder=\"Target Position\"\n           type=\"number\"\n           min=\"1\"\n           [value]=\"effect.target.toString()\"\n           (change)=\"onTargetPosChange(targetPosInput)\"\n           #targetPosInput>\n  </mat-form-field>\n\n  <!-- target sorting -->\n  <mat-form-field *ngIf=\"effect.target !== 'self'\"\n                  matTooltip=\"By default, targets are processed in the order the -t arguments are given.\">\n    <mat-label>Sort Targets By</mat-label>\n    <mat-select [(value)]=\"selectedTargetSort\" (selectionChange)=\"onTargetSortChange($event)\">\n      <mat-option value=\"user\">User Input</mat-option>\n      <mat-option value=\"hp_asc\">HP Ascending</mat-option>\n      <mat-option value=\"hp_desc\">HP Descending</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<p>\n  Use the Effect Tree to edit the child effects!\n</p>\n","import {Component, OnInit} from '@angular/core';\nimport {MatSelectChange} from '@angular/material/select';\nimport {Target} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\ntype TargetType = 'all' | 'each' | 'self' | 'position' | 'parent' | 'children';\ntype TargetSortType = 'user' | 'hp_asc' | 'hp_desc';\n\n@Component({\n  selector: 'avr-target-effect',\n  templateUrl: './target-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class TargetEffectComponent extends EffectComponent<Target> implements OnInit {\n  selectedTarget: TargetType = 'self';\n  selectedTargetSort: TargetSortType = 'user';\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.selectedTarget = this.isNumber(this.effect.target) ? 'position' : this.effect.target as TargetType;\n    this.selectedTargetSort = (this.effect.sortBy ?? 'user') as TargetSortType;\n  }\n\n  isNumber(val) {\n    return typeof val === 'number';\n  }\n\n  onTargetSelectChange(changeEvent: MatSelectChange) {\n    if (changeEvent.value === 'position') {\n      this.effect.target = 1;\n    } else {\n      this.effect.target = changeEvent.value;\n    }\n\n    if (changeEvent.value === 'self') {\n      this.selectedTargetSort = 'user';\n      this.effect.sortBy = undefined;\n    }\n\n    this.changed.emit();\n  }\n\n  onTargetPosChange(targetPosInput) {\n    this.effect.target = +targetPosInput.value;\n    this.changed.emit();\n  }\n\n  onTargetSortChange(changeEvent: MatSelectChange) {\n    if (changeEvent.value === 'user') {\n      this.effect.sortBy = undefined;\n    } else {\n      this.effect.sortBy = changeEvent.value;\n    }\n    this.changed.emit();\n  }\n}\n","<p>\n  Sets the target's temp HP.\n  <avr-autodoc-link anchor=\"temphp\"></avr-autodoc-link>\n</p>\n\n<!-- amount -->\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n  <mat-form-field fxFlex=\"grow\">\n    <input matInput placeholder=\"Amount\" (change)=\"changed.emit()\" [(ngModel)]=\"effect.amount\" required>\n    <span matSuffix matTooltip=\"AnnotatedString - variables and functions allowed in braces\">{{\"{ }\"}}</span>\n  </mat-form-field>\n</div>\n\n<!-- spell options -->\n<div *ngIf=\"spell != null\">\n  <p class=\"auto-label\">Spell Options</p>\n  <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutAlign=\"left center\">\n    <avr-higher-level [parent]=\"effect\" [spell]=\"spell\" (changed)=\"changed.emit()\"></avr-higher-level>\n    <mat-checkbox [(ngModel)]=\"effect.cantripScale\" (change)=\"changed.emit()\">\n      Scales like Cantrip\n    </mat-checkbox>\n  </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {TempHP} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-temphp-effect',\n  templateUrl: './temphp-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class TempHPEffectComponent extends EffectComponent<TempHP> implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  Outputs a short amount of text in the result embed.\n  <avr-autodoc-link anchor=\"text\"></avr-autodoc-link>\n</p>\n\n<div>\n  <mat-form-field>\n    <mat-label>Text Type</mat-label>\n    <mat-select [(value)]=\"textType\" (selectionChange)=\"changed.emit(); onTextTypeChange()\">\n      <mat-option value=\"text\">\n        Text\n      </mat-option>\n      <mat-option value=\"ref\">\n        Ability Reference\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <span>\n    <mat-icon aria-hidden=\"false\" aria-label=\"Text type help\" inline [matTooltip]=\"TEXT_TYPE_HELPS[textType]\">\n      help\n    </mat-icon>\n  </span>\n</div>\n\n<div *ngIf=\"textType === 'text'\">\n  <mat-form-field class=\"is-fullwidth\">\n    <textarea matInput\n              placeholder=\"Description\"\n              rows=\"5\"\n              (change)=\"changed.emit()\"\n              [(ngModel)]=\"effect.text\">\n    </textarea>\n    <span matSuffix matTooltip=\"AnnotatedString - variables and functions allowed in braces\">{{\"{ }\"}}</span>\n  </mat-form-field>\n</div>\n\n<div *ngIf=\"textType === 'ref'\">\n  <mat-form-field>\n    <mat-label>Referenced Ability</mat-label>\n    <mat-select [value]=\"selectedAbilityRef\" (selectionChange)=\"onRefSelectionChange($event)\">\n      <mat-option>\n        <!--suppress TypeScriptValidateTypes -->\n        <ngx-mat-select-search placeholderLabel=\"Search\"\n                               noEntriesFoundLabel=\"No matches found.\"\n                               ngModel (ngModelChange)=\"debouncedUpdateSearchFilteredGroupedRefs($event)\">\n        </ngx-mat-select-search>\n      </mat-option>\n      <mat-optgroup *ngFor=\"let tup of searchFilteredGroupedRefs\" [label]=\"tup[0]\">\n        <mat-option *ngFor=\"let abilityRef of tup[1]\" [value]=\"abilityRef\">\n          {{abilityRef.name}}\n        </mat-option>\n      </mat-optgroup>\n    </mat-select>\n  </mat-form-field>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {MatSelectChange} from '@angular/material/select';\nimport {debounce, groupBy} from 'lodash';\nimport {DDBEntity} from '../../../../schemas/GameData';\nimport {GamedataService} from '../../../gamedata.service';\nimport {AbilityReference, Text} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\nconst TEXT_TYPE_HELPS = {\n  text: 'Display the text given below when the effect is run. This is the most common way to display an ability\\'s effect.',\n  ref: 'Display the full description of a given feature.'\n};\n\n@Component({\n  selector: 'avr-text-effect',\n  templateUrl: './text-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class TextEffectComponent extends EffectComponent<Text> implements OnInit {\n  TEXT_TYPE_HELPS = TEXT_TYPE_HELPS;\n  textType: 'text' | 'ref' = 'text';\n  // ref stuff\n  allRefs: DDBEntity[] = [];\n  searchFilteredGroupedRefs: [string, DDBEntity[]][] = [];\n  selectedAbilityRef: DDBEntity;\n\n  constructor(private gamedataService: GamedataService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.loadRefs();\n    if (typeof this.effect.text === 'string') {\n      this.textType = 'text';\n    } else {\n      this.textType = 'ref';\n    }\n  }\n\n  onTextTypeChange(): void {\n    if (this.textType === 'text') {\n      this.effect.text = '';\n    } else {\n      this.effect.text = {id: 192, typeId: 12168134};  // also second wind idk\n      this.updateSelectedRef();\n    }\n  }\n\n  // ref stuff\n  onRefSelectionChange(event: MatSelectChange) {\n    this.effect.text = {id: event.value.entity_id, typeId: event.value.type_id};\n    this.selectedAbilityRef = event.value;\n  }\n\n  debouncedUpdateSearchFilteredGroupedRefs = debounce(this.updateSearchFilteredGroupedRefs, 500);\n\n  updateSearchFilteredGroupedRefs(searchTerm: string) {\n    let filteredRefs = this.allRefs.filter(lu => lu.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    this.searchFilteredGroupedRefs = Object.entries(groupBy(filteredRefs, lu => lu.entity_type));\n  }\n\n  updateSelectedRef() {\n    let ref = this.effect.text as AbilityReference;\n    this.selectedAbilityRef = this.allRefs.find(entity => entity.entity_id === ref.id && entity.type_id === ref.typeId);\n  }\n\n  loadRefs() {\n    this.gamedataService.getDescribableEntities()\n      .subscribe(result => {\n        if (result.success) {\n          this.allRefs = result.data;\n          this.updateSelectedRef();\n          this.updateSearchFilteredGroupedRefs('');\n        }\n      });\n  }\n}\n","<p>\n  Saves the result of an IntExpression to a variable without displaying anything.\n  <avr-autodoc-link anchor=\"set-variable\"></avr-autodoc-link>\n</p>\n\n<!-- name, value -->\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left baseline\" class=\"auto-row\">\n  <mat-form-field fxFlex=\"1 3 auto\">\n    <input matInput\n           placeholder=\"Name\"\n           class=\"text-monospace\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.name\"\n           required>\n  </mat-form-field>\n\n  <span>=</span>\n\n  <mat-form-field fxFlex=\"3 1 auto\">\n    <input matInput\n           placeholder=\"Value\"\n           class=\"text-monospace\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.value\"\n           required>\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">calculate\n    </mat-icon>\n  </mat-form-field>\n</div>\n\n<!-- on error -->\n<span class=\"auto-label\">On Error</span>\n<div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\" class=\"auto-row\">\n  <mat-form-field fxFlex=\"grow\">\n    <input matInput\n           placeholder=\"Error Value\"\n           class=\"text-monospace\"\n           (change)=\"changed.emit()\"\n           [(ngModel)]=\"effect.onError\">\n    <mat-icon matSuffix matTooltip=\"IntExpression - variables and functions allowed, braces optional\">calculate\n    </mat-icon>\n  </mat-form-field>\n</div>\n\n<!-- spell options -->\n<div *ngIf=\"spell != null\">\n  <p class=\"auto-label\">Spell Options</p>\n  <div fxLayout=\"row\" fxLayoutGap=\"4px\" fxLayoutAlign=\"left center\">\n    <avr-higher-level fxFlex [parent]=\"effect\" [spell]=\"spell\" (changed)=\"changed.emit()\"></avr-higher-level>\n  </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {SetVariable} from '../../types';\nimport {EffectComponent} from '../shared/EffectComponent';\n\n@Component({\n  selector: 'avr-variable-effect',\n  templateUrl: './variable-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class VariableEffectComponent extends EffectComponent<SetVariable> implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n}\n","import {BehaviorSubject} from 'rxjs';\nimport {AttackEffectComponent} from './effect-editor/attack-effect/attack-effect.component';\nimport {CheckEffectComponent} from './effect-editor/check-effect/check-effect.component';\nimport {ConditionEffectComponent} from './effect-editor/condition-effect/condition-effect.component';\nimport {CounterEffectComponent} from './effect-editor/counter-effect/counter-effect.component';\nimport {DamageEffectComponent} from './effect-editor/damage-effect/damage-effect.component';\nimport {IEffectEffectComponent} from './effect-editor/ieffect-effect/ieffect-effect.component';\nimport {IEffect2EffectComponent} from './effect-editor/ieffect-effect/ieffect2-effect.component';\nimport {RemoveIEffectEffectComponent} from './effect-editor/remove-ieffect-effect/remove-ieffect-effect.component';\nimport {RollEffectComponent} from './effect-editor/roll-effect/roll-effect.component';\nimport {SaveEffectComponent} from './effect-editor/save-effect/save-effect.component';\nimport {EffectComponent} from './effect-editor/shared/EffectComponent';\nimport {SpellEffectComponent} from './effect-editor/spell-effect/spell-effect.component';\nimport {TargetEffectComponent} from './effect-editor/target-effect/target-effect.component';\nimport {TempHPEffectComponent} from './effect-editor/temphp-effect/temphp-effect.component';\nimport {TextEffectComponent} from './effect-editor/text-effect/text-effect.component';\nimport {VariableEffectComponent} from './effect-editor/variable-effect/variable-effect.component';\nimport {AbilityCheck, Attack, AttackInteraction, AutomationEffect, ButtonInteraction, Condition, IEffect, Save, Target} from './types';\n\n// ==== automation-editor ====\nexport interface NodeContext {\n  ancestors: AutomationEffect[];  // root -> direct parent list of ancestor effects\n  parentArray: AutomationEffect[];  // the array to add a new effect to\n  isSpell: boolean;\n  isIEffect: boolean;\n  isIEffectButton: boolean;\n}\n\n// nodes\nexport class AutomationTreeNode {\n  label: string;\n  icon?: string;\n  tooltip?: string;\n\n  _children?: AutomationTreeNode[];\n  get children() {\n    return this._children;\n  };\n\n  set children(value: AutomationTreeNode[]) {\n    this._children = value;\n    this.childrenSubject.next(value);\n  }\n\n  childrenSubject: BehaviorSubject<AutomationTreeNode[]>;\n\n  constructor(label: string, icon?: string, tooltip?: string, children?: AutomationTreeNode[]) {\n    this.label = label;\n    this.icon = icon;\n    this.tooltip = tooltip;\n    this._children = children;\n    this.childrenSubject = new BehaviorSubject<AutomationTreeNode[]>(children);\n  }\n}\n\nexport class AutomationEffectTreeNode extends AutomationTreeNode {\n  effect: AutomationEffect;\n  context: NodeContext;\n\n  constructor(effect: AutomationEffect, context: NodeContext, label: string, icon?: string, tooltip?: string, children?: AutomationTreeNode[]) {\n    super(label, icon, tooltip, children);\n    this.effect = effect;\n    this.context = context;\n  }\n}\n\nexport class AutomationAddEffectNode extends AutomationTreeNode {\n  context: NodeContext;\n\n  constructor(context: NodeContext, label: string, icon?: string, tooltip?: string, children?: AutomationTreeNode[]) {\n    super(label, icon, tooltip, children);\n    this.context = context;\n  }\n}\n\n// builder\nexport class AutomationTreeBuilder {\n  context: Partial<NodeContext> = {ancestors: []};\n  effectTreeNodeMap: WeakMap<AutomationEffect, AutomationEffectTreeNode>;\n\n  constructor(isSpell: boolean) {\n    this.context.isSpell = isSpell;\n    this.effectTreeNodeMap = new WeakMap<AutomationEffect, AutomationEffectTreeNode>();\n  }\n\n  public effectsToNodes(effects: AutomationEffect[]): AutomationTreeNode[] {\n    // given a list of Automation effects, build the node tree to give to the TreeControl\n    let out: AutomationTreeNode[] = [];\n\n    for (const effect of effects) {\n      out.push(this.effectToNode(effect, effects));\n    }\n\n    // add node to add additional effects to the given effect array\n    out.push(new AutomationAddEffectNode(\n      this.getContext(effects),\n      'Add Effect'\n    ));\n\n    return out;\n  }\n\n  public effectToNode(effect: AutomationEffect, parentArray: AutomationEffect[]): AutomationEffectTreeNode {\n    const existing = this.effectTreeNodeMap.get(effect);\n\n    // find the def for the effect\n    const nodeDef = AUTOMATION_NODE_DEFS[effect.type];\n\n    let result;\n    let children;\n    if (nodeDef === undefined) {\n      result = new AutomationEffectTreeNode(\n        effect,\n        this.getContext(parentArray),\n        'Unknown Node',\n        'help_outline',\n        'This node is not yet supported by the web builder.',\n      );\n    } else {\n      // update ancestor stack, recursively build nodes\n      children = this.withContext(\n        {ancestors: [...this.context.ancestors, effect]},\n        () => this.childrenBuilders[effect.type]?.call(this, effect)\n      );\n\n      result = new AutomationEffectTreeNode(\n        effect,\n        this.getContext(parentArray),\n        nodeDef.label || effect.type,\n        nodeDef.icon,\n        nodeDef.tooltip,\n        children\n      );\n    }\n\n    if (existing) {\n      // update the attributes of the existing node:\n      // all we need to do is update the children since the other attrs are static for a given effect type\n      if (effect.type === 'target') {\n        // special case since target's children are AutomationEffectTreeNodes\n        // and ieffect2's children have mapping (see ieffect2 helpers)\n        existing.children = children;\n      } else if (existing.children?.length === children?.length) {\n        for (let idx = 0; idx < existing.children?.length ?? 0; idx++) {\n          existing.children[idx].label = children[idx].label;\n          existing.children[idx].icon = children[idx].icon;\n          existing.children[idx].tooltip = children[idx].tooltip;\n          existing.children[idx].children = children[idx].children;\n        }\n      } else {\n        existing.children = children;\n      }\n      return existing;\n    }\n\n    this.effectTreeNodeMap.set(effect, result);\n    return result;\n  }\n\n  // context helpers\n  private getContext(parentArray: AutomationEffect[]): NodeContext {\n    return {\n      parentArray,\n      ancestors: this.context.ancestors ?? [],\n      isSpell: this.context.isSpell ?? false,\n      isIEffect: this.context.isIEffect ?? false,\n      isIEffectButton: this.context.isIEffectButton ?? false\n    };\n  }\n\n  private withContext<T>(contextProps: Partial<NodeContext>, callback: () => T): T {\n    const oldContext = {...this.context};\n    Object.assign(this.context, contextProps);\n    const result = callback();\n    this.context = oldContext;\n    return result;\n  }\n\n  // impls for node children\n  private childrenBuilders = {\n    target(effect: Target): AutomationTreeNode[] {\n      return this.effectsToNodes(effect.effects);\n    },\n    attack(effect: Attack): AutomationTreeNode[] {\n      return [\n        new AutomationTreeNode('Hit', undefined, undefined, this.effectsToNodes(effect.hit)),\n        new AutomationTreeNode('Miss', undefined, undefined, this.effectsToNodes(effect.miss))\n      ];\n    },\n    save(effect: Save): AutomationTreeNode[] {\n      return [\n        new AutomationTreeNode('Fail', undefined, undefined, this.effectsToNodes(effect.fail)),\n        new AutomationTreeNode('Success', undefined, undefined, this.effectsToNodes(effect.success))\n      ];\n    },\n    ieffect2(effect: IEffect): AutomationTreeNode[] {\n      const out = [];\n      for (const attack of effect.attacks ?? []) {\n        out.push(this.ieffect2AttackNode(attack));\n      }\n      for (const button of effect.buttons ?? []) {\n        out.push(this.ieffect2ButtonNode(button));\n      }\n      return out;\n    },\n    condition(effect: Condition): AutomationTreeNode[] {\n      return [\n        new AutomationTreeNode('On True', undefined, undefined, this.effectsToNodes(effect.onTrue)),\n        new AutomationTreeNode('On False', undefined, undefined, this.effectsToNodes(effect.onFalse))\n      ];\n    },\n    check(effect: AbilityCheck): AutomationTreeNode[] {\n      if (effect.dc != null) {\n        return [\n          new AutomationTreeNode('Success', undefined, undefined, this.effectsToNodes(effect.success)),\n          new AutomationTreeNode('Fail', undefined, undefined, this.effectsToNodes(effect.fail))\n        ];\n      } else if (effect.contestAbility != null) {\n        return [\n          new AutomationTreeNode('Target Wins', undefined, undefined, this.effectsToNodes(effect.success)),\n          new AutomationTreeNode('Caster Wins', undefined, undefined, this.effectsToNodes(effect.fail))\n        ];\n      }\n      return [];\n    }\n  };\n\n  // ieffect2 helpers\n  ieffect2AttackNode(attack: AttackInteraction): AutomationTreeNode {\n    return this.ieffect2Node(attack, `Action: ${attack.attack.name}`, attack.attack.automation, undefined, 'Edit the parent Initiative Effect node to edit this attack!');\n  }\n\n  ieffect2ButtonNode(button: ButtonInteraction): AutomationTreeNode {\n    return this.withContext(\n      {isIEffectButton: true},\n      () => this.ieffect2Node(button, `Button: ${button.label}`, button.automation, undefined, 'Edit the parent Initiative Effect node to edit this button!')\n    );\n  }\n\n  ieffect2Node(interaction: AttackInteraction | ButtonInteraction, name: string, automation: AutomationEffect[], icon, tooltip) {\n    // update ancestor stack, recursively build nodes\n    const children = this.withContext(\n      {ancestors: [], isIEffect: true},\n      () => this.effectsToNodes(automation)\n    );\n    return new AutomationTreeNode(name, icon, tooltip, children);\n  }\n}\n\n// ==== helpful node constants ====\ntype EffectComponentImpl = (new (..._) => EffectComponent<any>);\n\ninterface NodeDef {\n  label?: string;\n  icon?: string;\n  tooltip?: string;\n  component?: EffectComponentImpl;\n}\n\ninterface NodeDefRegistry {\n  [nodeType: string]: NodeDef;\n}\n\n\nexport const AUTOMATION_NODE_DEFS: NodeDefRegistry = {\n  target: {\n    label: 'Target',\n    icon: 'my_location',\n    component: TargetEffectComponent\n  },\n  attack: {\n    label: 'Attack Roll',\n    icon: 'ddb:melee-attack',\n    component: AttackEffectComponent\n  },\n  save: {\n    label: 'Saving Throw',\n    icon: 'ddb:resistant',\n    component: SaveEffectComponent\n  },\n  damage: {\n    label: 'Damage',\n    icon: 'ddb:force',\n    component: DamageEffectComponent\n  },\n  temphp: {\n    label: 'Temp HP',\n    icon: 'ddb:healing',\n    component: TempHPEffectComponent\n  },\n  ieffect: {\n    label: 'Initiative Effect (Legacy)',\n    icon: 'extension',\n    component: IEffectEffectComponent\n  },\n  ieffect2: {\n    label: 'Initiative Effect',\n    icon: 'extension',\n    component: IEffect2EffectComponent\n  },\n  remove_ieffect: {\n    label: 'Remove Initiative Effect',\n    icon: 'extension_off',\n    component: RemoveIEffectEffectComponent\n  },\n  roll: {\n    label: 'Roll',\n    icon: 'ddb:digital-dice',\n    component: RollEffectComponent\n  },\n  text: {\n    label: 'Text',\n    icon: 'chat',\n    component: TextEffectComponent\n  },\n  variable: {\n    label: 'Set Variable',\n    icon: 'code',\n    component: VariableEffectComponent\n  },\n  condition: {\n    label: 'Branch',\n    icon: 'call_split',\n    component: ConditionEffectComponent\n  },\n  counter: {\n    label: 'Use Counter',\n    icon: 'looks_one',\n    component: CounterEffectComponent\n  },\n  spell: {\n    label: 'Cast Spell',\n    icon: 'ddb:spells',\n    component: SpellEffectComponent\n  },\n  check: {\n    label: 'Ability Check',\n    icon: 'beenhere',\n    component: CheckEffectComponent\n  }\n};\n\n","import {Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation} from '@angular/core';\nimport {groupBy} from 'lodash';\nimport {\n  AbilityCheck,\n  Attack,\n  AutomationEffect,\n  CastSpell,\n  Condition,\n  Damage,\n  IEffect,\n  RemoveIEffect,\n  Roll,\n  Save,\n  SetVariable,\n  Target,\n  TempHP,\n  Text,\n  UseCounter\n} from './types';\nimport {AUTOMATION_NODE_DEFS, NodeContext} from './utils';\n\nfunction hasAncestorOfType(type: string): (context: NodeContext) => boolean {\n  return context => context.ancestors.some(effect => effect.type === type);\n}\n\nfunction noAncestorOfType(type: string): (context: NodeContext) => boolean {\n  return context => !(hasAncestorOfType(type)(context));\n}\n\ninterface EffectRule {\n  id: string;\n  rules: Array<(context: NodeContext) => boolean>;\n  label?: string;  // defaults to utils.AUTOMATION_NODE_DEFS[id].label\n  group?: string;  // defaults to \"Effects\"\n  icon?: string;  // defaults to utils.AUTOMATION_NODE_DEFS[id].icon\n}\n\n// each type option defines a list of rules (meta -> bool) - all must return true to be addable\nconst typeRules: EffectRule[] = [\n  {id: 'target', rules: [noAncestorOfType('target')]},\n  {id: 'attack', rules: [hasAncestorOfType('target')]},\n  {id: 'save', rules: [hasAncestorOfType('target')]},\n  {id: 'damage', rules: [hasAncestorOfType('target')]},\n  {id: 'temphp', rules: [hasAncestorOfType('target')]},\n  {id: 'ieffect2', rules: [hasAncestorOfType('target')]},\n  {id: 'remove_ieffect', rules: [meta => meta.isIEffect]},\n  {id: 'roll', rules: []},\n  {id: 'text', rules: []},\n  {id: 'variable', rules: []},\n  {id: 'condition', rules: []},\n  {id: 'counter', rules: []},\n  {id: 'spell', rules: [context => context.ancestors.length === 0, context => !context.isSpell]},\n  {id: 'check', rules: [hasAncestorOfType('target')]},\n  // --- presets ---\n  {id: 'preset_atk_dmg', label: 'Attack and Damage', group: 'Presets', rules: [noAncestorOfType('target')]},\n  {id: 'preset_save_half', label: 'Save for Half', group: 'Presets', rules: [noAncestorOfType('target')]}\n];\n\n// ==== component ====\n@Component({\n  selector: 'avr-new-effect-button',\n  template: `\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n      <mat-icon>add</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <div *ngFor=\"let group of satisfiedRules\">\n        <!-- use a disabled button as a group label -->\n        <button mat-menu-item disabled>\n          <strong>{{group[0]}}</strong>\n        </button>\n\n        <!-- render each button in the group -->\n        <button mat-menu-item *ngFor=\"let effectRule of group[1]\" (click)=\"addEffect(effectRule.id)\">\n          <mat-icon *ngIf=\"getRuleIcon(effectRule) && getRuleIcon(effectRule).includes('ddb:')\"\n                    [svgIcon]=\"getRuleIcon(effectRule)\"></mat-icon>\n          <mat-icon *ngIf=\"getRuleIcon(effectRule) && !getRuleIcon(effectRule).includes('ddb:')\">{{getRuleIcon(effectRule)}}</mat-icon>\n          <span>{{getRuleLabel(effectRule)}}</span>\n        </button>\n      </div>\n    </mat-menu>\n  `,\n  styleUrls: ['./automation-editor.component.scss'],\n  encapsulation: ViewEncapsulation.None  // inherit button styling from automation-editor\n})\nexport class NewEffectButtonComponent implements OnInit {\n\n  @Input() context: NodeContext;\n  @Output() created = new EventEmitter();\n  satisfiedRules: [string, EffectRule[]][];\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    const satisfiedRules = typeRules\n      .filter((effectRule) => effectRule.rules.every(rule => rule(this.context)));\n    this.satisfiedRules = Object.entries(groupBy(satisfiedRules, effectRule => effectRule.group ?? 'Effects'));\n  }\n\n  // display\n  getRuleIcon(rule: EffectRule): string | null {\n    return rule.icon ?? AUTOMATION_NODE_DEFS[rule.id]?.icon ?? null;\n  }\n\n  getRuleLabel(rule: EffectRule): string {\n    return rule.label ?? AUTOMATION_NODE_DEFS[rule.id]?.label ?? rule.id;\n  }\n\n  // data\n  addEffect(toAddType) {\n    let effect: AutomationEffect;\n    switch (toAddType) {\n      case 'target':\n        effect = {type: 'target', target: 'self', effects: []} as Target;\n        break;\n      case 'attack':\n        effect = {type: 'attack', hit: [], miss: []} as Attack;\n        break;\n      case 'save':\n        effect = {type: 'save', stat: 'dex', fail: [], success: []} as Save;\n        break;\n      case 'damage':\n        effect = {type: 'damage', damage: ''} as Damage;\n        break;\n      case 'temphp':\n        effect = {type: 'temphp', amount: ''} as TempHP;\n        break;\n      case 'ieffect2':\n        effect = {type: 'ieffect2', name: ''} as IEffect;\n        break;\n      case 'remove_ieffect':\n        effect = {type: 'remove_ieffect'} as RemoveIEffect;\n        break;\n      case 'roll':\n        effect = {type: 'roll', dice: '', name: ''} as Roll;\n        break;\n      case 'text':\n        effect = {type: 'text', text: ''} as Text;\n        break;\n      case 'variable':\n        effect = {type: 'variable', name: '', value: ''} as SetVariable;\n        break;\n      case 'condition':\n        effect = {type: 'condition', condition: '', onTrue: [], onFalse: []} as Condition;\n        break;\n      case 'counter':\n        effect = {type: 'counter', counter: '', amount: ''} as UseCounter;\n        break;\n      case 'spell':\n        effect = {type: 'spell', id: 2102} as CastSpell;\n        break;\n      case 'check':\n        effect = {type: 'check', ability: 'athletics'} as AbilityCheck;\n        break;\n      // --- presets ---\n      case 'preset_atk_dmg':\n        effect = this.generateAttackAndDamagePreset();\n        break;\n      case 'preset_save_half':\n        this.doSaveForHalfPreset();\n        return;\n      default:\n        console.error(`Unknown effect type to add: \"${toAddType}\"`);\n        return;\n    }\n    this.newEffect(effect);\n    this.created.emit();\n  }\n\n  newEffect(effect: AutomationEffect) {\n    this.context.parentArray.push(effect);\n  }\n\n  // --- presets ---\n  generateAttackAndDamagePreset(): AutomationEffect {\n    return {\n      type: 'target',\n      target: 'each',\n      effects: [\n        {\n          type: 'attack',\n          hit: [\n            {type: 'damage', damage: '1d10[fire]'} as Damage\n          ],\n          miss: []\n        } as Attack\n      ]\n    } as Target;\n  }\n\n  doSaveForHalfPreset() {\n    const effects = [\n      {type: 'roll', dice: '8d6[fire]', name: 'damage'} as Roll,\n      {\n        type: 'target',\n        target: 'all',\n        effects: [\n          {\n            type: 'save',\n            stat: 'dex',\n            fail: [\n              {type: 'damage', damage: '{damage}'} as Damage\n            ],\n            success: [\n              {type: 'damage', damage: '({damage}/2)'} as Damage\n            ]\n          } as Save\n        ]\n      } as Target\n    ];\n    this.context.parentArray.push(...effects);\n    this.created.emit();\n  }\n}\n\n\n\n","<p>\n  This effect has not yet been implemented in the Automation Editor. Sorry about that!\n</p>\n<p>\n  If you know what you're doing, you can check below to edit this effect's YAML directly.\n  <em>This can lead to automation corruption. Here be dragons.</em>\n</p>\n<p>\n  <mat-checkbox [(ngModel)]=\"userKnowsWhatTheyreDoing\">I know what I'm doing</mat-checkbox>\n</p>\n<div *ngIf=\"userKnowsWhatTheyreDoing\">\n  <p>\n    Good luck! Click the button below once you've edited the YAML to update the effect.\n  </p>\n  <button mat-flat-button color=\"primary\" (click)=\"updateEffectData()\">Update Effect Data</button>\n  <pre class=\"mat-error\" *ngIf=\"error\">{{error}}</pre>\n  <mat-form-field class=\"is-fullwidth text-monospace\">\n    <textarea matInput rows=\"5\" [(ngModel)]=\"editedYaml\">\n    </textarea>\n  </mat-form-field>\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {EffectComponent} from '../shared/EffectComponent';\nimport {parse as YAMLParse, stringify as YAMLStringify} from 'yaml';\n\n@Component({\n  selector: 'avr-unknown-effect',\n  templateUrl: './unknown-effect.component.html',\n  styleUrls: ['../shared.scss']\n})\nexport class UnknownEffectComponent extends EffectComponent<any> implements OnInit {\n\n  userKnowsWhatTheyreDoing = false;\n  editedYaml: string;\n  error: string;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.editedYaml = YAMLStringify(this.effect);\n  }\n\n  updateEffectData() {\n    this.error = null;\n\n    let parsed;\n    try {\n      parsed = YAMLParse(this.editedYaml);\n    } catch (e) {\n      this.error = `Could not parse YAML: ${e}`;\n      return;\n    }\n\n    // replace the node in the parent array\n    const idx = this.effectNode.context.parentArray.indexOf(this.effectNode.effect);\n    this.effectNode.context.parentArray[idx] = parsed;\n    // lol good luck\n    this.changed.emit();\n    this.treeChanged.emit();\n    this.deleted.emit();\n  }\n}\n","<div class=\"editor-header\">\n  <span class=\"editor-header-text\">\n    {{effectNode.label}}\n  </span>\n  <span class=\"toolbar-spacer\"></span>\n  <span>\n    <button mat-icon-button matTooltip=\"Move Up\" *ngIf=\"!isFirst\" (click)=\"moveUp()\">\n      <mat-icon aria-label=\"Move Up\">arrow_upward</mat-icon>\n    </button>\n    <button mat-icon-button matTooltip=\"Move Down\" *ngIf=\"!isLast\" (click)=\"moveDown()\">\n      <mat-icon aria-label=\"Move Down\">arrow_downward</mat-icon>\n    </button>\n    <avr-doubleclick-delete-button (delete)=\"delete()\"></avr-doubleclick-delete-button>\n  </span>\n</div>\n\n<ng-template effectHost></ng-template>\n\n<div *ngIf=\"debugMode\">\n  <mat-divider></mat-divider>\n  <span class=\"auto-label\">Debug Information</span>\n  <pre class=\"text-monospace\" [innerHTML]=\"effectYAML\"></pre>\n</div>\n\n","import {moveItemInArray} from '@angular/cdk/drag-drop';\nimport {\n  Component,\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport {stringify as YAMLStringify} from 'yaml';\nimport {Spell} from '../../../schemas/homebrew/Spells';\nimport {AUTOMATION_NODE_DEFS, AutomationEffectTreeNode} from '../utils';\nimport {EffectComponent} from './shared/EffectComponent';\nimport {UnknownEffectComponent} from './unknown-effect/unknown-effect.component';\n\n@Directive({\n  selector: '[effectHost]',\n})\nexport class EffectEditorDirective {\n  constructor(public viewContainerRef: ViewContainerRef) {\n  }\n}\n\n@Component({\n  selector: 'avr-effect-editor',\n  templateUrl: './effect-editor.component.html',\n  styleUrls: ['./effect-editor.component.css', '../shared.scss', './shared.scss']\n})\nexport class EffectEditorComponent implements OnInit, OnChanges {\n\n  @Input() effectNode: AutomationEffectTreeNode;\n  @Input() spell: Spell;\n  @Input() debugMode = false;\n\n  @Output() changed = new EventEmitter();\n  @Output() treeChanged = new EventEmitter();\n  @Output() deleted = new EventEmitter();\n  @ViewChild(EffectEditorDirective, {static: true}) effectEditorDirective!: EffectEditorDirective;\n\n  get isFirst(): boolean {\n    return this.effectNode.context.parentArray.indexOf(this.effectNode.effect) === 0;\n  }\n\n  get isLast(): boolean {\n    return this.effectNode.context.parentArray.indexOf(this.effectNode.effect) === this.effectNode.context.parentArray.length - 1;\n  }\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.loadComponent();\n  }\n\n  loadComponent() {\n    const componentT = AUTOMATION_NODE_DEFS[this.effectNode.effect.type]?.component ?? UnknownEffectComponent;\n\n    const viewContainerRef = this.effectEditorDirective.viewContainerRef;\n    viewContainerRef.clear();\n\n    const componentRef = viewContainerRef.createComponent<EffectComponent<any>>(componentT);\n    componentRef.instance.effectNode = this.effectNode;\n    componentRef.instance.spell = this.spell;\n    componentRef.instance.changed.subscribe(() => {\n      this.changed.emit();\n    });\n    componentRef.instance.treeChanged.subscribe(() => {\n      this.treeChanged.emit();\n    });\n    componentRef.instance.deleted.subscribe(() => {\n      this.deleted.emit();\n    });\n  }\n\n  moveUp() {\n    const index = this.effectNode.context.parentArray.indexOf(this.effectNode.effect);\n    const newIndex = index - 1;\n    if (newIndex > -1) {\n      moveItemInArray(this.effectNode.context.parentArray, index, newIndex);\n      this.changed.emit();\n      this.treeChanged.emit();\n    }\n  }\n\n  moveDown() {\n    const index = this.effectNode.context.parentArray.indexOf(this.effectNode.effect);\n    const newIndex = index + 1;\n    if (newIndex < this.effectNode.context.parentArray.length) {\n      moveItemInArray(this.effectNode.context.parentArray, index, newIndex);\n      this.changed.emit();\n      this.treeChanged.emit();\n    }\n  }\n\n  delete() {\n    const index = this.effectNode.context.parentArray.indexOf(this.effectNode.effect);\n    if (index > -1) {\n      this.effectNode.context.parentArray.splice(index, 1);\n      this.changed.emit();\n      this.treeChanged.emit();\n      this.deleted.emit();\n    }\n  }\n\n  // ==== debug mode helpers ====\n  get effectYAML(): string {\n    return YAMLStringify(this.effectNode.effect);\n  }\n}\n","<div class=\"editor-container ignore-theme\">\n  <!-- automation tree: easy to scroll through list of effects -->\n  <div class=\"automation-tree\">\n    <div class=\"editor-header\">\n      <span class=\"editor-header-text\">Effect Tree</span>\n      <span class=\"toolbar-spacer\"></span>\n      <span>\n        <button mat-icon-button matTooltip=\"Expand All\" (click)=\"treeControl.expandAll()\">\n          <mat-icon>expand</mat-icon>\n        </button>\n        <button mat-icon-button matTooltip=\"Collapse All\" (click)=\"treeControl.collapseAll()\">\n          <mat-icon>compress</mat-icon>\n        </button>\n      </span>\n    </div>\n\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n      <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\"\n                            class=\"tree-node\"\n                            [class.tree-node-active]=\"node === selectedEffectNode\">\n        <span [matTooltip]=\"node.tooltip\">\n          <!-- icon -->\n          <span *ngIf=\"node.icon\">\n            <!-- for some reason I can't replicate the styling of this button so we just use a disabled button -->\n            <button mat-icon-button disabled>\n              <mat-icon class=\"node-icon\" [svgIcon]=\"node.icon\" *ngIf=\"node.icon.includes('ddb:')\"></mat-icon>\n              <mat-icon class=\"node-icon\" *ngIf=\"!node.icon.includes('ddb:')\">{{node.icon}}</mat-icon>\n            </button>\n          </span>\n          <!-- label -->\n          {{node.label}}\n          <!-- for nodes representing effects (AutomationEffectTreeNode) -->\n          <span *ngIf=\"isEffectNode(node)\">\n            <button mat-icon-button (click)=\"beginEditEffectNode(node)\">\n              <mat-icon>edit</mat-icon>\n            </button>\n          </span>\n          <!-- for AutomationAddEffectNode -->\n          <span *ngIf=\"isAddEffectNode(node)\">\n            <avr-new-effect-button [context]=\"node.context\" (created)=\"onNewEffectCreated(node)\"></avr-new-effect-button>\n          </span>\n        </span>\n        <!-- for nodes with children -->\n        <span *ngIf=\"hasChild(node)\">\n          <button mat-icon-button (click)=\"toggleNode(node, $event)\">\n            <mat-icon>\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n            </mat-icon>\n          </button>\n        </span>\n        <div [class.tree-invisible]=\"!treeControl.isExpanded(node)\" class=\"tree-children-container\">\n          <ng-container cdkTreeNodeOutlet></ng-container>\n        </div>\n      </cdk-nested-tree-node>\n    </cdk-tree>\n  </div> <!-- </automation-tree> -->\n\n  <!-- node editor: individual node editing -->\n  <div class=\"node-editor\">\n    <div *ngIf=\"!selectedEffectNode\">\n      <div class=\"editor-header\">\n        <span class=\"editor-header-text\">Node Editor</span>\n      </div>\n      No node selected. Select an automation effect node from the Effect Tree to edit it!\n    </div>\n    <div *ngIf=\"selectedEffectNode\">\n      <avr-effect-editor [effectNode]=\"selectedEffectNode\"\n                         [spell]=\"spell\"\n                         [debugMode]=\"debugMode\"\n                         (changed)=\"changed.emit()\"\n                         (treeChanged)=\"refreshTree()\"\n                         (deleted)=\"selectedEffectNode = null\">\n      </avr-effect-editor>\n    </div>\n  </div> <!-- </node-editor> -->\n</div>\n\n","import {NestedTreeControl} from '@angular/cdk/tree';\nimport {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {MatTreeNestedDataSource} from '@angular/material/tree';\nimport {Spell} from '../../schemas/homebrew/Spells';\nimport {AutomationEffect} from './types';\nimport {AutomationAddEffectNode, AutomationEffectTreeNode, AutomationTreeBuilder, AutomationTreeNode} from './utils';\n\n@Component({\n  selector: 'avr-automation-editor',\n  templateUrl: './automation-editor.component.html',\n  styleUrls: ['./automation-editor.component.scss', './shared.scss']\n})\nexport class AutomationEditorComponent implements OnInit, OnChanges {\n\n  @Input() automation: AutomationEffect[];\n  @Input() spell: Spell;\n  @Input() debugMode = false;\n  @Output() changed = new EventEmitter();\n\n  // tree\n  treeControl = new NestedTreeControl<AutomationTreeNode>(node => node.childrenSubject);\n  dataSource = new MatTreeNestedDataSource<AutomationTreeNode>();\n  nodeBuilder: AutomationTreeBuilder;\n\n  // node editor\n  selectedEffectNode: AutomationEffectTreeNode;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.nodeBuilder = new AutomationTreeBuilder(!!this.spell);\n    this.refreshTree();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.refreshTree();\n  }\n\n  onNewEffectCreated(byNode: AutomationAddEffectNode) {\n    // the *byNode* node just created a new effect\n    this.refreshTree();\n    this.changed.emit();\n    // mildly hacky way to set the selected node to the newly created node\n    const newEffect = byNode.context.parentArray[byNode.context.parentArray.length - 1];\n    this.selectedEffectNode = this.nodeBuilder.effectTreeNodeMap.get(newEffect) ?? this.selectedEffectNode;\n  }\n\n  refreshTree() {\n    this.dataSource.data = this.nodeBuilder?.effectsToNodes(this.automation);\n    this.treeControl.dataNodes = this.dataSource.data;\n  }\n\n  hasChild = (node: AutomationTreeNode) => !!node.children && node.children.length > 0;\n  isEffectNode = (node: AutomationTreeNode) => node instanceof AutomationEffectTreeNode;\n  isAddEffectNode = (node: AutomationTreeNode) => node instanceof AutomationAddEffectNode;\n\n  // tree actions\n  toggleNode(node: AutomationTreeNode, event: MouseEvent) {\n    // recursive expand on command/control-click\n    if (event.metaKey || event.ctrlKey) {\n      this.treeControl.toggleDescendants(node);\n    } else {\n      this.treeControl.toggle(node);\n    }\n  }\n\n  beginEditEffectNode(node: AutomationEffectTreeNode) {\n    this.selectedEffectNode = node;\n  }\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {stringify as YAMLStringify} from 'yaml';\n\nexport interface JSONExportDialogData {\n  name: string;\n  data: any;\n  yaml?: boolean;  // whether or not to export to YAML instead of JSON\n}\n\n@Component({\n  selector: 'avr-json-export-dialog',\n  templateUrl: './json-export-dialog.component.html',\n  styleUrls: ['./json-export-dialog.component.css']\n})\nexport class JSONExportDialog implements OnInit {\n\n  jsonData: string;\n  jsonOrYaml: string = 'JSON';\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: JSONExportDialogData) {\n    if (data.yaml) {\n      this.jsonOrYaml = 'YAML';\n      this.jsonData = YAMLStringify(this.data.data);\n    } else {\n      this.jsonOrYaml = 'JSON';\n      this.jsonData = JSON.stringify(this.data.data);\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  copy(inputElement) {\n    inputElement.select();\n    document.execCommand('copy');\n    inputElement.setSelectionRange(0, 0);\n  }\n\n}\n","<h2 mat-dialog-title>{{jsonOrYaml}} - {{data.name}}</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <div class=\"form-container\">\n    <mat-form-field class=\"text-monospace\">\n      <textarea matInput readonly [value]=\"jsonData\" [placeholder]=\"jsonOrYaml\" rows=\"10\" #jsonElem></textarea>\n      <button mat-button matSuffix mat-icon-button aria-label=\"Copy\" (click)=\"copy(jsonElem)\"\n              matTooltip=\"Copy to clipboard\">\n        <mat-icon>file_copy</mat-icon>\n      </button>\n    </mat-form-field>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button mat-dialog-close>Done</button>\n</mat-dialog-actions>\n","<h2 mat-dialog-title>Importing from {{jsonOrYaml}}...</h2>\n<mat-dialog-content class=\"mat-typography\"\n                    (keydown.control.enter)=\"validateAndExit()\"\n                    (keydown.meta.enter)=\"validateAndExit()\">\n  <p>\n    Paste your {{jsonOrYaml}} here. This should be either an object or list exported from this site.\n  </p>\n  <span class=\"mat-small\">You can use <kbd>Ctrl-Enter</kbd> to save changes.</span>\n\n  <div class=\"form-container\">\n    <mat-form-field class=\"text-monospace\">\n      <textarea matInput [placeholder]=\"jsonOrYaml\" rows=\"10\" [(ngModel)]=\"data\"></textarea>\n    </mat-form-field>\n  </div>\n  <mat-error *ngIf=\"error\" ><div [innerHTML]=\"error\"></div></mat-error>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-button (click)=\"validateAndExit()\">\n    Import\n  </button>\n  <mat-spinner [diameter]=\"18\" *ngIf=\"loading\"></mat-spinner>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {parse as YAMLParse} from 'yaml';\n\nexport interface JSONImportDialogData {\n  validator?: (data: object) => void;  // if passed, should handle validating data and closing the dialog if successful\n  yaml?: boolean;  // whether or not to accept YAML in addition to JSON\n}\n\n@Component({\n  selector: 'avr-json-import-dialog',\n  templateUrl: './json-import-dialog.component.html',\n  styleUrls: ['./json-import-dialog.component.css']\n})\nexport class JSONImportDialog implements OnInit {\n\n  data: string;\n  error: string;\n  loading = false;\n  jsonOrYaml: string = 'JSON';\n\n  constructor(private dialogRef: MatDialogRef<JSONImportDialog>,\n              @Inject(MAT_DIALOG_DATA) public input: JSONImportDialogData) {\n  }\n\n  ngOnInit() {\n    this.jsonOrYaml = this.input.yaml ? 'YAML' : 'JSON';\n  }\n\n  validateAndExit() {\n    this.loading = true;\n    this.error = null;\n\n    let parsed;\n    try {\n      if (this.input.yaml) {\n        parsed = YAMLParse(this.data);\n      } else {\n        parsed = JSON.parse(this.data);\n      }\n    } catch (e) {\n      this.error = 'Invalid data format';\n      this.loading = false;\n      return;\n    }\n\n    if (this.input.validator) {\n      this.input.validator(parsed);\n    } else {\n      this.dialogRef.close(parsed);\n    }\n  }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, share} from 'rxjs/operators';\nimport {environment} from '../../environments/environment';\nimport {ApiResponse, defaultErrorHandler, defaultOptions} from '../dashboard/APIHelper';\nimport {DDBEntity, LimitedUse} from '../schemas/GameData';\n\nconst baseUrl = `${environment.apiURL}/gamedata`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamedataService {\n\n  // cached stuff\n  entitlements: Observable<ApiResponse<Map<string, DDBEntity>>>;\n  allEntitlements: Observable<ApiResponse<Map<string, DDBEntity>>>;\n  limitedUse: Observable<ApiResponse<LimitedUse[]>>;\n  describableEntities: Observable<ApiResponse<DDBEntity[]>>;\n\n  constructor(private http: HttpClient) {\n  }\n\n  getEntitlements(): Observable<ApiResponse<Map<string, DDBEntity>>> {\n    if (this.entitlements) {\n      return this.entitlements;\n    }\n    const req = this.http.get<ApiResponse<Map<string, DDBEntity>>>(`${baseUrl}/entitlements`, defaultOptions())\n      .pipe(map(resp => {\n        if (resp.success) {\n          resp.data = new Map(Object.entries(resp.data));\n        }\n        return resp;\n      }))\n      .pipe(share())\n      .pipe(catchError(defaultErrorHandler));\n    this.entitlements = req;\n    req.subscribe(result => this.entitlements = of(result));\n    return req;\n  }\n\n  getAllEntitlements(): Observable<ApiResponse<Map<string, DDBEntity>>> {\n    if (this.allEntitlements) {\n      return this.allEntitlements;\n    }\n    const req = this.http.get<ApiResponse<Map<string, DDBEntity>>>(`${baseUrl}/entitlements?free=true`, defaultOptions())\n      .pipe(map(resp => {\n        if (resp.success) {\n          resp.data = new Map(Object.entries(resp.data));\n        }\n        return resp;\n      }))\n      .pipe(share())\n      .pipe(catchError(defaultErrorHandler));\n    this.allEntitlements = req;\n    req.subscribe(result => this.allEntitlements = of(result));\n    return req;\n  }\n\n  getLimitedUse(): Observable<ApiResponse<LimitedUse[]>> {\n    if (this.limitedUse) {\n      return this.limitedUse;\n    }\n    const req = this.http.get<ApiResponse<LimitedUse[]>>(`${baseUrl}/limiteduse`, defaultOptions())\n      .pipe(share())\n      .pipe(catchError(defaultErrorHandler));\n    this.limitedUse = req;\n    req.subscribe(result => this.limitedUse = of(result));\n    return req;\n  }\n\n  getDescribableEntities(): Observable<ApiResponse<DDBEntity[]>> {\n    if (this.describableEntities) {\n      return this.describableEntities;\n    }\n    const req = this.http.get<ApiResponse<DDBEntity[]>>(`${baseUrl}/describable`, defaultOptions())\n      .pipe(share())\n      .pipe(catchError(defaultErrorHandler));\n    this.describableEntities = req;\n    req.subscribe(result => this.describableEntities = of(result));\n    return req;\n  }\n\n  // ---- helpers ----\n  entityFromEntitlement(entityType: string, entityId: number, useFree: boolean = false): Observable<DDBEntity | null> {\n    const entitlementGetter = useFree ? this.getAllEntitlements() : this.getEntitlements();\n    return entitlementGetter\n      .pipe(map(response => {\n        if (response.success) {\n          const entity = response.data.get(`${entityType}-${entityId.toString()}`);\n          if (entity) {\n            return entity;\n          }\n        }\n        return null;\n      }));\n  }\n}\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, Optional, SkipSelf, Output, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, (importantProperties === null || importantProperties === void 0 ? void 0 : importantProperties.has(key)) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height,\n        x: clientRect.x,\n        y: clientRect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        var _a, _b;\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            (_a = this._rootElement) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        (_b = this._anchor) === null || _b === void 0 ? void 0 : _b.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        var _a, _b;\n        (_a = this._preview) === null || _a === void 0 ? void 0 : _a.remove();\n        (_b = this._previewRef) === null || _b === void 0 ? void 0 : _b.destroy();\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        var _a, _b;\n        (_a = this._placeholder) === null || _a === void 0 ? void 0 : _a.remove();\n        (_b = this._placeholderRef) === null || _b === void 0 ? void 0 : _b.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = this._createPreviewElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = this._initialTransform = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n        }\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': `${this._config.zIndex || 1000}`,\n        }, dragImportantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    var _a;\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        (_a = this._preview) === null || _a === void 0 ? void 0 : _a.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        var _a;\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = ((_a = this._previewTemplate) === null || _a === void 0 ? void 0 : _a.template) ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // ClientRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary ClientRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        var _a;\n        return (((_a = this._parentPositions.positions.get(this._document)) === null || _a === void 0 ? void 0 : _a.scrollPosition) ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item,\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            var _a;\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = (_a = this._itemPositions.find(current => current.drag === item)) === null || _a === void 0 ? void 0 : _a.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this.sortPredicate(index, item, this) ? -1 : index;\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect ||\n            !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._activeDraggables.filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rjxs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDropRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable });\nDragDrop.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropListGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDropListGroup, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDropListGroupDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i3.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDropList.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDropList, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n        // Prevent child drop lists from picking up the same group as their parent.\n        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n    ], exportAs: [\"cdkDropList\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: CdkDropListGroup, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DROP_LIST_GROUP]\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_CONFIG]\n                    }] }];\n    }, propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDropListDisabled']\n            }], sortingDisabled: [{\n                type: Input,\n                args: ['cdkDropListSortingDisabled']\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollDisabled']\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragHandle.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragHandle, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_DRAG_PARENT]\n                    }, {\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDragHandleDisabled']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragPlaceholder, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() {\n        return this._matchSize;\n    }\n    set matchSize(value) {\n        this._matchSize = coerceBooleanProperty(value);\n    }\n}\nCdkDragPreview.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDragPreview.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDragPreview, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: \"matchSize\" }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input\n            }] } });\n\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        var _a;\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        (_a = element.parentElement) === null || _a === void 0 ? void 0 : _a.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            var _a;\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(((_a = CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })) === null || _a === void 0 ? void 0 : _a._dragRef) || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({\n                source: this,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance,\n                dropPoint: event.dropPoint,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles.changes\n            .pipe(startWith(this._handles), \n        // Sync the new handles with the DragRef.\n        tap((handles) => {\n            const childHandleElements = handles\n                .filter(handle => handle._parentDrag === this)\n                .map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                childHandleElements.push(this.element);\n            }\n            this._dragRef.withHandles(childHandleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => {\n                return item._stateChanges.pipe(startWith(item));\n            }));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n}\nCdkDrag._dragInstances = [];\nCdkDrag.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i3.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkDrag.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkDrag, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], queries: [{ propertyName: \"_previewTemplate\", first: true, predicate: CDK_DRAG_PREVIEW, descendants: true }, { propertyName: \"_placeholderTemplate\", first: true, predicate: CDK_DRAG_PLACEHOLDER, descendants: true }, { propertyName: \"_handles\", predicate: CDK_DRAG_HANDLE, descendants: true }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [CDK_DROP_LIST]\n                    }, {\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_CONFIG]\n                    }] }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_HANDLE]\n                    }] }, { type: CdkDrag, decorators: [{\n                        type: Optional\n                    }, {\n                        type: SkipSelf\n                    }, {\n                        type: Inject,\n                        args: [CDK_DRAG_PARENT]\n                    }] }];\n    }, propDecorators: { _handles: [{\n                type: ContentChildren,\n                args: [CDK_DRAG_HANDLE, { descendants: true }]\n            }], _previewTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PREVIEW]\n            }], _placeholderTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PLACEHOLDER]\n            }], data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDragDisabled']\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nDragDropModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, declarations: [CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder], exports: [CdkScrollableModule,\n        CdkDropList,\n        CdkDropListGroup,\n        CdkDrag,\n        CdkDragHandle,\n        CdkDragPreview,\n        CdkDragPlaceholder] });\nDragDropModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        CdkDropList,\n                        CdkDropListGroup,\n                        CdkDrag,\n                        CdkDragHandle,\n                        CdkDragPreview,\n                        CdkDragPlaceholder,\n                    ],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = !options || options.prettyErrors !== false;\n    const lineCounter = (options && options.lineCounter) ||\n        (prettyErrors && new LineCounter()) ||\n        null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter === null || lineCounter === void 0 ? void 0 : lineCounter.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter === null || lineCounter === void 0 ? void 0 : lineCounter.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options || replacer || {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n"]}