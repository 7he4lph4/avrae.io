{"version":3,"mappings":"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","names":["S","_","t","constructor","o","e","i","this","b","collection","parent","collectableType","ngOnInit","onCreate","loading","onCreateAlias","onCreateSnippet","onCreateSubalias","error","workshopService","createAlias","_id","name","docs","subscribe","handleCreateResponse","createSnippet","createSubalias","success","dialogRef","close","data","y","a","selectors","onDelete","c","u","description","imageUrl","image","publishState","publish_state","onSaveAndExit","push","editCollection","pipe","Object","editCollectionState","length","every","filter","map","join","dialog","open","O","message","afterClosed","deleteCollection","router","navigate","Q","yt","Array","fill","onPublish","canPublish","agreed","et","oxw","onTagRemoved","onTagAdd","loadTags","addCollectionTag","slug","tags","tagAdd","emit","updateAddableTags","removeCollectionTag","tagRemove","getTags","tagNameFromSlug","includes","find","addableTags","entries","category","j","user","userId","loadUser","discordService","getUser","getUsername","username","substring","lastIndexOf","getDiscriminator","R","onAddEditor","Wt","editorSearch","onSearchUser","onEditorSearch","next","target","value","validEditor","searchUser","status","addEditor","lt","toggleEntitlementsOpen","L","collectable","alias","snippet","toggleOpen","isOpen","entitlementsIsOpen","getBoundName","bindings","alias_bindings","snippet_bindings","some","id","hasCustomBindings","getSignature","parentComponent","getUnboundSignature","getShortDocs","split","canOpen","entitlements","getEntity","gamedataService","entityFromEntitlement","entity_type","entity_id","H","pipes","toggleCodeVersions","onViewCodeVersion","onSetCurrentAsActive","onSaveNewCodeVersion","onRemoveEntitlement","re","C","q","super","theme","language","scrollBeyondLastLine","wordWrap","editorOptions","readOnly","v","selectedCodeVersion","versions","Ct","is_current","toggleWordWrap","assign","readonlyEditorOptions","mobileCodeVersion","updateAddableEntitlements","loadCodeVersions","onSave","editAlias","editSnippet","deleteAlias","deleteSnippet","subcommands","splice","indexOf","aliases","snippets","onDone","creatingNewCodeVersion","newCodeVersionContent","snackBar","duration","afterDismissed","dismissedByAction","onStartCreatingCodeVersion","createAliasCodeVersion","createSnippetCodeVersion","console","setActiveAliasCodeVersion","version","setActiveSnippetCodeVersion","updateCollectableFromResponse","removeAliasEntitlement","removeSnippetEntitlement","onAddEntitlement","entitlementsControl","setValue","addAliasEntitlement","addSnippetEntitlement","refreshCollectable","getAlias","getSnippet","getAliasCodeVersions","getSnippetCodeVersions","Math","min","loadingCodeVersions","getSortedVersions","sort","getEntitlements","allEntities","from","values","addableEntitlements","valueChanges","kt","entitlement_entity_type","entitlement_entity_id","toLowerCase","localeCompare","onEdit","at","disableClose","minWidth","panelClass","onEditSettings","onRemoveEditor","W","onCreateNewAlias","onCreateNewSnippet","route","paramMap","loadCollection","get","onCollectionInit","loadOwner","loadEditors","addCollectionEditor","editors","removeCollectionEditor","maxWidth","getCollectionFull","owner","maybeDoRedirect","getCollectionEditors","canEdit","l","goBack","location","back","skipLocationChange","ct","_workshopService","loadPersonalSubscribedIds","onSubscribe","doSubscribe","onUnsubscribe","doUnsubscribe","onGuildSubscribe","doGuildSubscribe","personalSubscribe","Tt","_snackBar","personalUnsubscribe","guildSubscribe","new_subscription","getGuilds","_discordService","getUserGuilds","isSubscribed","personalSubscribedIds","findBinding","guildContext","st","At","St","onGuildContextChange","guildChange","getGuildAvatarUrl","z","Et","year","month","week","day","hour","minute","second","transform","floor","Date","onEditBindings","rt","pure","Ut","loadBindings","getGuildPermissionCheck","can_edit","unshift","getGuildSubscription","getMySubscription","dt","Pt","mo","w","d","h","m","s","pt","author","avatarUrl","loadAuthor","getInitials","match","toUpperCase","getNumberString","Oo","format","discord","onGuildRemove","$","loadCollections","onOrderChange","sortCollections","guildUnsubscribe","guildSubscribedIds","collections","getGuildSubscriptions","loadCollectionsFromIds","getMySubscriptions","getCollectionsBatched","order","created_at","last_edited","gt","createCollection","onCreateCollection","ut","loadingOwned","loadingEditable","getOwnedCollectionIds","getEditableCollectionIds","onTagRemove","onSearchClear","onPreviousPage","onNextPage","mt","snapshot","queryParamMap","page","parseInt","loadValidTags","refresh","onSearch","addQueryParams","getWorkshopExplore","expectedCollectionIds","validTags","filterTags","filteredTags","startsWith","relativeTo","queryParams","queryParamsHandling","replaceUrl","_t","rn","path","component","pathMatch","G","x","X","vt","p","r","currentLocale","zeroFormat","nullFormat","defaultFormat","scalePercentBy100","g","numberToFormat","U","A","E","tt","ht","N","T","Z","M","k","F","stringToNumber","thousand","million","billion","trillion","isNaN","insert","reduce","multiplier","correctionFactor","toFixed","clone","input","set","add","subtract","multiply","divide","difference","delimiters","thousands","decimal","abbreviations","ordinal","currency","symbol","regexps","unformat","base","suffixes","replace","before","after","Number"],"sources":["./src/app/shared/pipes/pipes.module.ts","./src/app/dashboard/workshop/collection-edit/create-collectable-dialog/create-collectable-dialog.component.html","./src/app/dashboard/workshop/collection-edit/create-collectable-dialog/create-collectable-dialog.component.ts","./src/app/dashboard/workshop/collection-edit/edit-settings-dialog/edit-settings-dialog.component.html","./src/app/dashboard/workshop/collection-edit/edit-settings-dialog/edit-settings-dialog.component.ts","./src/app/dashboard/workshop/collection-edit/publish-dialog/publish-dialog.component.html","./src/app/dashboard/workshop/collection-edit/publish-dialog/publish-dialog.component.ts","./src/app/dashboard/workshop/shared/tag-chip-list.component.ts","./src/app/dashboard/workshop/shared/pretty-user.component.ts","./src/app/dashboard/workshop/collection-edit/add-editor/add-editor.component.ts","./src/app/dashboard/workshop/collectable-display/collectable-display.component.html","./src/app/dashboard/workshop/collectable-display/collectable-display.component.ts","./src/app/dashboard/workshop/collection-edit/collectable-edit-dialog/collectable-edit-dialog.component.html","./src/app/dashboard/workshop/collection-edit/collectable-edit-dialog/collectable-edit-dialog.component.ts","./src/app/dashboard/workshop/collection-edit/collectable-edit/collectable-edit.component.html","./src/app/dashboard/workshop/collection-edit/collectable-edit/collectable-edit.component.ts","./src/app/dashboard/workshop/collection-edit/collection-edit.component.html","./src/app/dashboard/workshop/collection-edit/collection-edit.component.ts","./src/app/dashboard/workshop/shared/collection-subscriber.ts","./src/app/dashboard/workshop/collection/edit-bindings-dialog/edit-bindings-dialog.component.html","./src/app/dashboard/workshop/collection/edit-bindings-dialog/edit-bindings-dialog.component.ts","./src/app/dashboard/workshop/shared/guild-select-field.component.ts","./src/app/shared/pipes/date-ago-long.pipe.ts","./src/app/dashboard/workshop/collection/collection.component.html","./src/app/dashboard/workshop/collection/collection.component.ts","./src/app/shared/pipes/date-ago.pipe.ts","./src/app/dashboard/workshop/collection-tile/collection-tile.component.html","./src/app/dashboard/workshop/collection-tile/collection-tile.component.ts","./src/app/dashboard/workshop/my-subscriptions/my-subscriptions.component.html","./src/app/dashboard/workshop/my-subscriptions/my-subscriptions.component.ts","./src/app/dashboard/workshop/my-work/new-collection-dialog/new-collection-dialog.component.html","./src/app/dashboard/workshop/my-work/new-collection-dialog/new-collection-dialog.component.ts","./src/app/dashboard/workshop/my-work/my-work.component.html","./src/app/dashboard/workshop/my-work/my-work.component.ts","./src/app/dashboard/workshop/workshop-explore.component.html","./src/app/dashboard/workshop/workshop-explore.component.ts","./src/app/dashboard/workshop/workshop-routing.module.ts","./src/app/dashboard/workshop/workshop.module.ts","./node_modules/@angular-devkit/build-angular/src/babel/webpack-loader.js"],"sourcesContent":["import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {DateAgoPipe} from './date-ago.pipe';\nimport { DateAgoLongPipe } from './date-ago-long.pipe';\n\n\n@NgModule({\n  declarations: [\n    DateAgoPipe,\n    DateAgoLongPipe,\n  ],\n    exports: [\n        DateAgoPipe,\n        DateAgoLongPipe\n    ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class PipesModule {\n}\n","<h1 mat-dialog-title>Create New {{collectableType | titlecase}}</h1>\n<div mat-dialog-content class=\"mat-typography\">\n  <p>\n    First, give the new {{collectableType | lowercase}} a name and a description. You'll be able to edit the code\n    after it's created.\n  </p>\n  <p *ngIf=\"collection.publish_state === PublicationState.PUBLISHED && collectableType !== CollectableType.SUBALIAS\">\n    Note: Since your collection is published, you <em>cannot delete</em> this {{collectableType | lowercase}} once\n    created.\n  </p>\n\n  <mat-form-field>\n    <mat-label>Name</mat-label>\n    <input matInput [(ngModel)]=\"name\">\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Documentation (Markdown Supported)</mat-label>\n    <textarea matInput [(ngModel)]=\"docs\" mat-autosize></textarea>\n    <mat-hint *ngIf=\"collectableType === CollectableType.ALIAS || collectableType === CollectableType.SUBALIAS\">\n      This will appear in your alias' help command.\n    </mat-hint>\n  </mat-form-field>\n\n  <p class=\"mat-error\" *ngIf=\"error\">\n    {{error}}\n  </p>\n</div>\n<div mat-dialog-actions>\n  <button mat-flat-button mat-dialog-close>Cancel</button>\n  <button mat-flat-button (click)=\"onCreate()\" color=\"primary\">Create</button>\n  <mat-spinner *ngIf=\"loading\" [diameter]=\"24\"></mat-spinner>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {CollectableType, PublicationState, WorkshopAliasFull, WorkshopCollectionFull, WorkshopSnippet} from '../../../../schemas/Workshop';\nimport {ApiResponse} from '../../../APIHelper';\nimport {WorkshopService} from '../../workshop.service';\n\ninterface CreateCollectableDialogComponentData {\n  collection: WorkshopCollectionFull;\n  parent?: WorkshopAliasFull | null;\n  collectableType: CollectableType;\n}\n\n@Component({\n  selector: 'avr-create-collectable-dialog',\n  templateUrl: './create-collectable-dialog.component.html',\n  styleUrls: ['../../dialog-common.scss']\n})\nexport class CreateCollectableDialogComponent implements OnInit {\n  PublicationState = PublicationState;\n  CollectableType = CollectableType;\n\n  collectableType: CollectableType;\n  collection: WorkshopCollectionFull;\n  parent: WorkshopAliasFull | null;\n\n  name: string;\n  docs: string;\n\n  error: string;\n  loading = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: CreateCollectableDialogComponentData,\n              private dialogRef: MatDialogRef<CreateCollectableDialogComponent>,\n              private workshopService: WorkshopService) {\n    this.collection = data.collection;\n    this.parent = data.parent;\n    this.collectableType = data.collectableType;\n  }\n\n  ngOnInit(): void {\n  }\n\n  // event handlers\n  onCreate() {\n    this.loading = true;\n    switch (this.collectableType) {\n      case CollectableType.ALIAS:\n        return this.onCreateAlias();\n      case CollectableType.SNIPPET:\n        return this.onCreateSnippet();\n      case CollectableType.SUBALIAS:\n        return this.onCreateSubalias();\n      default:\n        this.error = 'Unknown collectable type (this is a bug)';\n        this.loading = false;\n    }\n  }\n\n  onCreateAlias() {\n    this.workshopService.createAlias(this.collection._id, this.name, this.docs)\n      .subscribe(response => this.handleCreateResponse(response));\n  }\n\n  onCreateSnippet() {\n    this.workshopService.createSnippet(this.collection._id, this.name, this.docs)\n      .subscribe(response => this.handleCreateResponse(response));\n  }\n\n  onCreateSubalias() {\n    if (!this.parent) {\n      this.error = 'You are not in an alias context (this is a bug)';\n      this.loading = false;\n    }\n    this.workshopService.createSubalias(this.parent._id, this.name, this.docs)\n      .subscribe(response => this.handleCreateResponse(response));\n  }\n\n  // helpers\n  handleCreateResponse(response: ApiResponse<WorkshopAliasFull | WorkshopSnippet>) {\n    this.loading = false;\n    if (response.success) {\n      this.dialogRef.close(response.data);\n    } else {\n      this.error = response.error;\n    }\n  }\n}\n","<h1 mat-dialog-title>Editing {{collection.name}}...</h1>\n<div mat-dialog-content class=\"mat-typography\">\n  <p>This won't change how the collection appears for anyone else until you click Save.</p>\n\n  <mat-form-field>\n    <mat-label>Name</mat-label>\n    <input matInput [(ngModel)]=\"name\">\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Description (Markdown Supported)</mat-label>\n    <textarea matInput [(ngModel)]=\"description\" mat-autosize></textarea>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Image URL</mat-label>\n    <input matInput [(ngModel)]=\"imageUrl\">\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Sharing Settings</mat-label>\n    <!-- not published: private/unlisted -->\n    <mat-select [(value)]=\"publishState\" *ngIf=\"publishState !== PublicationState.PUBLISHED\">\n      <mat-option [value]=\"PublicationState.PRIVATE\">\n        Private (Only the owner and editors can subscribe)\n      </mat-option>\n      <mat-option [value]=\"PublicationState.UNLISTED\">\n        Unlisted (Anyone with the link can subscribe)\n      </mat-option>\n      <mat-option disabled matTooltip=\"To publish this collection, click Publish on the main edit page.\">\n        Published (Anyone can find this collection in the workshop)\n      </mat-option>\n    </mat-select>\n    <!-- published: cannot unpublish -->\n    <mat-select [(value)]=\"publishState\" *ngIf=\"publishState === PublicationState.PUBLISHED\"\n                matTooltip=\"You cannot unpublish a collection.\"\n                disabled>\n      <mat-option [value]=\"PublicationState.PUBLISHED\">\n        Published\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <p class=\"mat-error\" *ngIf=\"error\">\n    {{error}}\n  </p>\n</div>\n<div mat-dialog-actions>\n  <button mat-flat-button mat-dialog-close>Cancel</button>\n  <button mat-flat-button (click)=\"onSaveAndExit()\" color=\"primary\">Save</button>\n  <mat-spinner *ngIf=\"loading\" [diameter]=\"24\"></mat-spinner>\n  <span class=\"toolbar-spacer\"></span>\n  <button mat-flat-button (click)=\"onDelete()\" color=\"warn\" *ngIf=\"publishState !== PublicationState.PUBLISHED\">\n    Delete\n  </button>\n  <div *ngIf=\"publishState === PublicationState.PUBLISHED\" matTooltip=\"You cannot delete a published collection.\">\n    <button mat-flat-button color=\"warn\" disabled>\n      Delete\n    </button>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Router} from '@angular/router';\nimport {forkJoin} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {PublicationState, WorkshopCollection, WorkshopCollectionFull} from '../../../../schemas/Workshop';\nimport {ApiResponse} from '../../../APIHelper';\nimport {ConfirmDeleteDialog} from '../../../confirm-delete-dialog/confirm-delete-dialog.component';\nimport {WorkshopService} from '../../workshop.service';\n\n@Component({\n  selector: 'avr-edit-settings-dialog',\n  templateUrl: './edit-settings-dialog.component.html',\n  styleUrls: ['../../dialog-common.scss', '../../common.scss']\n})\nexport class EditSettingsDialogComponent implements OnInit {\n  PublicationState = PublicationState;\n\n  collection: WorkshopCollectionFull;\n  name: string;\n  description: string;\n  imageUrl: string | null;\n  publishState: PublicationState;\n\n  error: string;\n  loading = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { collection: WorkshopCollectionFull },\n              private dialogRef: MatDialogRef<EditSettingsDialogComponent>,\n              private dialog: MatDialog, private router: Router,\n              private workshopService: WorkshopService) {\n    this.collection = data.collection;\n    // make copies of this data\n    this.name = data.collection.name;\n    this.description = data.collection.description;\n    this.imageUrl = data.collection.image;\n    this.publishState = data.collection.publish_state;\n  }\n\n  ngOnInit(): void {\n  }\n\n  // event handlers\n  onSaveAndExit() {\n    this.error = null;\n    this.loading = true;\n    // build the requests we want to run in parallel\n    let finalCollection;\n    let requests = [];\n    if (this.name !== this.collection.name\n      || this.description !== this.collection.description\n      || this.imageUrl !== this.collection.image) {\n      requests.push(this.workshopService.editCollection(this.collection._id, this.name, this.description, this.imageUrl)\n        .pipe(map(response => {\n          // build a new collection from the 2 responses\n          if (response.success && !finalCollection) {\n            finalCollection = response.data;\n          } else if (response.success) {\n            finalCollection = {\n              ...finalCollection,\n              name: response.data.name,\n              description: response.data.description,\n              image: response.data.image\n            };\n          }\n          return response;\n        })));\n    }\n    if (this.publishState !== this.collection.publish_state) {\n      requests.push(this.workshopService.editCollectionState(this.collection._id, this.publishState)\n        .pipe(map(response => {\n          if (response.success && !finalCollection) {\n            finalCollection = response.data;\n          } else if (response.success) {\n            finalCollection = {...finalCollection, publish_state: response.data.publish_state};\n          }\n          return response;\n        })));\n    }\n    // if we have nothing to do, just close\n    if (!requests.length) {\n      this.dialogRef.close();\n      return;\n    }\n\n    // run them\n    forkJoin(requests).subscribe((responses: ApiResponse<WorkshopCollection>[]) => {\n      this.loading = false;\n      if (responses.every(response => response.success)) {\n        this.dialogRef.close(finalCollection);\n      } else {\n        this.error = responses.filter(response => response.error).map(response => response.error).join('\\n\\n');\n      }\n    });\n  }\n\n  onDelete() {\n    const dialogRef: MatDialogRef<ConfirmDeleteDialog, boolean> = this.dialog.open(\n      ConfirmDeleteDialog,\n      {\n        data: {\n          name: this.collection.name,\n          message: 'Deleting this collection will remove it from all subscribers\\' collections and all servers. This is not reversible.'\n        }\n      }\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.error = null;\n        this.loading = true;\n        // do the delete\n        this.workshopService.deleteCollection(this.collection._id)\n          .subscribe(response => {\n            this.loading = false;\n            if (response.success) {\n              this.dialogRef.close();\n              this.router.navigate(['/dashboard/workshop/my-work']);\n            } else {\n              this.error = response.error;\n            }\n          });\n      }\n    });\n  }\n}\n","<h1 mat-dialog-title>Publishing {{collection.name}}...</h1>\n<div mat-dialog-content class=\"mat-typography\">\n  <p>\n    Make sure the name, description, and image of the collection are correct, then agree to the following to publish:\n  </p>\n\n  <div *ngFor=\"let step of PUBLISH_STEPS; last as last; index as i;\">\n    <section class=\"publish-agree\">\n      <mat-checkbox [(ngModel)]=\"agreed[i]\">\n        <div [innerHTML]=\"step\"></div>\n      </mat-checkbox>\n    </section>\n\n    <mat-divider *ngIf=\"!last\"></mat-divider>\n  </div>\n\n  <p class=\"mat-error\" *ngIf=\"error\">\n    {{error}}\n  </p>\n</div>\n<div mat-dialog-actions>\n  <button mat-flat-button mat-dialog-close>Cancel</button>\n  <button mat-flat-button (click)=\"onPublish()\" color=\"primary\" [disabled]=\"!canPublish()\">Publish</button>\n  <mat-spinner *ngIf=\"loading\" [diameter]=\"24\"></mat-spinner>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {PublicationState, WorkshopCollection} from '../../../../schemas/Workshop';\nimport {WorkshopService} from '../../workshop.service';\n\nconst PUBLISH_STEPS = [\n  `I understand that after publishing this collection, I <b>cannot delete or unpublish</b> it or any item contained in it.`,\n  `If any item in this collection uses rules or data that is not in the System Reference Document, I have added the required license(s) to that item.`,\n  `Aside from any data which I have added the license to use, I and/or this collection's editors am/are the sole owner(s) of the content in this collection.`,\n  `The code contained in this collection is for anyone to use, and <b>not intended for one specific Discord server</b>.`,\n  `I agree to the <a href=\"https://github.com/avrae/.github/blob/master/community/alias-workshop-rules.md\" target=\"_blank\">Alias Workshop Rules & Guidelines</a>.`\n];\n\n@Component({\n  selector: 'avr-publish-dialog',\n  templateUrl: './publish-dialog.component.html',\n  styleUrls: ['../../dialog-common.scss', './publish-dialog.component.css']\n})\nexport class PublishDialogComponent implements OnInit {\n  // exports\n  PUBLISH_STEPS = PUBLISH_STEPS;\n\n  collection: WorkshopCollection;\n  agreed = new Array(PUBLISH_STEPS.length).fill(false);\n  error: string;\n  loading = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { collection: WorkshopCollection },\n              private dialogRef: MatDialogRef<PublishDialogComponent>,\n              private workshopService: WorkshopService) {\n    this.collection = data.collection;\n  }\n\n  ngOnInit(): void {\n  }\n\n  // event listeners\n  onPublish() {\n    this.loading = true;\n    this.error = null;\n    this.workshopService.editCollectionState(this.collection._id, PublicationState.PUBLISHED)\n      .subscribe(response => {\n        this.loading = false;\n        if (response.success) {\n          this.dialogRef.close(response.data);\n        } else {\n          this.error = response.error;\n        }\n      });\n  }\n\n  // helpers\n  canPublish(): boolean {\n    return this.agreed.every(a => a);\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {groupBy} from 'lodash';\nimport {WorkshopCollection, WorkshopTag} from '../../../schemas/Workshop';\nimport {WorkshopService} from '../workshop.service';\n\n@Component({\n  selector: 'avr-tag-chip-list',\n  template: `\n    <mat-chip-list aria-label=\"Tag list\" class=\"collection-tags\" *ngIf=\"tags?.length && (collection.tags.length || showEdit)\">\n      <mat-chip *ngFor=\"let tag of limit ? collection.tags.slice(0, limit) : collection.tags\"\n                [removable]=\"showEdit\" (removed)=\"onTagRemoved(tag)\">\n        {{tagNameFromSlug(tag)}}\n        <mat-icon matChipRemove *ngIf=\"showEdit\">cancel</mat-icon>\n      </mat-chip>\n      <mat-chip *ngIf=\"limit && collection.tags.length > limit\">{{collection.tags.length - limit}} more...</mat-chip>\n      <!-- add tag menu -->\n      <div *ngIf=\"showEdit\">\n        <mat-chip [matMenuTriggerFor]=\"menu\">Add Tag...</mat-chip>\n        <mat-menu #menu=\"matMenu\">\n          <mat-optgroup *ngFor=\"let tup of addableTags\" [label]=\"tup[0]\">\n            <mat-option *ngFor=\"let tag of tup[1]\" (click)=\"onTagAdd(tag)\">\n              {{tag.name}}\n            </mat-option>\n          </mat-optgroup>\n        </mat-menu>\n      </div>\n    </mat-chip-list>\n  `\n})\nexport class TagChipListComponent implements OnInit {\n\n  @Input() collection: WorkshopCollection;  // the collection whose tags to display\n  @Input() limit: number;                   // optional: the maximum number of tags to display (excess becomes \"X more...\")\n  @Input() showEdit: boolean = false;       // optional: whether to show buttons to edit the tags (add / remove)\n\n  @Output() tagRemove = new EventEmitter<string>();\n  @Output() tagAdd = new EventEmitter<WorkshopTag>();\n  tags: WorkshopTag[];\n  addableTags: [string, WorkshopTag[]][] = [];\n\n  constructor(private workshopService: WorkshopService) {\n  }\n\n  ngOnInit(): void {\n    this.loadTags();\n  }\n\n  // event handlers\n  onTagAdd(tag: WorkshopTag) {\n    this.workshopService.addCollectionTag(this.collection._id, tag.slug)\n      .subscribe(response => {\n        if (response.success) {\n          this.collection.tags = response.data;\n          this.tagAdd.emit(tag);\n          this.updateAddableTags();\n        }\n      });\n  }\n\n  onTagRemoved(tag: string) {\n    this.workshopService.removeCollectionTag(this.collection._id, tag)\n      .subscribe(response => {\n        if (response.success) {\n          this.collection.tags = response.data;\n          this.tagRemove.emit(tag);\n          this.updateAddableTags();\n        }\n      });\n  }\n\n  // data loaders\n  loadTags() {\n    this.workshopService.getTags()\n      .subscribe(result => {\n        if (result.success) {\n          this.tags = result.data;\n          this.updateAddableTags();\n        }\n      });\n  }\n\n  // helpers\n  tagNameFromSlug(slug: string): string {\n    if (this.tags.map(tag => tag.slug).includes(slug)) {\n      return this.tags.find(tag => tag.slug === slug).name;\n    } else {\n      return slug;\n    }\n  }\n\n  updateAddableTags() {\n    this.addableTags = Object.entries(\n      groupBy(\n        this.tags.filter(tag => !this.collection.tags.includes(tag.slug)),\n        tag => tag.category));\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {DiscordUser} from '../../../schemas/Discord';\nimport {DiscordService} from '../../../shared/discord.service';\n\n@Component({\n  selector: 'avr-pretty-user',\n  template: `\n    <div class=\"user-grid\" *ngIf=\"user\">\n      <div class=\"user-img\">\n        <img [src]=\"user.avatarUrl\" alt=\"Avatar of {{user.username}}\">\n      </div>\n      <div class=\"user-username\">\n        <strong>{{getUsername()}}</strong>\n      </div>\n\n      <!-- extra buttons -->\n      <div class=\"buttons\">\n        <ng-content></ng-content>\n      </div>\n\n      <div class=\"user-discriminator\">\n        {{getDiscriminator()}}\n      </div>\n    </div>\n  `,\n  styleUrls: ['./pretty-user.component.scss']\n})\nexport class PrettyUserComponent implements OnInit {\n\n  // one of these two must be filled, user takes priority over userId\n  @Input() userId: string;    // the user ID of the user to display\n  @Input() user: DiscordUser; // the user object of the user to display\n\n  constructor(private discordService: DiscordService) {\n  }\n\n  ngOnInit(): void {\n    if (!this.user && this.userId) {\n      this.loadUser();\n    }\n  }\n\n  // data loaders\n  loadUser() {\n    this.discordService.getUser(this.userId)\n      .subscribe(response => {\n        this.user = response;\n      });\n  }\n\n  // helpers\n  getUsername() {\n    return this.user.username.substring(0, this.user.username.lastIndexOf('#'));\n  }\n\n  getDiscriminator() {\n    return this.user.username.substring(this.user.username.lastIndexOf('#'));\n  }\n}\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {debounceTime, distinctUntilChanged} from 'rxjs/operators';\nimport {DiscordUser} from '../../../../schemas/Discord';\nimport {DiscordService} from '../../../../shared/discord.service';\n\n@Component({\n  selector: 'avr-add-editor',\n  template: `\n    <mat-form-field>\n      <mat-label>Add Editor</mat-label>\n      <input matInput placeholder=\"zhu.exe#4211\" (keyup)=\"onEditorSearch($event)\">\n      <mat-spinner matSuffix *ngIf=\"loading\" [diameter]=\"16\"></mat-spinner>\n    </mat-form-field>\n    <div *ngIf=\"error\" class=\"mat-error\">\n      {{error}}\n    </div>\n    <div class=\"valid-user\" *ngIf=\"validEditor\">\n      <avr-pretty-user [user]=\"validEditor\">\n        <button mat-icon-button matTooltip=\"Add editor\" (click)=\"onAddEditor()\">\n          <mat-icon class=\"muted\">add</mat-icon>\n        </button>\n      </avr-pretty-user>\n    </div>\n  `,\n  styles: ['.valid-user {margin-bottom: 8px;}']\n})\nexport class AddEditorComponent implements OnInit {\n\n  editorSearch = new Subject<string>();\n  validEditor: DiscordUser;\n  loading = false;\n  error: string;\n\n  @Output() addEditor = new EventEmitter<DiscordUser>();\n\n  constructor(private discordService: DiscordService) {\n  }\n\n  ngOnInit(): void {\n    this.editorSearch\n      .pipe(debounceTime(750))\n      .pipe(distinctUntilChanged())\n      .subscribe(username => this.onSearchUser(username));\n  }\n\n  // event handlers\n  onEditorSearch(event) {\n    this.editorSearch.next(event.target.value);\n  }\n\n  onSearchUser(username: string) {\n    this.validEditor = null;\n    this.error = null;\n    if (!username.includes('#')) {  // user must have discrim at least\n      return;\n    }\n    this.loading = true;\n    this.discordService.searchUser(username)\n      .subscribe(response => {\n        this.loading = false;\n        if (response.success) {\n          this.validEditor = response.data;\n        } else if (response.status === 404) {\n          this.error = 'No matching user found. Make sure the username is correct and that they have logged in here at least once!';\n        } else {\n          this.error = response.error;\n        }\n      });\n  }\n\n  onAddEditor() {\n    this.addEditor.emit(this.validEditor);\n  }\n}\n","<mat-divider></mat-divider>\n\n<div class=\"command-display\">\n  <div class=\"click-to-expand\" (click)=\"toggleOpen()\">\n    <p class=\"command-header\">\n      <code>{{getSignature()}}</code>\n      <mat-icon *ngIf=\"canOpen()\">\n        {{isOpen ? 'expand_less' : 'expand_more'}}\n      </mat-icon>\n    </p>\n    <div class=\"command-messages\" *ngIf=\"hasCustomBindings()\">\n      Rebound from <code>{{getUnboundSignature()}}</code>\n    </div>\n    <div class=\"command-closed-desc\" *ngIf=\"!isOpen\">\n      <markdown>{{debrace(getShortDocs())}}</markdown>\n    </div>\n  </div>\n\n  <div class=\"command-desc\" *ngIf=\"isOpen\">\n    <markdown>{{debrace(collectable.docs)}}</markdown>\n  </div>\n\n  <div class=\"command-entitlements\" *ngIf=\"collectable.entitlements.length && isOpen\">\n    <div class=\"entitlements-header\" (click)=\"toggleEntitlementsOpen()\">\n      Uses licensed data.\n      <mat-icon>\n        {{entitlementsIsOpen ? 'expand_less' : 'expand_more'}}\n      </mat-icon>\n    </div>\n    <div class=\"entitlements-list\" *ngIf=\"entitlementsIsOpen\">\n      <div *ngFor=\"let entitlement of collectable.entitlements\">\n        <a [href]=\"(getEntity(entitlement) | async)?.marketplace_url\" target=\"_blank\">\n          {{(getEntity(entitlement) | async)?.name}}\n          ({{(getEntity(entitlement) | async)?.source}})\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"command-subcommands\" *ngIf=\"alias && alias.subcommands.length\">\n    <h4>Subcommands</h4>\n    <avr-collectable-display *ngFor=\"let subcommand of alias.subcommands\"\n                             [alias]=\"subcommand\"\n                             [parentComponent]=\"this\">\n    </avr-collectable-display>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {WorkshopAliasFull, WorkshopBindings, WorkshopCollectable, WorkshopEntitlement, WorkshopSnippet} from '../../../schemas/Workshop';\nimport {debrace} from '../../../shared/DisplayUtils';\nimport {GamedataService} from '../../../shared/gamedata.service';\nimport {WorkshopService} from '../workshop.service';\n\n@Component({\n  selector: 'avr-collectable-display',\n  templateUrl: './collectable-display.component.html',\n  styleUrls: ['./collectable-display.component.scss']\n})\nexport class CollectableDisplayComponent implements OnInit {\n  // exports\n  debrace = debrace;\n\n  @Input() alias: WorkshopAliasFull;  // alias and snippet are mutually exclusive\n  @Input() snippet: WorkshopSnippet;\n  @Input() parentComponent: CollectableDisplayComponent;\n  @Input() bindings: WorkshopBindings;\n  isOpen = false;\n  entitlementsIsOpen = false;\n\n\n  constructor(public workshopService: WorkshopService, public gamedataService: GamedataService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  get collectable(): WorkshopCollectable {\n    return this.alias || this.snippet;\n  }\n\n  // event listeners\n  toggleOpen() {\n    this.isOpen = !this.isOpen;\n  }\n\n  toggleEntitlementsOpen() {\n    this.entitlementsIsOpen = !this.entitlementsIsOpen;\n  }\n\n  // helpers\n  getBoundName() {\n    const bindings = this.alias ? this.bindings?.alias_bindings : this.bindings?.snippet_bindings;\n    if (this.bindings && bindings.some(b => b.id === this.collectable._id)) {\n      return bindings.find(b => b.id === this.collectable._id).name;\n    } else {\n      return this.collectable.name;\n    }\n  }\n\n  hasCustomBindings() {\n    return this.getBoundName() !== this.collectable.name;\n  }\n\n  getSignature() {\n    const boundName = this.getBoundName();\n    if (this.alias) {\n      if (this.parentComponent) {\n        return `${this.parentComponent.getSignature()} ${boundName}`;\n      }\n      return `!${boundName}`;\n    } else {\n      return boundName;\n    }\n  }\n\n  getUnboundSignature() {\n    if (this.alias) {\n      if (this.parentComponent) {\n        return `${this.parentComponent.getSignature()} ${this.collectable.name}`;\n      }\n      return `!${this.collectable.name}`;\n    } else {\n      return this.collectable.name;\n    }\n  }\n\n  getShortDocs() {\n    return this.collectable.docs.split('\\n')[0];\n  }\n\n  canOpen(): any {\n    return (this.getShortDocs() !== this.collectable.docs)\n      || this.collectable.entitlements.length;\n  }\n\n  getEntity(entitlement: WorkshopEntitlement) {\n    return this.gamedataService.entityFromEntitlement(entitlement.entity_type, entitlement.entity_id);\n  }\n}\n","<h1 mat-dialog-title>Editing {{collectable.name}}...</h1>\n<div mat-dialog-content class=\"mat-typography\">\n  <h3>Name &amp; Description</h3>\n  <p>\n    You can edit the collectible's name, documentation, licenses, and code here.\n  </p>\n\n  <!-- name, description -->\n  <mat-form-field>\n    <mat-label>Name</mat-label>\n    <input matInput [(ngModel)]=\"name\">\n    <mat-hint>This won't change the name of the item for current subscribers.</mat-hint>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Documentation (Markdown Supported)</mat-label>\n    <textarea matInput [(ngModel)]=\"docs\" mat-autosize></textarea>\n    <mat-hint *ngIf=\"alias\">This will appear in your alias' help command.</mat-hint>\n  </mat-form-field>\n\n  <button mat-flat-button (click)=\"onSave()\" color=\"primary\" class=\"spaced-button\">Save</button>\n\n  <mat-divider></mat-divider>\n\n  <!-- code versions -->\n  <div class=\"section\">\n    <h3>Code Versions</h3>\n    <p>\n      You can view the code version and set the active code version here. To edit the code, create a new code version.\n      It is recommended to test code in a personal alias before publishing a code version, as code versions cannot\n      be edited or deleted.\n    </p>\n    <p>\n      Need some references? You can <a href=\"https://avrae.readthedocs.io/en/stable/aliasing/api.html\" target=\"_blank\">\n      find the Draconic documentation here</a>.\n    </p>\n    <mat-slide-toggle (change)=\"toggleWordWrap()\">Word Wrap</mat-slide-toggle>\n    <mat-slide-toggle *ngIf=\"mobile\" (change)=\"toggleCodeVersions()\">Code Versions</mat-slide-toggle>\n    <div class=\"code-versions-container ignore-theme\">\n      <!-- code editor: display selected, edit new version, or placeholder if nothing selected -->\n      <div class=\"code-editor\">\n        <div *ngIf=\"selectedCodeVersion\" class=\"monaco-editor-container\">\n          <ngx-monaco-editor [options]=\"readonlyEditorOptions\"\n                             [ngModel]=\"selectedCodeVersion.content\"></ngx-monaco-editor>\n        </div>\n        <div *ngIf=\"creatingNewCodeVersion\" class=\"monaco-editor-container\">\n          <ngx-monaco-editor [options]=\"editorOptions\" [(ngModel)]=\"newCodeVersionContent\"></ngx-monaco-editor>\n        </div>\n        <p *ngIf=\"!(selectedCodeVersion || creatingNewCodeVersion)\" class=\"no-code-version\">\n          Looks like this item doesn't have any code yet. Go ahead and create a new code version on the right or\n          <a href=\"https://avrae.readthedocs.io/en/stable/aliasing/api.html\" target=\"_blank\">read the\n            Draconic documentation</a> to get started!\n        </p>\n      </div>\n      <!-- code version viewer -->\n      <div class=\"code-versions-list\" [ngClass]=\"{'mobile-code-version' : mobileCodeVersion}\">\n        <mat-action-list>\n          <button mat-list-item (click)=\"onStartCreatingCodeVersion()\" [class.active]=\"creatingNewCodeVersion\"\n                  class=\"ignore-theme\">\n            Create New Version\n          </button>\n          <button mat-list-item *ngFor=\"let codeVersion of getSortedVersions()\" class=\"ignore-theme\"\n                  (click)=\"onViewCodeVersion(codeVersion)\" [class.active]=\"selectedCodeVersion === codeVersion\">\n            <p matLine>\n              Version {{codeVersion.version}}\n              <em *ngIf=\"codeVersion.is_current\"> (active)</em>\n            </p>\n            <p matLine>{{codeVersion.created_at | date}}</p>\n          </button>\n          <mat-list-item *ngIf=\"loadingCodeVersions\">\n            Loading...\n            <mat-spinner diameter=\"24\"></mat-spinner>\n          </mat-list-item>\n        </mat-action-list>\n      </div>\n    </div> <!-- </code-versions-container> -->\n    <!-- buttons: set active code version or save new code version -->\n    <button mat-raised-button *ngIf=\"selectedCodeVersion && !selectedCodeVersion.is_current\" color=\"accent\"\n            (click)=\"onSetCurrentAsActive()\" class=\"code-versions-button\">\n      Set Version {{selectedCodeVersion.version}} as Active Code Version\n    </button>\n    <button mat-raised-button *ngIf=\"creatingNewCodeVersion\" color=\"accent\" (click)=\"onSaveNewCodeVersion()\"\n            class=\"spaced-button\">\n      Save New Code Version\n    </button>\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <!-- entitlements -->\n  <div class=\"section\">\n    <h3>Licenses</h3>\n    <p>\n      If you plan on publishing this collection, make sure to search for and add the relevant licenses if this item\n      uses any licensed rules or data. You don't have to add licenses here for data that is free on D&amp;D Beyond.\n    </p>\n\n    <mat-form-field class=\"entitlements-list\">\n      <mat-chip-list #chipList aria-label=\"Entitlements selection\">\n        <mat-chip\n          *ngFor=\"let entitlement of collectable.entitlements\"\n          [removable]=\"!entitlement.required\"\n          (removed)=\"onRemoveEntitlement(entitlement)\">\n          {{(getEntity(entitlement) | async)?.name}}\n          <mat-icon matChipRemove *ngIf=\"!entitlement.required\">cancel</mat-icon>\n        </mat-chip>\n        <input placeholder=\"Search for licenses...\" [matAutocomplete]=\"auto\" [matChipInputFor]=\"chipList\"\n               [formControl]=\"entitlementsControl\">\n      </mat-chip-list>\n      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onAddEntitlement($event.option.value)\">\n        <mat-optgroup *ngFor=\"let tup of addableEntitlements | async\" [label]=\"tup[0] | titlecase\">\n          <mat-option *ngFor=\"let entitlement of tup[1]\" [value]=\"entitlement\">\n            {{entitlement.name}}\n          </mat-option>\n        </mat-optgroup>\n      </mat-autocomplete>\n    </mat-form-field>\n  </div>\n\n  <mat-divider></mat-divider>\n\n  <!-- errors -->\n  <p class=\"mat-error\" *ngIf=\"error\">\n    {{error}}\n  </p>\n</div>\n<div mat-dialog-actions>\n  <button mat-flat-button (click)=\"onDone()\">Done</button>\n  <mat-spinner *ngIf=\"loading\" [diameter]=\"24\"></mat-spinner>\n  <span class=\"toolbar-spacer\"></span>\n  <button mat-flat-button (click)=\"onDelete()\" color=\"warn\"\n          *ngIf=\"collection.publish_state !== PublicationState.PUBLISHED || parent\">\n    Delete\n  </button>\n  <div *ngIf=\"collection.publish_state === PublicationState.PUBLISHED && !parent\"\n       matTooltip=\"You cannot delete a top-level item of a published collection.\">\n    <button mat-flat-button disabled color=\"warn\">Delete</button>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {groupBy} from 'lodash';\nimport {Observable} from 'rxjs';\nimport {debounceTime, map} from 'rxjs/operators';\nimport {DDBEntity} from '../../../../schemas/GameData';\nimport {\n  CodeVersion,\n  PublicationState,\n  WorkshopAliasFull,\n  WorkshopCollectable,\n  WorkshopCollectionFull,\n  WorkshopEntitlement,\n  WorkshopSnippet\n} from '../../../../schemas/Workshop';\nimport {GamedataService} from '../../../../shared/gamedata.service';\nimport {ApiResponse} from '../../../APIHelper';\nimport {ConfirmDeleteDialog} from '../../../confirm-delete-dialog/confirm-delete-dialog.component';\nimport {WorkshopService} from '../../workshop.service';\nimport {BreakpointObserver} from '@angular/cdk/layout';\nimport {BreakpointBaseComponent} from '../../../../shared/breakpoints';\n\ninterface CollectableEditDialogComponentData {\n  collection: WorkshopCollectionFull;\n  alias: WorkshopAliasFull;\n  parent: WorkshopAliasFull;\n  snippet: WorkshopSnippet;\n}\n\n@Component({\n  selector: 'avr-collectable-edit-dialog',\n  templateUrl: './collectable-edit-dialog.component.html',\n  styleUrls: ['./collectable-edit-dialog.component.scss', '../../dialog-common.scss', '../../common.scss']\n})\nexport class CollectableEditDialogComponent extends BreakpointBaseComponent implements OnInit {\n  PublicationState = PublicationState;\n  wordWrap = 'off';\n  mobileCodeVersion = false;\n  editorOptions = {theme: 'draconicTheme', language: 'draconic', scrollBeyondLastLine: false, wordWrap: this.wordWrap};\n  readonlyEditorOptions = {...this.editorOptions, readOnly: true};\n\n  toggleWordWrap() {\n    this.wordWrap = this.wordWrap === 'on' ? 'off' : 'on'\n    this.editorOptions = Object.assign({}, this.editorOptions, { wordWrap: this.wordWrap });\n    this.readonlyEditorOptions = Object.assign({}, this.readonlyEditorOptions, { wordWrap: this.wordWrap });\n  }\n\n  toggleCodeVersions() {\n    this.mobileCodeVersion = !this.mobileCodeVersion\n  }\n\n  // data\n  collection: WorkshopCollectionFull; // root collection\n  alias: WorkshopAliasFull;           // mutex snippet\n  parent: WorkshopAliasFull;          // the parent of this alias, if applicable\n  snippet: WorkshopSnippet;           // mutex alias\n\n  // new values\n  name: string;\n  docs: string;\n  selectedCodeVersion: CodeVersion;\n  creatingNewCodeVersion: boolean;\n  newCodeVersionContent: string;\n\n  // code version loading\n  loadingCodeVersions = true;\n\n  // state\n  loading = false;\n  error: string;\n  entitlementsControl = new FormControl('');\n  allEntities: DDBEntity[];\n  addableEntitlements: Observable<[string, DDBEntity[]][]>;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: CollectableEditDialogComponentData,\n              private dialogRef: MatDialogRef<CollectableEditDialogComponent>,\n              private workshopService: WorkshopService, private gamedataService: GamedataService,\n              private dialog: MatDialog, private snackBar: MatSnackBar,\n              private bp: BreakpointObserver) {\n    super(bp);\n    this.collection = data.collection;\n    this.alias = data.alias;\n    this.parent = data.parent;\n    this.snippet = data.snippet;\n    this.name = this.collectable.name;\n    this.docs = this.collectable.docs;\n    this.selectedCodeVersion = this.collectable.versions.length ? this.collectable.versions.find(cv => cv.is_current) : null;\n  }\n\n  ngOnInit(): void {\n    this.updateAddableEntitlements();\n    this.loadCodeVersions();\n  }\n\n  get collectable(): WorkshopCollectable {\n    return this.alias || this.snippet;\n  }\n\n  // event handlers\n  onSave() {\n    if (this.name !== this.collectable.name\n      || this.docs !== this.collectable.docs) {\n      this.error = null;\n      this.loading = true;\n      const request = this.alias\n        ? this.workshopService.editAlias(this.alias._id, this.name, this.docs)\n        : this.workshopService.editSnippet(this.snippet._id, this.name, this.docs);\n      request.subscribe(response => {\n        this.loading = false;\n        if (response.success) {\n          Object.assign(this.collectable, response.data);\n        } else {\n          this.error = response.error;\n        }\n      });\n    }\n  }\n\n  onDelete() {\n    // confirm delete\n    const dialogRef: MatDialogRef<ConfirmDeleteDialog, boolean> = this.dialog.open(\n      ConfirmDeleteDialog,\n      {data: {name: this.collectable.name}}\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.error = null;\n        this.loading = true;\n        // do the delete\n        const request = this.alias\n          ? this.workshopService.deleteAlias(this.alias._id)\n          : this.workshopService.deleteSnippet(this.snippet._id);\n        request.subscribe(response => {\n          this.loading = false;\n          if (response.success) {\n            // remove this from parent or collection\n            if (this.parent) {\n              this.parent.subcommands.splice(this.parent.subcommands.indexOf(this.alias), 1);\n            } else if (this.alias) {\n              this.collection.aliases.splice(this.collection.aliases.indexOf(this.alias), 1);\n            } else if (this.snippet) {\n              this.collection.snippets.splice(this.collection.snippets.indexOf(this.snippet), 1);\n            }\n            this.dialogRef.close();\n          } else {\n            this.error = response.error;\n          }\n        });\n      }\n    });\n  }\n\n  onDone() {\n    // if no outstanding changes, just close\n    if (this.name === this.collectable.name\n      && this.docs === this.collectable.docs\n      && !(this.creatingNewCodeVersion && this.newCodeVersionContent)) {\n      this.dialogRef.close(this.collectable);\n    } else {\n      // otherwise pop up a confirmation snackbar (?)\n      this.snackBar.open('You have unsaved changes. Do you want to discard them?', 'Discard',\n        {duration: 5000}\n      ).afterDismissed().subscribe(\n        event => {\n          if (event.dismissedByAction) {\n            this.dialogRef.close(this.collectable);\n          }\n        }\n      );\n    }\n  }\n\n  onViewCodeVersion(codeVersion: CodeVersion) {\n    this.selectedCodeVersion = codeVersion;\n    this.creatingNewCodeVersion = false;\n  }\n\n  onStartCreatingCodeVersion() {\n    if (this.creatingNewCodeVersion) {\n      return;\n    }\n    this.selectedCodeVersion = null;\n    this.creatingNewCodeVersion = true;\n    this.newCodeVersionContent = this.newCodeVersionContent || '';\n  }\n\n  onSaveNewCodeVersion() {\n    this.error = null;\n    this.loading = true;\n    let request: Observable<ApiResponse<CodeVersion>>;\n    if (this.alias) {\n      request = this.workshopService.createAliasCodeVersion(this.alias._id, this.newCodeVersionContent);\n    } else {\n      request = this.workshopService.createSnippetCodeVersion(this.snippet._id, this.newCodeVersionContent);\n    }\n    request.subscribe(response => {\n      this.loading = false;\n      if (response.success) {\n        // select the new version\n        this.collectable.versions.push(response.data);\n        this.onViewCodeVersion(response.data);\n        // clear the editor\n        this.newCodeVersionContent = '';\n      } else {\n        this.error = response.error;\n      }\n    });\n  }\n\n  onSetCurrentAsActive() {\n    if (!this.selectedCodeVersion) {\n      console.error('tried to set null code version as active');\n      return;\n    }\n    this.error = null;\n    this.loading = true;\n    let request: Observable<ApiResponse<WorkshopCollectable>>;\n    if (this.alias) {\n      request = this.workshopService.setActiveAliasCodeVersion(this.alias._id, this.selectedCodeVersion.version);\n    } else {\n      request = this.workshopService.setActiveSnippetCodeVersion(this.snippet._id, this.selectedCodeVersion.version);\n    }\n    request.subscribe(response => {\n      this.updateCollectableFromResponse(response);\n    });\n  }\n\n  onRemoveEntitlement(entitlement: WorkshopEntitlement) {\n    this.loading = true;\n    this.error = null;\n    let request: Observable<ApiResponse<WorkshopEntitlement[]>>;\n    if (this.alias) {\n      request = this.workshopService.removeAliasEntitlement(this.alias._id, entitlement);\n    } else {\n      request = this.workshopService.removeSnippetEntitlement(this.snippet._id, entitlement);\n    }\n    request.subscribe(response => {\n      this.loading = false;\n      if (response.success) {\n        this.collectable.entitlements = response.data;\n      } else {\n        this.error = response.error;\n      }\n    });\n  }\n\n  onAddEntitlement(entitlement: DDBEntity) {\n    this.loading = true;\n    this.error = null;\n    this.entitlementsControl.setValue('');\n    let request: Observable<ApiResponse<WorkshopEntitlement[]>>;\n    if (this.alias) {\n      request = this.workshopService.addAliasEntitlement(this.alias._id, entitlement);\n    } else {\n      request = this.workshopService.addSnippetEntitlement(this.snippet._id, entitlement);\n    }\n    request.subscribe(response => {\n      this.loading = false;\n      if (response.success) {\n        this.collectable.entitlements = response.data;\n      } else {\n        this.error = response.error;\n      }\n    });\n  }\n\n  // loaders\n  refreshCollectable() {\n    let request: Observable<ApiResponse<WorkshopCollectable>>;\n    if (this.alias) {\n      request = this.workshopService.getAlias(this.alias._id);\n    } else {\n      request = this.workshopService.getSnippet(this.snippet._id);\n    }\n    request.subscribe(response => {\n      this.updateCollectableFromResponse(response);\n    });\n  }\n\n  loadCodeVersions(skip = 0, limit = 10) {\n    let request: Observable<ApiResponse<CodeVersion[]>>;\n    if (this.alias) {\n      request = this.workshopService.getAliasCodeVersions(this.alias._id, skip, limit);\n    } else {\n      request = this.workshopService.getSnippetCodeVersions(this.snippet._id, skip, limit);\n    }\n    request.subscribe(response => {\n      if (!response.success) {\n        return;\n      }\n      const filteredData = response.data.filter(cv => !this.collectable.versions.some(v => v.version === cv.version));\n      this.collectable.versions.push(...filteredData);\n      if (this.collectable.versions.length && this.selectedCodeVersion === null) {\n        this.selectedCodeVersion = this.collectable.versions.find(cv => cv.is_current);\n      }\n      if (!filteredData.length || response.data.length < limit || Math.min(...response.data.map(v => v.version)) === 1) {\n        this.loadingCodeVersions = false;\n        return;\n      } else {\n        this.loadCodeVersions(skip + response.data.length, limit);\n      }\n    });\n  }\n\n  // helpers\n  private updateCollectableFromResponse(response: ApiResponse<WorkshopCollectable>) {\n    this.loading = false;\n    if (response.success) {\n      Object.assign(this.collectable, response.data);\n      // refresh the reference from selected\n      this.selectedCodeVersion = this.collectable.versions.find(cv => cv.version === this.selectedCodeVersion.version);\n    } else {\n      this.error = response.error;\n    }\n  }\n\n  getSortedVersions() {\n    return this.collectable.versions.sort((a, b) => b.version - a.version);\n  }\n\n  getEntity(entitlement: WorkshopEntitlement) {\n    return this.gamedataService.entityFromEntitlement(entitlement.entity_type, entitlement.entity_id);\n  }\n\n  updateAddableEntitlements() {\n    // load entitlements\n    this.gamedataService.getEntitlements()\n      .subscribe(response => {\n        this.allEntities = Array.from(response.data.values());\n        this.entitlementsControl.setValue(''); // emit a value to get started\n      });\n\n    // subscribe to changes to update autocomplete\n    // debounce 500 because this is actually really expensive\n    this.addableEntitlements = this.entitlementsControl.valueChanges\n      .pipe(debounceTime(500))\n      .pipe(map(value => {\n        let normValue = value && typeof value === 'string' ? value : '';\n        const possible = this.allEntities\n          // filter out entities that are already in the entitlement list\n          .filter(entity => !this.collectable.entitlements\n            .find(entitlement => entitlement.entity_type === entity.entitlement_entity_type && entitlement.entity_id === entity.entitlement_entity_id))\n          // filter to entities that contain the search\n          .filter(entity => entity.name.toLowerCase().includes(normValue.toLowerCase()))\n          // sort alphabetically\n          .sort((a, b) => a.name.localeCompare(b.name));\n        // group by entitlement type and sort\n        return Object.entries(groupBy(possible, entity => entity.entity_type))\n          .sort(([categoryA, _], [categoryB, __]) => categoryA.localeCompare(categoryB));\n      }));\n  }\n}\n","<!-- much of this html was copied from ../../collectable-display/collectable-display.component.html -->\n<mat-divider></mat-divider>\n\n<div class=\"command-display\">\n  <div>\n    <p class=\"command-header click-to-expand\" (click)=\"toggleOpen()\">\n      <code>{{getSignature()}}</code>\n      <mat-icon *ngIf=\"canOpen()\">\n        {{isOpen ? 'expand_less' : 'expand_more'}}\n      </mat-icon>\n    </p>\n    <div class=\"command-closed-desc\" *ngIf=\"!isOpen\">\n      <markdown class=\"click-to-expand\" (click)=\"toggleOpen()\">\n        {{debrace(getShortDocs())}}\n      </markdown>\n      <button mat-icon-button class=\"edit-button\" (click)=\"onEdit()\">\n        <mat-icon>\n          edit\n        </mat-icon>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"command-desc\" *ngIf=\"isOpen\">\n    <markdown>{{debrace(collectable.docs)}}</markdown>\n    <button mat-icon-button class=\"edit-button\" (click)=\"onEdit()\">\n      <mat-icon>\n        edit\n      </mat-icon>\n    </button>\n  </div>\n\n  <div class=\"command-entitlements\" *ngIf=\"collectable.entitlements.length && isOpen\">\n    <div class=\"entitlements-header\" (click)=\"toggleEntitlementsOpen()\">\n      Uses licensed data.\n      <mat-icon>\n        {{entitlementsIsOpen ? 'expand_less' : 'expand_more'}}\n      </mat-icon>\n    </div>\n    <div class=\"entitlements-list\" *ngIf=\"entitlementsIsOpen\">\n      <div *ngFor=\"let entitlement of collectable.entitlements\">\n        <a [href]=\"(getEntity(entitlement) | async)?.marketplace_url\" target=\"_blank\">\n          {{(getEntity(entitlement) | async)?.name}}\n          ({{(getEntity(entitlement) | async)?.source}})\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"command-subcommands\" *ngIf=\"alias && (alias.subcommands.length || isOpen)\">\n    <h4>Subcommands</h4>\n    <avr-collectable-edit *ngFor=\"let subcommand of alias.subcommands\"\n                          [collection]=\"collection\"\n                          [alias]=\"subcommand\"\n                          [parentComponent]=\"this\">\n    </avr-collectable-edit>\n\n    <mat-divider></mat-divider>\n    <div class=\"create-new click-to-expand\" (click)=\"onCreateSubalias()\">\n      <div>Create New Subalias...</div>\n      <mat-icon>add</mat-icon>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {CollectableType, WorkshopAliasFull, WorkshopCollectable, WorkshopCollection} from '../../../../schemas/Workshop';\nimport {GamedataService} from '../../../../shared/gamedata.service';\nimport {CollectableDisplayComponent} from '../../collectable-display/collectable-display.component';\nimport {WorkshopService} from '../../workshop.service';\nimport {CollectableEditDialogComponent} from '../collectable-edit-dialog/collectable-edit-dialog.component';\nimport {CreateCollectableDialogComponent} from '../create-collectable-dialog/create-collectable-dialog.component';\n\n@Component({\n  selector: 'avr-collectable-edit',\n  templateUrl: './collectable-edit.component.html',\n  styleUrls: ['./collectable-edit.component.scss', '../../collectable-display/collectable-display.component.scss']\n})\nexport class CollectableEditComponent extends CollectableDisplayComponent implements OnInit {\n\n  @Input() collection: WorkshopCollection;\n\n  constructor(public workshopService: WorkshopService, public gamedataService: GamedataService,\n              private dialog: MatDialog) {\n    super(workshopService, gamedataService);\n  }\n\n  ngOnInit(): void {\n  }\n\n  // event handlers\n  onEdit() {\n    const dialogRef: MatDialogRef<CollectableEditDialogComponent, WorkshopCollectable> = this.dialog.open(\n      CollectableEditDialogComponent,\n      {\n        disableClose: true,\n        minWidth: '70%',\n        panelClass: 'collectable-overlay',\n        data: {collection: this.collection, alias: this.alias, snippet: this.snippet, parent: this.parentComponent?.alias}\n      }\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        if (this.alias) {\n          Object.assign(this.alias, result);  // so that the reference from the collection page holds\n        } else {\n          Object.assign(this.snippet, result);\n        }\n      }\n    });\n  }\n\n  onCreateSubalias() {\n    const dialogRef: MatDialogRef<CreateCollectableDialogComponent, WorkshopAliasFull> = this.dialog.open(\n      CreateCollectableDialogComponent,\n      {\n        disableClose: true,\n        data: {collection: this.collection, collectableType: CollectableType.SUBALIAS, parent: this.alias}\n      }\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.alias.subcommands.push(result);\n      }\n    });\n  }\n\n  canOpen() {\n    return super.canOpen()\n      || (this.alias && !this.alias.subcommands.length);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <button mat-icon-button aria-label=\"Back\" (click)=\"goBack()\">\n    <mat-icon>arrow_back</mat-icon>\n  </button>\n\n  <span>{{collection?.name || 'Loading...'}}</span>\n  <span class=\"toolbar-spacer\"></span>\n\n  <!-- finish editing, edit meta -->\n  <a mat-icon-button aria-label=\"Done Editing Button\" matTooltip=\"Done Editing\" [routerLink]=\"'../'\"\n     [skipLocationChange]=\"true\">\n    <mat-icon>check</mat-icon>\n  </a>\n\n  <button mat-icon-button aria-label=\"Edit Button\" matTooltip=\"Edit Settings\" (click)=\"onEditSettings()\">\n    <mat-icon>settings</mat-icon>\n  </button>\n\n  <!-- loading -->\n  <mat-spinner *ngIf=\"loading\" color=\"accent\" diameter=\"24\" class=\"toolbar-spinner\"></mat-spinner>\n</mat-toolbar>\n\n<!-- CONTENT -->\n<div class=\"content mat-typography\" *ngIf=\"collection\">\n\n  <div class=\"metadata-grid\">\n    <!-- image, description, tags -->\n    <div class=\"description-etc\">\n      <img *ngIf=\"collection.image\" [src]=\"collection.image\" alt=\"Collection Image\" class=\"desc-image\">\n\n      <!-- unpublished: publish or edit sharing settings -->\n      <div class=\"desc-subscribe-container\" *ngIf=\"collection.publish_state !== PublicationState.PUBLISHED\">\n        <div>\n          <b>{{collection.name}}</b> is currently {{collection.publish_state.toLowerCase()}}. Ready to share\n          <b>{{collection.name}}</b> with the world? Publish it to let anyone add it to their own\n          collection or server!\n        </div>\n        <div class=\"desc-subscribe-buttons\">\n          <!-- edit sharing -->\n          <button mat-raised-button color=\"accent\" (click)=\"onEditSettings()\">\n            <mat-icon>share</mat-icon>\n            Sharing Settings\n          </button>\n          <!-- publish -->\n          <button mat-raised-button color=\"accent\" (click)=\"onPublish()\">\n            <mat-icon>publish</mat-icon>\n            Publish\n          </button>\n        </div>\n\n        <div class=\"desc-error mat-error\" *ngIf=\"error\">\n          {{error}}\n        </div>\n      </div>\n      <!-- published: view -->\n      <div class=\"desc-subscribe-container\" *ngIf=\"collection.publish_state === PublicationState.PUBLISHED\">\n        <div>\n          <b>{{collection.name}}</b> is published! Everyone who has added it to a personal or server collection will\n          automatically receive the latest updates.\n        </div>\n        <div class=\"desc-subscribe-buttons\">\n          <!-- view -->\n          <a mat-raised-button color=\"accent\" [routerLink]=\"'../'\" [skipLocationChange]=\"true\">\n            View on Workshop\n          </a>\n        </div>\n\n        <div class=\"desc-error mat-error\" *ngIf=\"error\">\n          {{error}}\n        </div>\n      </div>\n\n      <div class=\"desc-tags\">\n        <avr-tag-chip-list [collection]=\"collection\" [showEdit]=\"true\"></avr-tag-chip-list>\n      </div>\n\n      <p class=\"desc-text\">\n        <markdown [data]=\"debrace(collection.description)\"></markdown>\n      </p>\n    </div>\n\n    <!-- metadata -->\n    <div class=\"metadata-container\"> <!-- this is here for grid purposes, it takes up 100% of the grid cell -->\n      <div class=\"metadata\">\n        <!-- authors/editors -->\n        <div class=\"meta-author\">\n          <avr-pretty-user [user]=\"owner\"></avr-pretty-user>\n        </div>\n        <div class=\"meta-author\" *ngFor=\"let editor of editors || []\">\n          <avr-pretty-user [user]=\"editor\">\n            <button mat-icon-button matTooltip=\"Remove editor\" (click)=\"onRemoveEditor(editor)\">\n              <mat-icon class=\"muted\">clear</mat-icon>\n            </button>\n          </avr-pretty-user>\n        </div>\n        <!-- search/add editor -->\n        <mat-divider></mat-divider>\n        <div class=\"add-editor\">\n          <avr-add-editor (addEditor)=\"onAddEditor($event)\"></avr-add-editor>\n        </div>\n        <!-- edit settings -->\n        <div class=\"meta-buttons\">\n          <button mat-raised-button color=\"accent\" (click)=\"onEditSettings()\">\n            Edit Settings\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <mat-divider></mat-divider>\n  <!-- aliases/snippets -->\n\n  <div class=\"collectable-container\">\n    <h2>Aliases</h2>\n    <avr-collectable-edit *ngFor=\"let alias of collection.aliases\"\n                          [collection]=\"collection\"\n                          [alias]=\"alias\">\n    </avr-collectable-edit>\n\n    <mat-divider></mat-divider>\n    <div class=\"create-new clickable\" (click)=\"onCreateNewAlias()\"\n         [matTooltip]=\"collection.publish_state === PublicationState.PUBLISHED\n         ? 'An alias cannot be deleted once created in a published collection.'\n         : null\">\n      <div>Create New Alias...</div>\n      <mat-icon>add</mat-icon>\n    </div>\n  </div>\n\n  <div class=\"collectable-container\">\n    <h2>Snippets</h2>\n    <avr-collectable-edit *ngFor=\"let snippet of collection.snippets\"\n                          [collection]=\"collection\"\n                          [snippet]=\"snippet\">\n    </avr-collectable-edit>\n\n    <mat-divider></mat-divider>\n    <div class=\"create-new clickable\" (click)=\"onCreateNewSnippet()\"\n         [matTooltip]=\"collection.publish_state === PublicationState.PUBLISHED\n         ? 'A snippet cannot be deleted once created in a published collection.'\n         : null\">\n      <div>Create New Snippet...</div>\n      <mat-icon>add</mat-icon>\n    </div>\n  </div>\n\n</div>\n\n<div class=\"content mat-typography\" *ngIf=\"!collection\">\n  <mat-spinner [diameter]=\"24\" *ngIf=\"!error\"></mat-spinner>\n  <p class=\"mat-error\" *ngIf=\"error\">\n    {{error}}\n  </p>\n</div>\n\n","import {Location} from '@angular/common';\nimport {Component, OnInit} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DiscordUser} from '../../../schemas/Discord';\nimport {\n  CollectableType,\n  PublicationState,\n  WorkshopAliasFull,\n  WorkshopCollection,\n  WorkshopCollectionFull,\n  WorkshopSnippet\n} from '../../../schemas/Workshop';\nimport {DiscordService} from '../../../shared/discord.service';\nimport {debrace} from '../../../shared/DisplayUtils';\nimport {getUser} from '../../APIHelper';\nimport {WorkshopService} from '../workshop.service';\nimport {CreateCollectableDialogComponent} from './create-collectable-dialog/create-collectable-dialog.component';\nimport {EditSettingsDialogComponent} from './edit-settings-dialog/edit-settings-dialog.component';\nimport {PublishDialogComponent} from './publish-dialog/publish-dialog.component';\n\n@Component({\n  selector: 'avr-collection-edit',\n  templateUrl: './collection-edit.component.html',\n  styleUrls: ['../common.scss', './collection-edit.component.scss', '../collection/collection.component.scss']\n})\nexport class CollectionEditComponent implements OnInit {\n  // exports\n  PublicationState = PublicationState;\n  debrace = debrace;\n\n  // data\n  collection: WorkshopCollectionFull;\n  owner: DiscordUser;\n  editors: DiscordUser[];\n\n  // state\n  loading = true;\n  error: string;\n\n  constructor(private route: ActivatedRoute, private router: Router, private snackBar: MatSnackBar,\n              private dialog: MatDialog, private location: Location,\n              private workshopService: WorkshopService, private discordService: DiscordService) {\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      params => this.loadCollection(params.get('id'))\n    );\n  }\n\n  // event listeners\n  onCollectionInit(collection: WorkshopCollectionFull) {\n    this.collection = collection;\n    this.loadOwner();\n    this.loadEditors();\n  }\n\n  onAddEditor(editor: DiscordUser) {\n    this.workshopService.addCollectionEditor(this.collection._id, editor.id)\n      .subscribe(response => {\n        if (response.success) {\n          this.editors = response.data;\n        } else {\n          this.snackBar.open(response.error);\n        }\n      });\n  }\n\n  onRemoveEditor(editor: DiscordUser) {\n    this.workshopService.removeCollectionEditor(this.collection._id, editor.id)\n      .subscribe(response => {\n        if (response.success) {\n          this.editors = response.data;\n        } else {\n          this.snackBar.open(response.error);\n        }\n      });\n  }\n\n  onEditSettings() {\n    const dialogRef: MatDialogRef<EditSettingsDialogComponent, WorkshopCollection> = this.dialog.open(\n      EditSettingsDialogComponent,\n      {\n        disableClose: true,\n        data: {collection: this.collection}\n      });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.collection = {...this.collection, ...result};\n      }\n    });\n  }\n\n  onPublish() {\n    const dialogRef: MatDialogRef<PublishDialogComponent, WorkshopCollection> = this.dialog.open(\n      PublishDialogComponent,\n      {\n        disableClose: true,\n        maxWidth: 'max(50%, 350px)',\n        data: {collection: this.collection}\n      }\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.collection = {...this.collection, ...result};\n      }\n    });\n  }\n\n  onCreateNewAlias() {\n    const dialogRef: MatDialogRef<CreateCollectableDialogComponent, WorkshopAliasFull> = this.dialog.open(\n      CreateCollectableDialogComponent,\n      {\n        disableClose: true,\n        data: {collection: this.collection, collectableType: CollectableType.ALIAS}\n      }\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.collection.aliases.push(result);\n      }\n    });\n  }\n\n  onCreateNewSnippet() {\n    const dialogRef: MatDialogRef<CreateCollectableDialogComponent, WorkshopSnippet> = this.dialog.open(\n      CreateCollectableDialogComponent,\n      {\n        disableClose: true,\n        data: {collection: this.collection, collectableType: CollectableType.SNIPPET}\n      }\n    );\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.collection.snippets.push(result);\n      }\n    });\n  }\n\n  // data loaders\n  loadCollection(id: string) {\n    this.workshopService.getCollectionFull(id)\n      .subscribe(response => {\n        this.loading = false;\n        if (response.success) {\n          this.onCollectionInit(response.data);\n        } else {\n          this.error = response.error;\n        }\n      });\n  }\n\n  loadOwner() {\n    this.discordService.getUser(this.collection.owner)\n      .subscribe(response => {\n        this.owner = response;\n        this.maybeDoRedirect();\n      });\n  }\n\n  loadEditors() {\n    this.workshopService.getCollectionEditors(this.collection._id)\n      .subscribe(response => {\n        if (response.success) {\n          this.editors = response.data;\n          this.maybeDoRedirect();\n        }\n      });\n  }\n\n  // helpers\n  canEdit(): boolean {\n    return this.editors?.some(editor => editor.id === getUser().id);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  maybeDoRedirect() {\n    if (this.owner === undefined || this.editors === undefined) {\n      return;\n    }\n    let currentUser = getUser();\n    // if current user cannot edit\n    if (this.owner.id !== currentUser.id && !this.canEdit()) {\n      // redirect back to view\n      this.router.navigate(['..'], {skipLocationChange: true});\n    }\n  }\n}\n","// a base class for components that allow subscriptions to a collection.\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Observable} from 'rxjs';\nimport {share} from 'rxjs/operators';\nimport {PartialGuild} from '../../../schemas/Discord';\nimport {WorkshopBindings, WorkshopCollection} from '../../../schemas/Workshop';\nimport {DiscordService} from '../../../shared/discord.service';\nimport {ApiResponse} from '../../APIHelper';\nimport {WorkshopService} from '../workshop.service';\n\nexport abstract class CollectionSubscriber {\n  collection: WorkshopCollection;\n\n  protected constructor(\n    private _snackBar: MatSnackBar,\n    private _workshopService: WorkshopService,\n    private _discordService: DiscordService) {\n    this._workshopService.loadPersonalSubscribedIds();\n  }\n\n  onSubscribe(): void {\n    this.doSubscribe();\n  }\n\n  onUnsubscribe(): void {\n    this.doUnsubscribe();\n  }\n\n  onGuildSubscribe(guild: PartialGuild): void {\n    this.doGuildSubscribe(guild);\n  }\n\n  doSubscribe(): Observable<ApiResponse<WorkshopBindings>> {\n    const req = this._workshopService.personalSubscribe(this.collection._id)\n      .pipe(share());\n    req.subscribe(resp => {\n      resp.success ? this._snackBar.open(`Subscribed to ${this.collection.name}!`) : this._snackBar.open(resp.error);\n    });\n    return req;\n  }\n\n  doUnsubscribe(): Observable<ApiResponse<string>> {\n    const req = this._workshopService.personalUnsubscribe(this.collection._id)\n      .pipe(share());\n    req.subscribe(resp => {\n      resp.success ? this._snackBar.open(`Unsubscribed from ${this.collection.name}!`) : this._snackBar.open(resp.error);\n    });\n    return req;\n  }\n\n  doGuildSubscribe(guild: PartialGuild): Observable<ApiResponse<WorkshopBindings>> {\n    const req = this._workshopService.guildSubscribe(this.collection._id, guild.id)\n      .pipe(share());\n    req.subscribe(resp => {\n      if (!resp.success) {\n        this._snackBar.open(resp.error, null, {duration: 5000});\n      } else if (resp.data.new_subscription) {\n        this._snackBar.open(`Subscribed to ${this.collection.name} on ${guild.name}!`);\n      } else {\n        this._snackBar.open(`${guild.name} is already subscribed to ${this.collection.name}. You can manage\n          server subscriptions in My Subscriptions!`, null, {duration: 5000});\n      }\n    });\n    return req;\n  }\n\n  getGuilds() {\n    return this._discordService.getUserGuilds();\n  }\n\n  isSubscribed() {\n    return this._workshopService.personalSubscribedIds?.includes(this.collection._id);\n  }\n}\n","<h2 mat-dialog-title>Editing Bindings</h2>\n\n<mat-dialog-content class=\"mat-typography\">\n  <p>\n    Editing bindings allows you to give custom names to aliases and snippets.\n  </p>\n  <!-- alias bindings -->\n  <div *ngIf=\"collection.aliases.length\">\n    <h3>Aliases</h3>\n    <mat-list>\n      <mat-list-item *ngFor=\"let alias of collection.aliases\">\n        <code>!{{alias.name}}</code>\n        <mat-icon class=\"collectable-binding-arrow\">east</mat-icon>\n        <mat-form-field>\n          <span matPrefix>!</span>\n          <input matInput [(ngModel)]=\"findBinding(true, alias).name\">\n        </mat-form-field>\n      </mat-list-item>\n    </mat-list>\n  </div>\n\n  <!-- snippet bindings -->\n  <div *ngIf=\"collection.snippets.length\">\n    <h3>Snippets</h3>\n    <mat-list>\n      <mat-list-item *ngFor=\"let snippet of collection.snippets\">\n        <code>{{snippet.name}}</code>\n        <mat-icon class=\"collectable-binding-arrow\">east</mat-icon>\n        <mat-form-field>\n          <input matInput [(ngModel)]=\"findBinding(false, snippet).name\">\n        </mat-form-field>\n      </mat-list-item>\n    </mat-list>\n  </div>\n\n  <!-- error -->\n  <p class=\"mat-error\" *ngIf=\"error\">\n    {{error}}\n  </p>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <mat-spinner *ngIf=\"loading\" [diameter]=\"24\"></mat-spinner>\n  <button mat-flat-button mat-dialog-close>Cancel</button>\n  <button mat-flat-button color=\"primary\" (click)=\"onSave()\">Save</button>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {cloneDeep} from 'lodash';\nimport {Observable} from 'rxjs';\nimport {PartialGuild} from '../../../../schemas/Discord';\nimport {WorkshopBindings, WorkshopCollectable, WorkshopCollectionFull} from '../../../../schemas/Workshop';\nimport {ApiResponse} from '../../../APIHelper';\nimport {WorkshopService} from '../../workshop.service';\n\ninterface EditBindingsDialogData {\n  collection: WorkshopCollectionFull;\n  guildContext: PartialGuild;\n  bindings: WorkshopBindings;\n}\n\n@Component({\n  selector: 'avr-edit-bindings-dialog',\n  templateUrl: './edit-bindings-dialog.component.html',\n  styleUrls: ['./edit-bindings-dialog.component.scss']\n})\nexport class EditBindingsDialogComponent implements OnInit {\n\n  // inputs\n  collection: WorkshopCollectionFull;\n  guildContext: PartialGuild;\n  bindings: WorkshopBindings;\n\n  // state\n  loading = false;\n  error: string;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: EditBindingsDialogData,\n              private workshopService: WorkshopService, private dialogRef: MatDialogRef<EditBindingsDialogComponent>) {\n    this.collection = data.collection;\n    this.guildContext = data.guildContext;\n    // we make a deep copy of the original bindings\n    // so that we can edit them without editing the collection page\n    // then post them if the user saves\n    this.bindings = cloneDeep(data.bindings);\n  }\n\n  ngOnInit(): void {\n  }\n\n  // event handlers\n  onSave() {\n    this.loading = true;\n    let request: Observable<ApiResponse<WorkshopBindings>>;\n    if (this.guildContext) {\n      request = this.workshopService.guildSubscribe(this.collection._id, this.guildContext.id, this.bindings);\n    } else {\n      request = this.workshopService.personalSubscribe(this.collection._id, this.bindings);\n    }\n    request.subscribe(response => {\n      this.loading = false;\n      if (response.success) {\n        this.dialogRef.close(this.bindings);\n      } else {\n        this.error = response.error;\n      }\n    });\n  }\n\n  // helpers\n  findBinding(isAlias: boolean, collectable: WorkshopCollectable): { name: string, id: string } {\n    const bindings = isAlias ? this.bindings.alias_bindings : this.bindings.snippet_bindings;\n    return bindings.find(binding => binding.id === collectable._id);\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {getGuildAvatarUrl, PartialGuild} from '../../../schemas/Discord';\nimport {DiscordService} from '../../../shared/discord.service';\n\nconst sentinel = new PartialGuild();\n\n@Component({\n  selector: 'avr-guild-select-field',\n  template: `\n    <mat-form-field appearance=\"fill\" class=\"toolbar-search-form-guild-context\">\n      <mat-label>{{label}}</mat-label>\n      <mat-select [(value)]=\"guildContext\" (selectionChange)=\"onGuildContextChange()\">\n        <mat-option [value]=\"sentinel\">{{defaultLabel}}</mat-option>\n        <mat-option *ngFor=\"let guild of getUserGuilds() | async\" [value]=\"guild\">\n          <img *ngIf=\"getGuildAvatarUrl(guild)\" [src]=\"getGuildAvatarUrl(guild)\" alt=\"Guild icon\" class=\"guild-icon\">\n          {{guild.name}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  `,\n  styles: [\n      `\n      .guild-icon {\n        border-radius: 100%;\n        width: 24px;\n        height: 24px;\n        margin-bottom: -6px;\n        margin-right: 4px;\n      }\n    `\n  ]\n})\nexport class GuildSelectFieldComponent implements OnInit {\n  sentinel = sentinel;\n\n  @Input() label = 'Server';\n  @Input() defaultLabel = 'Me';\n  @Output() guildChange = new EventEmitter<PartialGuild | null>();\n\n  guildContext: PartialGuild = sentinel;\n\n\n  constructor(private discordService: DiscordService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  // event listeners\n  onGuildContextChange() {\n    this.guildChange.emit(this.guildContext === sentinel ? null : this.guildContext);\n  }\n\n  // data loaders\n  getUserGuilds(): Observable<PartialGuild[]> {\n    return this.discordService.getUserGuilds();\n  }\n\n  // helpers\n  getGuildAvatarUrl(guild: PartialGuild) {\n    return getGuildAvatarUrl(guild, 32);\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\nconst intervals = {\n  'year': 31536000,\n  'month': 2592000,\n  'week': 604800,\n  'day': 86400,\n  'hour': 3600,\n  'minute': 60,\n  'second': 1\n};\n\n@Pipe({\n  name: 'dateAgoLong'\n})\nexport class DateAgoLongPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    if (value) {\n      const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n      if (seconds < 29) {\n        return 'just now';\n      }\n\n      let counter;\n      for (const i in intervals) {\n        counter = Math.floor(seconds / intervals[i]);\n        if (counter > 0) {\n          const iPl = counter > 1 ? `${i}s` : i;\n          return `${counter} ${iPl} ago`;\n        }\n      }\n    }\n    return value;\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <div class=\"toolbar-title\">\n    <button mat-icon-button aria-label=\"Back\" (click)=\"goBack()\">\n      <mat-icon>arrow_back</mat-icon>\n    </button>\n\n    <span class=\"collection-name\">{{collection?.name || 'Loading...'}}</span>\n    <span class=\"toolbar-spacer\"></span>\n\n    <!-- edit, edit bindings -->\n    <a mat-icon-button aria-label=\"Edit Collection Button\" matTooltip=\"Edit Collection\"\n            *ngIf=\"canEdit()\" [routerLink]=\"'./edit'\" [skipLocationChange]=\"true\">\n      <mat-icon>edit</mat-icon>\n    </a>\n\n    <button mat-icon-button aria-label=\"Edit Bindings Button\" matTooltip=\"Edit Bindings\"\n            *ngIf=\"bindings\" (click)=\"onEditBindings()\">\n      <mat-icon>handyman</mat-icon>\n    </button>\n  </div>\n  <div class=\"toolbar-select\">\n    <!-- loading, guild select -->\n    <mat-spinner *ngIf=\"loading\" color=\"accent\" diameter=\"24\" class=\"toolbar-spinner\"></mat-spinner>\n\n    <div class=\"toolbar-search-form\">\n      <!-- guild context -->\n      <avr-guild-select-field class=\"toolbar-search-form-guild-context\"\n                              label=\"View As\"\n                              (guildChange)=\"onGuildContextChange($event)\">\n      </avr-guild-select-field>\n    </div>\n  </div>\n\n</mat-toolbar>\n\n<!-- CONTENT -->\n<div class=\"content mat-typography\" *ngIf=\"collection\">\n\n  <div class=\"metadata-grid\">\n    <!-- image, description, tags -->\n    <div class=\"description-etc\">\n      <img *ngIf=\"collection.image\" [src]=\"collection.image\" alt=\"Collection Image\" class=\"desc-image\">\n\n      <div class=\"desc-subscribe-container\">\n        <div>\n          Subscribe or add <b>{{collection.name}}</b> to a server to instantly gain access to\n          <b>{{collection.alias_ids.length}}</b>\n          {{collection.alias_ids.length === 1 ? 'alias' : 'aliases'}} and\n          <b>{{collection.snippet_ids.length}}</b>\n          {{collection.snippet_ids.length === 1 ? 'snippet' : 'snippets'}}.\n        </div>\n        <div class=\"desc-subscribe-buttons\">\n          <!-- server sub -->\n          <button mat-raised-button color=\"accent\" [matMenuTriggerFor]=\"serverSubMenu\">\n            <mat-icon>post_add</mat-icon>\n            Add to Server\n          </button>\n          <mat-menu #serverSubMenu=\"matMenu\">\n            <button mat-menu-item *ngFor=\"let guild of getGuilds() | async\" (click)=\"onGuildSubscribe(guild)\">\n              {{guild.name}}\n            </button>\n          </mat-menu>\n          <!-- personal sub -->\n          <button mat-raised-button color=\"accent\" *ngIf=\"!isSubscribed()\" (click)=\"onSubscribe()\">\n            <mat-icon>add</mat-icon>\n            Subscribe\n          </button>\n          <button mat-raised-button color=\"accent\" *ngIf=\"isSubscribed()\" (click)=\"onUnsubscribe()\">\n            <mat-icon>check</mat-icon>\n            Subscribed!\n          </button>\n        </div>\n\n        <div class=\"desc-error mat-error\" *ngIf=\"error\">\n          {{error}}\n        </div>\n      </div>\n\n      <div class=\"desc-tags\">\n        <avr-tag-chip-list [collection]=\"collection\"></avr-tag-chip-list>\n      </div>\n\n      <p class=\"desc-text\">\n        <markdown>{{debrace(collection.description)}}</markdown>\n      </p>\n    </div>\n\n    <!-- metadata -->\n    <div class=\"metadata-container\"> <!-- this is here for grid purposes, it takes up 100% of the grid cell -->\n      <div class=\"metadata\">\n        <!-- authors/editors -->\n        <div class=\"meta-author\" *ngFor=\"let editor of editors\">\n          <avr-pretty-user [user]=\"editor\"></avr-pretty-user>\n        </div>\n\n        <!-- edit/creation time -->\n        <div class=\"meta-times\">\n          <p>\n            Last Edited: {{collection.last_edited | dateAgoLong}} <br>\n            Created: {{collection.created_at | dateAgoLong}}\n          </p>\n        </div>\n\n        <!-- subscriptions -->\n        <div class=\"meta-subscriptions\">\n          <p>\n            Added by <b>{{collection.num_subscribers}}</b> people\n            and <b>{{collection.num_guild_subscribers}}</b> servers\n          </p>\n        </div>\n\n        <!-- # alias/snippets -->\n        <div class=\"meta-numbers\">\n          <p>\n            <b>{{collection.alias_ids.length}}</b> {{collection.alias_ids.length === 1 ? 'alias' : 'aliases'}}\n            <br>\n            <b>{{collection.snippet_ids.length}}</b> {{collection.snippet_ids.length === 1 ? 'snippet' : 'snippets'}}\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <mat-divider></mat-divider>\n  <!-- aliases/snippets display -->\n\n  <div class=\"collectable-container\" *ngIf=\"collection.alias_ids.length\">\n    <h2>Aliases</h2>\n    <avr-collectable-display *ngFor=\"let alias of collection.aliases\"\n                             [alias]=\"alias\"\n                             [bindings]=\"bindings\">\n    </avr-collectable-display>\n  </div>\n\n  <div class=\"collectable-container\" *ngIf=\"collection.snippet_ids.length\">\n    <h2>Snippets</h2>\n    <avr-collectable-display *ngFor=\"let snippet of collection.snippets\"\n                             [snippet]=\"snippet\"\n                             [bindings]=\"bindings\">\n    </avr-collectable-display>\n  </div>\n\n</div>\n\n<div class=\"content mat-typography\" *ngIf=\"!collection\">\n  <mat-spinner [diameter]=\"24\" *ngIf=\"!error\"></mat-spinner>\n  <p class=\"mat-error\" *ngIf=\"error\">\n    {{error}}\n  </p>\n</div>\n\n","import {Location} from '@angular/common';\nimport {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Meta} from '@angular/platform-browser';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DiscordUser, PartialGuild} from '../../../schemas/Discord';\nimport {WorkshopBindings, WorkshopCollectionFull} from '../../../schemas/Workshop';\nimport {DiscordService} from '../../../shared/discord.service';\nimport {debrace} from '../../../shared/DisplayUtils';\nimport {getUser} from '../../APIHelper';\nimport {CollectionSubscriber} from '../shared/collection-subscriber';\nimport {WorkshopService} from '../workshop.service';\nimport {EditBindingsDialogComponent} from './edit-bindings-dialog/edit-bindings-dialog.component';\n\n@Component({\n  selector: 'avr-collection',\n  templateUrl: './collection.component.html',\n  styleUrls: ['../common.scss', './collection.component.scss']\n})\nexport class CollectionComponent extends CollectionSubscriber implements OnInit {\n  // exports\n  debrace = debrace;\n\n  // data\n  collection: WorkshopCollectionFull;\n  editors: DiscordUser[];\n  bindings: WorkshopBindings | null;  // personal or guild, based on guildContext\n\n  // state\n  loading = true;\n  error: string;\n  guildContext: PartialGuild | null;\n\n  constructor(private route: ActivatedRoute, private router: Router, private snackBar: MatSnackBar,\n              private dialog: MatDialog, private location: Location, private meta: Meta,\n              private workshopService: WorkshopService, private discordService: DiscordService) {\n    super(snackBar, workshopService, discordService);\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      params => this.loadCollection(params.get('id'))\n    );\n  }\n\n  // event listeners\n  onGuildContextChange(guild: PartialGuild | null) {\n    this.guildContext = guild;\n    this.error = null;\n    this.loadBindings();\n    if (this.guildContext) {\n      this.workshopService.getGuildPermissionCheck(this.guildContext.id)\n        .subscribe(response => {\n          if (response.success && !response.data.can_edit) {\n            this.error = `You do not have permission to edit server collections on ${this.guildContext.name}.\n          You will be unable to change subscriptions or edit bindings.`;\n          }\n        });\n    }\n  }\n\n  onCollectionInit(collection: WorkshopCollectionFull) {\n    this.collection = collection;\n    this.editors = [];\n    this.loadOwner();\n    this.loadEditors();\n    this.loadBindings();\n  }\n\n  onEditBindings() {\n    const dialogRef = this.dialog.open(EditBindingsDialogComponent, {\n      disableClose: true,\n      data: {collection: this.collection, guildContext: this.guildContext, bindings: this.bindings},\n    });\n    dialogRef.afterClosed().subscribe(\n      result => {\n        if (result) {\n          this.bindings = result;\n          this.snackBar.open('Updated bindings!');\n        }\n      });\n  }\n\n  // subscribe methods: update bindings in current context\n  onSubscribe() {\n    this.doSubscribe().subscribe(resp => {\n      if (resp.success && !this.guildContext) {\n        this.bindings = resp.data;\n      }\n    });\n  }\n\n  onUnsubscribe() {\n    this.doUnsubscribe().subscribe(resp => {\n      if (resp.success && !this.guildContext) {\n        this.bindings = null;\n      }\n    });\n  }\n\n  onGuildSubscribe(guild: PartialGuild) {\n    this.doGuildSubscribe(guild).subscribe(resp => {\n      if (resp.success && this.guildContext?.id === guild.id) {\n        this.bindings = resp.data;\n      }\n    });\n  }\n\n  // data loaders\n  loadCollection(id: string) {\n    this.workshopService.getCollectionFull(id)\n      .subscribe(response => {\n        this.loading = false;\n        if (response.success) {\n          this.onCollectionInit(response.data);\n        } else {\n          this.error = response.error;\n        }\n      });\n  }\n\n  loadOwner() {\n    this.discordService.getUser(this.collection.owner)\n      .subscribe(response => {\n        this.editors.unshift(response);\n      });\n  }\n\n  loadEditors() {\n    this.workshopService.getCollectionEditors(this.collection._id)\n      .subscribe(response => {\n        if (response.success) {\n          this.editors.push(...response.data);\n        }\n      });\n  }\n\n  loadBindings() {\n    let bindingRequest;\n    this.bindings = null;\n    if (this.guildContext) {\n      bindingRequest = this.workshopService.getGuildSubscription(this.collection._id, this.guildContext.id);\n    } else {\n      bindingRequest = this.workshopService.getMySubscription(this.collection._id);\n    }\n    bindingRequest.subscribe(response => {\n      if (response.success) {\n        this.bindings = response.data;\n      }\n    });\n  }\n\n  // helpers\n  canEdit(): boolean {\n    return this.editors?.some(editor => editor.id === getUser().id);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","// modified version of https://medium.com/@thunderroid/angular-date-ago-pipe-minutes-hours-days-months-years-ago-c4b5efae5fe5\nimport {Pipe, PipeTransform} from '@angular/core';\n\nconst intervals = {\n  'y': 31536000,\n  'mo': 2592000,\n  'w': 604800,\n  'd': 86400,\n  'h': 3600,\n  'm': 60,\n  's': 1\n};\n\n@Pipe({\n  name: 'dateAgo'\n})\nexport class DateAgoPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    if (value) {\n      const seconds = Math.floor((+new Date() - +new Date(value)) / 1000);\n      if (seconds < 29) {\n        return 'now';\n      }\n\n      let counter;\n      for (const i in intervals) {\n        counter = Math.floor(seconds / intervals[i]);\n        if (counter > 0) {\n          return counter + i;\n        }\n      }\n    }\n    return value;\n  }\n}\n","<div class=\"tile mat-elevation-z3 ignore-theme\">\n  <!-- image/initials -->\n  <a\n    [routerLink]=\"showEdit ? ['/dashboard/workshop/', collection._id, 'edit'] : ['/dashboard/workshop/', collection._id]\"\n    class=\"ignore-theme\">\n    <div class=\"collection-image-container\">\n      <div class=\"collection-name-underlay mat-typography collection-image\">\n        <p *ngIf=\"!collection.image\">\n          {{getInitials(collection.name)}}\n        </p>\n      </div>\n      <img class=\"collection-image\" [src]=\"collection.image\" [alt]=\"'Image for ' + collection.name\"\n           *ngIf=\"collection.image\">\n    </div>\n  </a>\n\n  <div class=\"collection-meta mat-typography\">\n    <mat-divider></mat-divider>\n\n    <!-- name, author -->\n    <a\n      [routerLink]=\"showEdit ? ['/dashboard/workshop/', collection._id, 'edit'] : ['/dashboard/workshop/', collection._id]\"\n      class=\"ignore-theme\">\n      <h2>\n        {{collection.name}}\n      </h2>\n    </a>\n\n    <div class=\"collection-author\">\n      <img class=\"collection-author-avatar\" [src]=\"author.avatarUrl\" alt=\"avatar\">\n      <span class=\"collection-author-username\">\n        by {{author.username}}\n\n        <span class=\"collection-edit-date\">\n          • {{collection.last_edited | dateAgo}}\n        </span>\n\n        <i class=\"collection-publication-state\" *ngIf=\"collection.publish_state !== 'PUBLISHED'\">\n          ({{collection.publish_state.toLowerCase()}})\n        </i>\n      </span>\n    </div>\n\n    <!-- tags -->\n    <avr-tag-chip-list [collection]=\"collection\" [limit]=\"5\"></avr-tag-chip-list>\n\n    <!-- description, actions -->\n    <p class=\"description\">\n      {{collection.description}}\n    </p>\n\n    <div class=\"hover-meta-grid\">\n      <!-- # of subscriptions -->\n      <div class=\"hover-subscriptions-number\">\n        {{getNumberString(collection.num_subscribers + collection.num_guild_subscribers)}}\n      </div>\n      <div class=\"hover-subscriptions-icon\">\n        <mat-icon>get_app</mat-icon>\n      </div>\n\n      <div class=\"hover-buttons\">\n        <!-- custom buttons (define in parent) -->\n        <ng-content></ng-content>\n\n        <!-- read more/edit -->\n        <a mat-icon-button aria-label=\"More details\" matTooltip=\"More details\"\n           [routerLink]=\"['/dashboard/workshop/', collection._id]\"\n           *ngIf=\"!showEdit\">\n          <mat-icon>read_more</mat-icon>\n        </a>\n\n        <a mat-icon-button aria-label=\"Edit\" matTooltip=\"Edit\"\n           [routerLink]=\"['/dashboard/workshop/', collection._id, 'edit']\"\n           *ngIf=\"showEdit\">\n          <mat-icon>edit</mat-icon>\n        </a>\n\n        <!-- server sub -->\n        <button mat-icon-button aria-label=\"Server subscribe\" matTooltip=\"Add to server\"\n                [matMenuTriggerFor]=\"serverSubMenu\">\n          <mat-icon>post_add</mat-icon>\n        </button>\n        <mat-menu #serverSubMenu=\"matMenu\">\n          <button mat-menu-item *ngFor=\"let guild of getGuilds() | async\" (click)=\"onGuildSubscribe(guild)\">\n            {{guild.name}}\n          </button>\n        </mat-menu>\n\n        <!-- personal sub -->\n        <button mat-icon-button aria-label=\"Personal subscribe\" matTooltip=\"Add to personal collection\"\n                *ngIf=\"!isSubscribed()\" (click)=\"onSubscribe()\">\n          <mat-icon>add</mat-icon>\n        </button>\n        <button mat-icon-button aria-label=\"Personal unsubscribe\" matTooltip=\"Remove from personal collection\"\n                *ngIf=\"isSubscribed()\" (click)=\"onUnsubscribe()\">\n          <mat-icon>check</mat-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport * as numeral from 'numeral';\nimport {DiscordUser} from '../../../schemas/Discord';\nimport {WorkshopCollection} from '../../../schemas/Workshop';\nimport {DiscordService} from '../../../shared/discord.service';\nimport {CollectionSubscriber} from '../shared/collection-subscriber';\nimport {WorkshopService} from '../workshop.service';\n\n@Component({\n  selector: 'avr-collection-tile',\n  templateUrl: './collection-tile.component.html',\n  styleUrls: ['../common.scss', './collection-tile.component.scss']\n})\nexport class CollectionTileComponent extends CollectionSubscriber implements OnInit {\n\n  @Input() collection: WorkshopCollection;\n  @Input() showEdit: boolean = false;\n  author: DiscordUser;\n\n  constructor(private discord: DiscordService, private workshopService: WorkshopService,\n              private snackBar: MatSnackBar) {\n    super(snackBar, workshopService, discord);\n  }\n\n  ngOnInit(): void {\n    this.author = {id: this.collection.owner, username: 'Loading...', avatarUrl: '../../../../assets/img/AvraeSquare.jpg'};\n    this.loadAuthor();\n  }\n\n  // helpers\n  getInitials(name: string): string {\n    const match = name.match(/\\b\\w/g) || [];\n    return (match.join('')).toUpperCase();\n  }\n\n  getNumberString(number: number): string {\n    return numeral(number).format('0.[0]a');\n  }\n\n  isSubscribed() {\n    return this.workshopService.personalSubscribedIds?.includes(this.collection._id);\n  }\n\n  // data loaders\n  loadAuthor() {\n    this.discord.getUser(this.collection.owner)\n      .subscribe(user => this.author = user);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>My Subscriptions</span>\n  <span class=\"toolbar-spacer\"></span>\n\n  <mat-spinner *ngIf=\"loading\" color=\"accent\" diameter=\"24\"></mat-spinner>\n\n  <div class=\"toolbar-search-form\">\n    <!-- order -->\n    <mat-form-field appearance=\"fill\" class=\"toolbar-search-form-order\">\n      <mat-label>Order</mat-label>\n      <mat-select [(value)]=\"order\" (selectionChange)=\"onOrderChange()\">\n        <mat-option value=\"edittime\">Last Updated</mat-option>\n        <mat-option value=\"newest\">Creation Time</mat-option>\n        <mat-option value=\"alphabetical\">Alphabetical</mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <!-- guild context -->\n    <avr-guild-select-field class=\"toolbar-search-form-guild-context\"\n                            defaultLabel=\"Personal Collection\"\n                            (guildChange)=\"onGuildContextChange($event)\">\n    </avr-guild-select-field>\n  </div>\n\n</mat-toolbar>\n\n<!-- CONTENT -->\n<div class=\"container\">\n  <mat-card class=\"workshop-header\">\n    <p *ngIf=\"!guildContext\">\n      Here are all the collections you're subscribed to. You can view them or unsubscribe from them here!\n    </p>\n    <p *ngIf=\"guildContext\">\n      Here are all the collections on {{guildContext.name}}. You can view them or unsubscribe from them here!\n    </p>\n\n    <p class=\"mat-error\" *ngIf=\"error\">\n      {{error}}\n    </p>\n  </mat-card>\n\n  <mat-card *ngIf=\"!loading && collections.length === 0\">\n    <p>\n      You have not subscribed to any collections. Try switching server contexts in the top right or exploring\n      collections in the workshop!\n    </p>\n  </mat-card>\n\n  <div class=\"collections-grid\">\n    <avr-collection-tile *ngFor=\"let collection of collections\" [collection]=\"collection\">\n      <button mat-icon-button aria-label=\"Remove from server\" matTooltip=\"Remove from server\"\n              *ngIf=\"guildContext && guildSubscribedIds.includes(collection._id)\"\n              (click)=\"onGuildRemove(collection)\">\n        <mat-icon>link_off</mat-icon>\n      </button>\n    </avr-collection-tile>\n  </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PartialGuild} from '../../../schemas/Discord';\nimport {WorkshopCollection} from '../../../schemas/Workshop';\nimport {WorkshopService} from '../workshop.service';\n\n@Component({\n  selector: 'avr-my-subscriptions',\n  templateUrl: './my-subscriptions.component.html',\n  styleUrls: ['../common.scss', './my-subscriptions.component.scss']\n})\nexport class MySubscriptionsComponent implements OnInit {\n\n  // state\n  loading = true;\n  collections: WorkshopCollection[] = [];\n  error: string;\n  order = 'edittime';\n  guildContext: PartialGuild | null;\n  guildSubscribedIds: string[] = [];\n\n  constructor(private route: ActivatedRoute, private router: Router, private snackBar: MatSnackBar,\n              private workshopService: WorkshopService) {\n  }\n\n  ngOnInit(): void {\n    this.loadCollections();\n  }\n\n  // event handlers\n  onOrderChange() {\n    this.sortCollections();\n  }\n\n  onGuildContextChange(guild: PartialGuild | null) {\n    this.guildContext = guild;\n    this.loadCollections();\n    if (this.guildContext) {\n      this.workshopService.getGuildPermissionCheck(this.guildContext.id)\n        .subscribe(response => {\n          if (response.success && !response.data.can_edit) {\n            this.error = `You do not have permission to edit server collections on ${this.guildContext.name}.\n          You can view the subscribed collections here, but you will be unable to remove them.`;\n          }\n        });\n    }\n  }\n\n  onGuildRemove(collection: WorkshopCollection) {\n    this.workshopService.guildUnsubscribe(collection._id, this.guildContext.id)\n      .subscribe(response => {\n        if (response.success) {\n          this.guildSubscribedIds.splice(this.guildSubscribedIds.indexOf(collection._id), 1);\n          this.snackBar.open(`Removed ${collection.name} from ${this.guildContext.name}.`);\n        } else {\n          this.snackBar.open(response.error, null, {duration: 5000});\n        }\n      });\n  }\n\n  // data loaders\n  loadCollections() {\n    this.error = null;\n    this.loading = true;\n    this.collections = [];\n\n    if (!this.guildContext) {\n      this.workshopService.getMySubscriptions()\n        .subscribe(response => {\n          if (response.success) {\n            this.loadCollectionsFromIds(response.data);\n            this.guildSubscribedIds = [];\n          } else {\n            this.error = response.error;\n          }\n        });\n    } else {\n      this.workshopService.getGuildSubscriptions(this.guildContext.id)\n        .subscribe(response => {\n          if (response.success) {\n            this.loadCollectionsFromIds(response.data);\n            this.guildSubscribedIds = response.data;\n          } else {\n            this.error = response.error;\n          }\n        });\n    }\n  }\n\n  loadCollectionsFromIds(ids: string[]) {\n    if (ids.length === 0) {\n      this.loading = false;\n    } else {\n      this.workshopService.getCollectionsBatched(ids)\n        .subscribe(response => {\n          if (response.success) {\n            this.collections.push(...response.data);\n            // ensure the collections populate in the requested order\n            this.sortCollections();\n            this.loading = false;\n            // #1438 batch returns fewer collections if some are private\n            if (this.collections.length != ids.length) {\n              this.error = 'One or more collections were hidden because they are private.';\n            }\n          } else {\n            this.error = response.error;\n          }\n        });\n    }\n  }\n\n  // helpers\n  sortCollections() {\n    let sorter;\n    switch (this.order) {\n      case 'alphabetical':\n        sorter = (a, b) => a.name.localeCompare(b.name);\n        break;\n      case 'newest':\n        sorter = (a, b) => b.created_at.localeCompare(a.created_at); // iso8601 lets us str compare :)\n        break;\n      default:\n        sorter = (a, b) => b.last_edited.localeCompare(a.last_edited);\n    }\n    this.collections.sort(sorter);\n  }\n}\n","<h2 mat-dialog-title>Creating Collection</h2>\n\n<mat-dialog-content class=\"mat-typography\">\n  <p>\n    Start by giving your collection a name, description, and optionally an image! These can\n    be changed at any time after your collection is created.\n  </p>\n\n  <mat-form-field>\n    <mat-label>Name</mat-label>\n    <input matInput placeholder=\"Collection Name\" required [(ngModel)]=\"name\">\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Description</mat-label>\n    <textarea matInput placeholder=\"What is this collection about?\" required [(ngModel)]=\"description\"></textarea>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Image URL</mat-label>\n    <input matInput placeholder=\"Image URL\" [(ngModel)]=\"imageUrl\">\n  </mat-form-field>\n\n  <p class=\"mat-error\" *ngIf=\"error\">\n    {{error}}\n  </p>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <mat-spinner [diameter]=\"24\" *ngIf=\"loading\"></mat-spinner>\n  <button mat-flat-button mat-dialog-close>Cancel</button>\n  <button mat-flat-button color=\"primary\" (click)=\"onCreate()\">Create</button>\n</mat-dialog-actions>\n","import {Component, OnInit} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {WorkshopService} from '../../workshop.service';\n\n@Component({\n  selector: 'avr-new-collection-dialog',\n  templateUrl: './new-collection-dialog.component.html',\n  styleUrls: ['../../dialog-common.scss']\n})\nexport class NewCollectionDialogComponent implements OnInit {\n\n  name: string;\n  description: string;\n  imageUrl: string;\n\n  error: string;\n  loading = false;\n\n  constructor(private dialogRef: MatDialogRef<NewCollectionDialogComponent>,\n              private workshopService: WorkshopService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  // event handlers\n  onCreate() {\n    this.loading = true;\n    this.workshopService.createCollection(this.name, this.description, this.imageUrl || null)\n      .subscribe(response => {\n        this.loading = false;\n        if (response.success) {\n          this.dialogRef.close(response.data);\n        } else {\n          this.error = response.error;\n        }\n      });\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"toolbar\">\n  <span>My Work</span>\n  <span class=\"toolbar-spacer\"></span>\n\n  <mat-spinner *ngIf=\"loadingOwned || loadingEditable\" color=\"accent\" diameter=\"24\"></mat-spinner>\n\n  <!-- create collection -->\n  <button mat-icon-button matTooltip=\"Create New Collection\" class=\"toolbar-add-button\" (click)=\"onCreateCollection()\">\n    <mat-icon>add</mat-icon>\n  </button>\n\n  <div class=\"toolbar-search-form\">\n    <!-- order -->\n    <mat-form-field appearance=\"fill\" class=\"toolbar-search-form-order\">\n      <mat-label>Order</mat-label>\n      <mat-select [(value)]=\"order\" (selectionChange)=\"onOrderChange()\">\n        <mat-option value=\"edittime\">Last Updated</mat-option>\n        <mat-option value=\"newest\">Creation Time</mat-option>\n        <mat-option value=\"alphabetical\">Alphabetical</mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n</mat-toolbar>\n\n<!-- CONTENT -->\n<div class=\"container\">\n  <mat-card class=\"workshop-header\">\n    Here are all the collections you own or have access to. You can subscribe to your own work to use it on Avrae,\n    or click on a collection to edit it.\n\n    <p class=\"mat-error\" *ngIf=\"error\">\n      {{error}}\n    </p>\n  </mat-card>\n\n  <mat-card *ngIf=\"!(loadingOwned || loadingEditable) && collections.length === 0\">\n    <p>You have no collections. Create one to share your aliases and snippets!</p>\n    <button mat-raised-button color=\"primary\" (click)=\"onCreateCollection()\">\n      Create Collection\n    </button>\n  </mat-card>\n\n  <div class=\"collections-grid\">\n    <avr-collection-tile *ngFor=\"let collection of collections\"\n                         [collection]=\"collection\" [showEdit]=\"true\"></avr-collection-tile>\n  </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {WorkshopCollection} from '../../../schemas/Workshop';\nimport {WorkshopService} from '../workshop.service';\nimport {NewCollectionDialogComponent} from './new-collection-dialog/new-collection-dialog.component';\n\n@Component({\n  selector: 'avr-my-work',\n  templateUrl: './my-work.component.html',\n  styleUrls: ['../common.scss', './my-work.component.scss']\n})\nexport class MyWorkComponent implements OnInit {\n\n  // state\n  loadingOwned = true;\n  loadingEditable = true;\n  collections: WorkshopCollection[] = [];\n  error: string;\n  order = 'edittime';\n\n  constructor(private route: ActivatedRoute, private router: Router, private dialog: MatDialog,\n              private workshopService: WorkshopService) {\n  }\n\n  ngOnInit(): void {\n    this.loadCollections();\n  }\n\n  // event handlers\n  onOrderChange() {\n    this.sortCollections();\n  }\n\n  onCreateCollection() {\n    const dialogRef: MatDialogRef<NewCollectionDialogComponent, WorkshopCollection | null> = this.dialog.open(\n      NewCollectionDialogComponent,\n      {disableClose: true});\n    dialogRef.afterClosed().subscribe(createdCollection => {\n      if (createdCollection !== null) {\n        this.router.navigate(['dashboard', 'workshop', createdCollection._id, 'edit']);\n      }\n    });\n  }\n\n  // data loaders\n  loadCollections() {\n    this.error = null;\n    this.loadingOwned = true;\n    this.loadingEditable = true;\n    this.collections = [];\n\n    this.workshopService.getOwnedCollectionIds()\n      .subscribe(response => {\n        if (response.success) {\n          this.loadCollectionsFromIds(response.data, true);\n        } else {\n          this.error = response.error;\n        }\n      });\n    this.workshopService.getEditableCollectionIds()\n      .subscribe(response => {\n        if (response.success) {\n          this.loadCollectionsFromIds(response.data, false);\n        } else {\n          this.error = response.error;\n        }\n      });\n  }\n\n  loadCollectionsFromIds(ids: string[], isOwned: boolean) {\n    if (ids.length === 0) {\n      isOwned ? this.loadingOwned = false : this.loadingEditable = false;\n    } else {\n      this.workshopService.getCollectionsBatched(ids)\n        .subscribe(response => {\n          if (response.success) {\n            this.collections.push(...response.data);\n            // ensure the collections populate in the requested order\n            this.sortCollections();\n            isOwned ? this.loadingOwned = false : this.loadingEditable = false;\n          } else {\n            this.error = response.error;\n          }\n        });\n    }\n  }\n\n  // helpers\n  sortCollections() {\n    let sorter;\n    switch (this.order) {\n      case 'alphabetical':\n        sorter = (a, b) => a.name.localeCompare(b.name);\n        break;\n      case 'newest':\n        sorter = (a, b) => b.created_at.localeCompare(a.created_at); // iso8601 lets us str compare :)\n        break;\n      default:\n        sorter = (a, b) => b.last_edited.localeCompare(a.last_edited);\n    }\n    this.collections.sort(sorter);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>Explore Aliases</span>\n  <span class=\"toolbar-spacer\"></span>\n\n  <mat-spinner *ngIf=\"loading\" color=\"accent\" diameter=\"24\"></mat-spinner>\n\n  <div class=\"toolbar-search-form\">\n    <!-- order -->\n    <mat-form-field appearance=\"fill\" class=\"toolbar-search-form-order\">\n      <mat-label>Order</mat-label>\n      <mat-select [(value)]=\"order\" (selectionChange)=\"onOrderChange()\">\n        <mat-option value=\"popular-1w\">Most Popular (1 week)</mat-option>\n        <mat-option value=\"popular-1m\">Most Popular (1 month)</mat-option>\n        <mat-option value=\"popular-6m\">Most Popular (6 months)</mat-option>\n        <mat-option value=\"popular-all\">Most Popular (all time)</mat-option>\n        <mat-option value=\"relevance\">Relevance</mat-option>\n        <mat-option value=\"newest\">Newest</mat-option>\n        <mat-option value=\"edittime\">Recently Updated</mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <!-- search + tags -->\n    <mat-form-field class=\"toolbar-search-form-search\">\n      <mat-label>Search...</mat-label>\n      <mat-chip-list #chipList>\n        <mat-chip *ngFor=\"let tag of tags\" removable (removed)=\"onTagRemove(tag)\">\n          {{tag.name}}\n          <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n        <input type=\"text\" matInput autocomplete=\"off\" #search [matAutocomplete]=\"auto\"\n               [value]=\"q\" (keyup)=\"filterTags(search.value)\" (keyup.enter)=\"onSearch(search.value)\"\n               [matChipInputFor]=\"chipList\">\n      </mat-chip-list>\n      <button mat-icon-button matSuffix (click)=\"onSearchClear()\" *ngIf=\"q || tags?.length\">\n        <mat-icon>cancel</mat-icon>\n      </button>\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-optgroup *ngFor=\"let tup of filteredTags\" [label]=\"tup[0]\">\n          <mat-option *ngFor=\"let tag of tup[1]\" [value]=\"\" (click)=\"onTagAdd(tag)\">\n            {{tag.name}}\n          </mat-option>\n        </mat-optgroup>\n      </mat-autocomplete>\n    </mat-form-field>\n  </div>\n\n</mat-toolbar>\n\n<!-- CONTENT -->\n<div class=\"container\">\n  <mat-card *ngIf=\"page === 1 || error\" class=\"workshop-header\">\n    <div *ngIf=\"page === 1\">\n      <h3 class=\"welcome-header\">Welcome to the Alias Workshop!</h3>\n      <p>\n        Here you can find user-made extensions to Avrae to make playing D&amp;D over Discord even easier. Subscribe\n        to a collection to use aliases (commands) and snippets (argument shortcuts) on any server Avrae is in, or\n        add a collection to a server to let anyone in the server use it!\n      </p>\n    </div>\n\n    <p class=\"mat-error\" *ngIf=\"error\">\n      {{error}}\n    </p>\n  </mat-card>\n\n  <mat-card *ngIf=\"!loading && collections.length === 0\">\n    <p>There are no results. Try a different search!</p>\n  </mat-card>\n\n  <div class=\"collections-grid\">\n    <avr-collection-tile *ngFor=\"let collection of collections\" [collection]=\"collection\"></avr-collection-tile>\n  </div>\n\n  <div class=\"paginator-container mat-typography ignore-theme\"\n       *ngIf=\"expectedCollectionIds?.length === COLLECTIONS_PER_PAGE || page > 1\">\n    <div class=\"paginator mat-elevation-z3\">\n      <button mat-icon-button aria-label=\"Previous page button\" *ngIf=\"page > 1\" (click)=\"onPreviousPage()\">\n        <mat-icon>chevron_left</mat-icon>\n      </button>\n      <span>Page {{page}}</span>\n      <button mat-icon-button aria-label=\"Next page button\"\n              *ngIf=\"expectedCollectionIds?.length === COLLECTIONS_PER_PAGE\"\n              (click)=\"onNextPage()\">\n        <mat-icon>chevron_right</mat-icon>\n      </button>\n    </div>\n  </div>\n</div>\n\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {groupBy} from 'lodash';\nimport {WorkshopCollection, WorkshopTag} from '../../schemas/Workshop';\nimport {WorkshopService} from './workshop.service';\n\n@Component({\n  selector: 'avr-workshop',\n  templateUrl: './workshop-explore.component.html',\n  styleUrls: ['./common.scss', './workshop-explore.component.scss']\n})\nexport class WorkshopExploreComponent implements OnInit {\n  COLLECTIONS_PER_PAGE = 48;\n\n  // explore params\n  order: string;\n  tags: WorkshopTag[] = [];  // tags in current query\n  q: string;\n  page: number;\n\n  // state\n  loading = true;\n  expectedCollectionIds: string[] = [];  // the ids of the collections we currently want (some may not be displayed in some edge cases where a collection is private)\n  collections: WorkshopCollection[] = [];\n  validTags: WorkshopTag[];  // all valid tags\n  filteredTags: [string, WorkshopTag[]][] = [];  // list of tuples of (category, tags) of tags that match query in search\n  error: string;\n\n  constructor(private route: ActivatedRoute, private router: Router, private workshopService: WorkshopService) {\n  }\n\n  ngOnInit(): void {\n    // populate options from query string\n    this.order = this.route.snapshot.queryParamMap.get('order') || 'popular-1w';\n    this.q = this.route.snapshot.queryParamMap.get('q');\n    this.page = parseInt(this.route.snapshot.queryParamMap.get('page') || '1');\n    // tags populated after tag loading\n\n    // populate page (tag load also refreshes)\n    this.loadValidTags();\n  }\n\n  // event handlers\n  onOrderChange() {\n    this.refresh();\n  }\n\n  onSearch(search) {\n    this.q = search;\n    if (search) {\n      this.order = 'relevance';\n    } else if (this.order === 'relevance') {\n      this.order = 'popular-1w';\n    }\n    this.refresh();\n  }\n\n  onSearchClear() {\n    this.tags = [];\n    this.onSearch(null);\n  }\n\n  onTagAdd(tag: WorkshopTag) {\n    if (!this.tags.includes(tag)) {\n      this.tags.push(tag);\n      this.refresh();\n    }\n  }\n\n  onTagRemove(tag: WorkshopTag) {\n    if (this.tags.includes(tag)) {\n      this.tags.splice(this.tags.indexOf(tag), 1);\n      this.refresh();\n    }\n  }\n\n  onPreviousPage() {\n    this.page--;\n    this.refresh();\n  }\n\n  onNextPage() {\n    this.page++;\n    this.refresh();\n  }\n\n  // data loaders\n  refresh() {\n    this.error = null;\n\n    // set query params\n    this.addQueryParams({\n      order: this.order,\n      q: this.q || null,\n      tags: this.tags.map(tag => tag.slug).join(',') || null,\n      page: this.page\n    });\n\n    this.loading = true;\n    const tags = this.tags.map(tag => tag.slug);\n    this.workshopService.getWorkshopExplore(this.order, tags, this.q, this.page)\n      .subscribe(response => {\n        if (response.success) {\n          this.collections = [];\n          this.loadCollectionsFromIds(response.data);\n        } else {\n          this.error = response.error;\n        }\n      });\n  }\n\n  loadCollectionsFromIds(ids: string[]) {\n    this.expectedCollectionIds = ids;\n    if (ids.length === 0) {\n      this.loading = false;\n    } else {\n      this.workshopService.getCollectionsBatched(ids)\n        .subscribe(response => {\n          if (response.success) {\n            this.collections.push(...response.data);\n            this.loading = false;\n            // #1438 batch returns fewer collections if some are private\n            if (this.collections.length != this.expectedCollectionIds.length) {\n              this.error = 'One or more collections were hidden because they are private.';\n            }\n          } else {\n            this.error = response.error;\n          }\n        });\n    }\n  }\n\n  loadValidTags() {\n    this.workshopService.getTags()\n      .subscribe(result => {\n        if (result.success) {\n          // tags are alphabetically sorted\n          this.validTags = result.data.sort((a, b) => a.name.localeCompare(b.name));\n\n          // load tags from query string\n          const querySlugs = this.route.snapshot.queryParamMap.get('tags')?.split(',') || [];\n          this.tags.push(...this.validTags.filter(t => querySlugs.includes(t.slug)));\n\n          this.filterTags(this.q);\n          this.refresh();\n        } else {\n          this.error = result.error;\n        }\n      });\n  }\n\n  // helpers\n  filterTags(search) {\n    if (!this.validTags) {\n      this.filteredTags = [];\n      return;\n    }\n    if (!search) {\n      this.filteredTags = Object.entries(groupBy(this.validTags, tag => tag.category));\n      return;\n    }\n    this.filteredTags = Object.entries(groupBy(\n      this.validTags.filter(tag => tag.name.toLowerCase().startsWith(search.toLowerCase())),\n      tag => tag.category\n    ));\n  }\n\n  addQueryParams(params) {\n    this.router.navigate(\n      [],\n      {\n        relativeTo: this.route,\n        queryParams: params,\n        queryParamsHandling: 'merge',\n        replaceUrl: true\n      });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CollectionEditComponent} from './collection-edit/collection-edit.component';\nimport {CollectionComponent} from './collection/collection.component';\nimport {MySubscriptionsComponent} from './my-subscriptions/my-subscriptions.component';\nimport {MyWorkComponent} from './my-work/my-work.component';\nimport {WorkshopExploreComponent} from './workshop-explore.component';\n\nconst routes: Routes = [\n  {path: '', component: WorkshopExploreComponent, pathMatch: 'full'},\n  {path: 'my-subscriptions', component: MySubscriptionsComponent},\n  {path: 'my-work', component: MyWorkComponent},\n  {path: ':id', component: CollectionComponent},\n  {path: ':id/edit', component: CollectionEditComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WorkshopRoutingModule {\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MarkdownModule} from 'ngx-markdown';\nimport {MonacoEditorModule} from 'ngx-monaco-editor';\nimport {MaterialModule} from '../../material/material.module';\nimport {PipesModule} from '../../shared/pipes/pipes.module';\nimport {AddEditorComponent} from './collection-edit/add-editor/add-editor.component';\nimport {CollectionEditComponent} from './collection-edit/collection-edit.component';\nimport {EditSettingsDialogComponent} from './collection-edit/edit-settings-dialog/edit-settings-dialog.component';\nimport {CollectionTileComponent} from './collection-tile/collection-tile.component';\nimport {CollectableDisplayComponent} from './collectable-display/collectable-display.component';\nimport {CollectionComponent} from './collection/collection.component';\nimport {EditBindingsDialogComponent} from './collection/edit-bindings-dialog/edit-bindings-dialog.component';\nimport {MySubscriptionsComponent} from './my-subscriptions/my-subscriptions.component';\nimport {MyWorkComponent} from './my-work/my-work.component';\nimport {NewCollectionDialogComponent} from './my-work/new-collection-dialog/new-collection-dialog.component';\nimport {GuildSelectFieldComponent} from './shared/guild-select-field.component';\nimport {PrettyUserComponent} from './shared/pretty-user.component';\nimport {TagChipListComponent} from './shared/tag-chip-list.component';\nimport {WorkshopExploreComponent} from './workshop-explore.component';\n\nimport {WorkshopRoutingModule} from './workshop-routing.module';\nimport { PublishDialogComponent } from './collection-edit/publish-dialog/publish-dialog.component';\nimport { CollectableEditComponent } from './collection-edit/collectable-edit/collectable-edit.component';\nimport { CreateCollectableDialogComponent } from './collection-edit/create-collectable-dialog/create-collectable-dialog.component';\nimport { CollectableEditDialogComponent } from './collection-edit/collectable-edit-dialog/collectable-edit-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    WorkshopExploreComponent,\n    CollectionTileComponent,\n    MyWorkComponent,\n    MySubscriptionsComponent,\n    CollectionComponent,\n    TagChipListComponent,\n    GuildSelectFieldComponent,\n    PrettyUserComponent,\n    CollectableDisplayComponent,\n    EditBindingsDialogComponent,\n    NewCollectionDialogComponent,\n    CollectionEditComponent,\n    AddEditorComponent,\n    EditSettingsDialogComponent,\n    PublishDialogComponent,\n    CollectableEditComponent,\n    CreateCollectableDialogComponent,\n    CollectableEditDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    WorkshopRoutingModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PipesModule,\n    MarkdownModule,\n    MonacoEditorModule\n  ]\n})\nexport class WorkshopModule {\n}\n","/*! @preserve\n * numeral.js\n * version : 2.0.6\n * author : Adam Draper\n * license : MIT\n * http://adamwdraper.github.com/Numeral-js/\n */\n\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        global.numeral = factory();\n    }\n}(this, function () {\n    /************************************\n        Variables\n    ************************************/\n\n    var numeral,\n        _,\n        VERSION = '2.0.6',\n        formats = {},\n        locales = {},\n        defaults = {\n            currentLocale: 'en',\n            zeroFormat: null,\n            nullFormat: null,\n            defaultFormat: '0,0',\n            scalePercentBy100: true\n        },\n        options = {\n            currentLocale: defaults.currentLocale,\n            zeroFormat: defaults.zeroFormat,\n            nullFormat: defaults.nullFormat,\n            defaultFormat: defaults.defaultFormat,\n            scalePercentBy100: defaults.scalePercentBy100\n        };\n\n\n    /************************************\n        Constructors\n    ************************************/\n\n    // Numeral prototype object\n    function Numeral(input, number) {\n        this._input = input;\n\n        this._value = number;\n    }\n\n    numeral = function(input) {\n        var value,\n            kind,\n            unformatFunction,\n            regexp;\n\n        if (numeral.isNumeral(input)) {\n            value = input.value();\n        } else if (input === 0 || typeof input === 'undefined') {\n            value = 0;\n        } else if (input === null || _.isNaN(input)) {\n            value = null;\n        } else if (typeof input === 'string') {\n            if (options.zeroFormat && input === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && input === options.nullFormat || !input.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                for (kind in formats) {\n                    regexp = typeof formats[kind].regexps.unformat === 'function' ? formats[kind].regexps.unformat() : formats[kind].regexps.unformat;\n\n                    if (regexp && input.match(regexp)) {\n                        unformatFunction = formats[kind].unformat;\n\n                        break;\n                    }\n                }\n\n                unformatFunction = unformatFunction || numeral._.stringToNumber;\n\n                value = unformatFunction(input);\n            }\n        } else {\n            value = Number(input)|| null;\n        }\n\n        return new Numeral(input, value);\n    };\n\n    // version number\n    numeral.version = VERSION;\n\n    // compare numeral object\n    numeral.isNumeral = function(obj) {\n        return obj instanceof Numeral;\n    };\n\n    // helper functions\n    numeral._ = _ = {\n        // formats numbers separators, decimals places, signs, abbreviations\n        numberToFormat: function(value, format, roundingFunction) {\n            var locale = locales[numeral.options.currentLocale],\n                negP = false,\n                optDec = false,\n                leadingCount = 0,\n                abbr = '',\n                trillion = 1000000000000,\n                billion = 1000000000,\n                million = 1000000,\n                thousand = 1000,\n                decimal = '',\n                neg = false,\n                abbrForce, // force abbreviation\n                abs,\n                min,\n                max,\n                power,\n                int,\n                precision,\n                signed,\n                thousands,\n                output;\n\n            // make sure we never format a null value\n            value = value || 0;\n\n            abs = Math.abs(value);\n\n            // see if we should use parentheses for negative number or if we should prefix with a sign\n            // if both are present we default to parentheses\n            if (numeral._.includes(format, '(')) {\n                negP = true;\n                format = format.replace(/[\\(|\\)]/g, '');\n            } else if (numeral._.includes(format, '+') || numeral._.includes(format, '-')) {\n                signed = numeral._.includes(format, '+') ? format.indexOf('+') : value < 0 ? format.indexOf('-') : -1;\n                format = format.replace(/[\\+|\\-]/g, '');\n            }\n\n            // see if abbreviation is wanted\n            if (numeral._.includes(format, 'a')) {\n                abbrForce = format.match(/a(k|m|b|t)?/);\n\n                abbrForce = abbrForce ? abbrForce[1] : false;\n\n                // check for space before abbreviation\n                if (numeral._.includes(format, ' a')) {\n                    abbr = ' ';\n                }\n\n                format = format.replace(new RegExp(abbr + 'a[kmbt]?'), '');\n\n                if (abs >= trillion && !abbrForce || abbrForce === 't') {\n                    // trillion\n                    abbr += locale.abbreviations.trillion;\n                    value = value / trillion;\n                } else if (abs < trillion && abs >= billion && !abbrForce || abbrForce === 'b') {\n                    // billion\n                    abbr += locale.abbreviations.billion;\n                    value = value / billion;\n                } else if (abs < billion && abs >= million && !abbrForce || abbrForce === 'm') {\n                    // million\n                    abbr += locale.abbreviations.million;\n                    value = value / million;\n                } else if (abs < million && abs >= thousand && !abbrForce || abbrForce === 'k') {\n                    // thousand\n                    abbr += locale.abbreviations.thousand;\n                    value = value / thousand;\n                }\n            }\n\n            // check for optional decimals\n            if (numeral._.includes(format, '[.]')) {\n                optDec = true;\n                format = format.replace('[.]', '.');\n            }\n\n            // break number and format\n            int = value.toString().split('.')[0];\n            precision = format.split('.')[1];\n            thousands = format.indexOf(',');\n            leadingCount = (format.split('.')[0].split(',')[0].match(/0/g) || []).length;\n\n            if (precision) {\n                if (numeral._.includes(precision, '[')) {\n                    precision = precision.replace(']', '');\n                    precision = precision.split('[');\n                    decimal = numeral._.toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n                } else {\n                    decimal = numeral._.toFixed(value, precision.length, roundingFunction);\n                }\n\n                int = decimal.split('.')[0];\n\n                if (numeral._.includes(decimal, '.')) {\n                    decimal = locale.delimiters.decimal + decimal.split('.')[1];\n                } else {\n                    decimal = '';\n                }\n\n                if (optDec && Number(decimal.slice(1)) === 0) {\n                    decimal = '';\n                }\n            } else {\n                int = numeral._.toFixed(value, 0, roundingFunction);\n            }\n\n            // check abbreviation again after rounding\n            if (abbr && !abbrForce && Number(int) >= 1000 && abbr !== locale.abbreviations.trillion) {\n                int = String(Number(int) / 1000);\n\n                switch (abbr) {\n                    case locale.abbreviations.thousand:\n                        abbr = locale.abbreviations.million;\n                        break;\n                    case locale.abbreviations.million:\n                        abbr = locale.abbreviations.billion;\n                        break;\n                    case locale.abbreviations.billion:\n                        abbr = locale.abbreviations.trillion;\n                        break;\n                }\n            }\n\n\n            // format number\n            if (numeral._.includes(int, '-')) {\n                int = int.slice(1);\n                neg = true;\n            }\n\n            if (int.length < leadingCount) {\n                for (var i = leadingCount - int.length; i > 0; i--) {\n                    int = '0' + int;\n                }\n            }\n\n            if (thousands > -1) {\n                int = int.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + locale.delimiters.thousands);\n            }\n\n            if (format.indexOf('.') === 0) {\n                int = '';\n            }\n\n            output = int + decimal + (abbr ? abbr : '');\n\n            if (negP) {\n                output = (negP && neg ? '(' : '') + output + (negP && neg ? ')' : '');\n            } else {\n                if (signed >= 0) {\n                    output = signed === 0 ? (neg ? '-' : '+') + output : output + (neg ? '-' : '+');\n                } else if (neg) {\n                    output = '-' + output;\n                }\n            }\n\n            return output;\n        },\n        // unformats numbers separators, decimals places, signs, abbreviations\n        stringToNumber: function(string) {\n            var locale = locales[options.currentLocale],\n                stringOriginal = string,\n                abbreviations = {\n                    thousand: 3,\n                    million: 6,\n                    billion: 9,\n                    trillion: 12\n                },\n                abbreviation,\n                value,\n                i,\n                regexp;\n\n            if (options.zeroFormat && string === options.zeroFormat) {\n                value = 0;\n            } else if (options.nullFormat && string === options.nullFormat || !string.replace(/[^0-9]+/g, '').length) {\n                value = null;\n            } else {\n                value = 1;\n\n                if (locale.delimiters.decimal !== '.') {\n                    string = string.replace(/\\./g, '').replace(locale.delimiters.decimal, '.');\n                }\n\n                for (abbreviation in abbreviations) {\n                    regexp = new RegExp('[^a-zA-Z]' + locale.abbreviations[abbreviation] + '(?:\\\\)|(\\\\' + locale.currency.symbol + ')?(?:\\\\))?)?$');\n\n                    if (stringOriginal.match(regexp)) {\n                        value *= Math.pow(10, abbreviations[abbreviation]);\n                        break;\n                    }\n                }\n\n                // check for negative number\n                value *= (string.split('-').length + Math.min(string.split('(').length - 1, string.split(')').length - 1)) % 2 ? 1 : -1;\n\n                // remove non numbers\n                string = string.replace(/[^0-9\\.]+/g, '');\n\n                value *= Number(string);\n            }\n\n            return value;\n        },\n        isNaN: function(value) {\n            return typeof value === 'number' && isNaN(value);\n        },\n        includes: function(string, search) {\n            return string.indexOf(search) !== -1;\n        },\n        insert: function(string, subString, start) {\n            return string.slice(0, start) + subString + string.slice(start);\n        },\n        reduce: function(array, callback /*, initialValue*/) {\n            if (this === null) {\n                throw new TypeError('Array.prototype.reduce called on null or undefined');\n            }\n\n            if (typeof callback !== 'function') {\n                throw new TypeError(callback + ' is not a function');\n            }\n\n            var t = Object(array),\n                len = t.length >>> 0,\n                k = 0,\n                value;\n\n            if (arguments.length === 3) {\n                value = arguments[2];\n            } else {\n                while (k < len && !(k in t)) {\n                    k++;\n                }\n\n                if (k >= len) {\n                    throw new TypeError('Reduce of empty array with no initial value');\n                }\n\n                value = t[k++];\n            }\n            for (; k < len; k++) {\n                if (k in t) {\n                    value = callback(value, t[k], k, t);\n                }\n            }\n            return value;\n        },\n        /**\n         * Computes the multiplier necessary to make x >= 1,\n         * effectively eliminating miscalculations caused by\n         * finite precision.\n         */\n        multiplier: function (x) {\n            var parts = x.toString().split('.');\n\n            return parts.length < 2 ? 1 : Math.pow(10, parts[1].length);\n        },\n        /**\n         * Given a variable number of arguments, returns the maximum\n         * multiplier that must be used to normalize an operation involving\n         * all of them.\n         */\n        correctionFactor: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            return args.reduce(function(accum, next) {\n                var mn = _.multiplier(next);\n                return accum > mn ? accum : mn;\n            }, 1);\n        },\n        /**\n         * Implementation of toFixed() that treats floats more like decimals\n         *\n         * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n         * problems for accounting- and finance-related software.\n         */\n        toFixed: function(value, maxDecimals, roundingFunction, optionals) {\n            var splitValue = value.toString().split('.'),\n                minDecimals = maxDecimals - (optionals || 0),\n                boundedPrecision,\n                optionalsRegExp,\n                power,\n                output;\n\n            // Use the smallest precision value possible to avoid errors from floating point representation\n            if (splitValue.length === 2) {\n              boundedPrecision = Math.min(Math.max(splitValue[1].length, minDecimals), maxDecimals);\n            } else {\n              boundedPrecision = minDecimals;\n            }\n\n            power = Math.pow(10, boundedPrecision);\n\n            // Multiply up by precision, round accurately, then divide and use native toFixed():\n            output = (roundingFunction(value + 'e+' + boundedPrecision) / power).toFixed(boundedPrecision);\n\n            if (optionals > maxDecimals - boundedPrecision) {\n                optionalsRegExp = new RegExp('\\\\.?0{1,' + (optionals - (maxDecimals - boundedPrecision)) + '}$');\n                output = output.replace(optionalsRegExp, '');\n            }\n\n            return output;\n        }\n    };\n\n    // avaliable options\n    numeral.options = options;\n\n    // avaliable formats\n    numeral.formats = formats;\n\n    // avaliable formats\n    numeral.locales = locales;\n\n    // This function sets the current locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    numeral.locale = function(key) {\n        if (key) {\n            options.currentLocale = key.toLowerCase();\n        }\n\n        return options.currentLocale;\n    };\n\n    // This function provides access to the loaded locale data.  If\n    // no arguments are passed in, it will simply return the current\n    // global locale object.\n    numeral.localeData = function(key) {\n        if (!key) {\n            return locales[options.currentLocale];\n        }\n\n        key = key.toLowerCase();\n\n        if (!locales[key]) {\n            throw new Error('Unknown locale : ' + key);\n        }\n\n        return locales[key];\n    };\n\n    numeral.reset = function() {\n        for (var property in defaults) {\n            options[property] = defaults[property];\n        }\n    };\n\n    numeral.zeroFormat = function(format) {\n        options.zeroFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.nullFormat = function (format) {\n        options.nullFormat = typeof(format) === 'string' ? format : null;\n    };\n\n    numeral.defaultFormat = function(format) {\n        options.defaultFormat = typeof(format) === 'string' ? format : '0.0';\n    };\n\n    numeral.register = function(type, name, format) {\n        name = name.toLowerCase();\n\n        if (this[type + 's'][name]) {\n            throw new TypeError(name + ' ' + type + ' already registered.');\n        }\n\n        this[type + 's'][name] = format;\n\n        return format;\n    };\n\n\n    numeral.validate = function(val, culture) {\n        var _decimalSep,\n            _thousandSep,\n            _currSymbol,\n            _valArray,\n            _abbrObj,\n            _thousandRegEx,\n            localeData,\n            temp;\n\n        //coerce val to string\n        if (typeof val !== 'string') {\n            val += '';\n\n            if (console.warn) {\n                console.warn('Numeral.js: Value is not string. It has been co-erced to: ', val);\n            }\n        }\n\n        //trim whitespaces from either sides\n        val = val.trim();\n\n        //if val is just digits return true\n        if (!!val.match(/^\\d+$/)) {\n            return true;\n        }\n\n        //if val is empty return false\n        if (val === '') {\n            return false;\n        }\n\n        //get the decimal and thousands separator from numeral.localeData\n        try {\n            //check if the culture is understood by numeral. if not, default it to current locale\n            localeData = numeral.localeData(culture);\n        } catch (e) {\n            localeData = numeral.localeData(numeral.locale());\n        }\n\n        //setup the delimiters and currency symbol based on culture/locale\n        _currSymbol = localeData.currency.symbol;\n        _abbrObj = localeData.abbreviations;\n        _decimalSep = localeData.delimiters.decimal;\n        if (localeData.delimiters.thousands === '.') {\n            _thousandSep = '\\\\.';\n        } else {\n            _thousandSep = localeData.delimiters.thousands;\n        }\n\n        // validating currency symbol\n        temp = val.match(/^[^\\d]+/);\n        if (temp !== null) {\n            val = val.substr(1);\n            if (temp[0] !== _currSymbol) {\n                return false;\n            }\n        }\n\n        //validating abbreviation symbol\n        temp = val.match(/[^\\d]+$/);\n        if (temp !== null) {\n            val = val.slice(0, -1);\n            if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n                return false;\n            }\n        }\n\n        _thousandRegEx = new RegExp(_thousandSep + '{2}');\n\n        if (!val.match(/[^\\d.,]/g)) {\n            _valArray = val.split(_decimalSep);\n            if (_valArray.length > 2) {\n                return false;\n            } else {\n                if (_valArray.length < 2) {\n                    return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n                } else {\n                    if (_valArray[0].length === 1) {\n                        return ( !! _valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    } else {\n                        return ( !! _valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !! _valArray[1].match(/^\\d+$/));\n                    }\n                }\n            }\n        }\n\n        return false;\n    };\n\n\n    /************************************\n        Numeral Prototype\n    ************************************/\n\n    numeral.fn = Numeral.prototype = {\n        clone: function() {\n            return numeral(this);\n        },\n        format: function(inputString, roundingFunction) {\n            var value = this._value,\n                format = inputString || options.defaultFormat,\n                kind,\n                output,\n                formatFunction;\n\n            // make sure we have a roundingFunction\n            roundingFunction = roundingFunction || Math.round;\n\n            // format based on value\n            if (value === 0 && options.zeroFormat !== null) {\n                output = options.zeroFormat;\n            } else if (value === null && options.nullFormat !== null) {\n                output = options.nullFormat;\n            } else {\n                for (kind in formats) {\n                    if (format.match(formats[kind].regexps.format)) {\n                        formatFunction = formats[kind].format;\n\n                        break;\n                    }\n                }\n\n                formatFunction = formatFunction || numeral._.numberToFormat;\n\n                output = formatFunction(value, format, roundingFunction);\n            }\n\n            return output;\n        },\n        value: function() {\n            return this._value;\n        },\n        input: function() {\n            return this._input;\n        },\n        set: function(value) {\n            this._value = Number(value);\n\n            return this;\n        },\n        add: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum + Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 0) / corrFactor;\n\n            return this;\n        },\n        subtract: function(value) {\n            var corrFactor = _.correctionFactor.call(null, this._value, value);\n\n            function cback(accum, curr, currI, O) {\n                return accum - Math.round(corrFactor * curr);\n            }\n\n            this._value = _.reduce([value], cback, Math.round(this._value * corrFactor)) / corrFactor;\n\n            return this;\n        },\n        multiply: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) * Math.round(curr * corrFactor) / Math.round(corrFactor * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback, 1);\n\n            return this;\n        },\n        divide: function(value) {\n            function cback(accum, curr, currI, O) {\n                var corrFactor = _.correctionFactor(accum, curr);\n                return Math.round(accum * corrFactor) / Math.round(curr * corrFactor);\n            }\n\n            this._value = _.reduce([this._value, value], cback);\n\n            return this;\n        },\n        difference: function(value) {\n            return Math.abs(numeral(this._value).subtract(value).value());\n        }\n    };\n\n    /************************************\n        Default Locale && Format\n    ************************************/\n\n    numeral.register('locale', 'en', {\n        delimiters: {\n            thousands: ',',\n            decimal: '.'\n        },\n        abbreviations: {\n            thousand: 'k',\n            million: 'm',\n            billion: 'b',\n            trillion: 't'\n        },\n        ordinal: function(number) {\n            var b = number % 10;\n            return (~~(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n        },\n        currency: {\n            symbol: '$'\n        }\n    });\n\n    \n\n(function() {\n        numeral.register('format', 'bps', {\n            regexps: {\n                format: /(BPS)/,\n                unformat: /(BPS)/\n            },\n            format: function(value, format, roundingFunction) {\n                var space = numeral._.includes(format, ' BPS') ? ' ' : '',\n                    output;\n\n                value = value * 10000;\n\n                // check for space before BPS\n                format = format.replace(/\\s?BPS/, '');\n\n                output = numeral._.numberToFormat(value, format, roundingFunction);\n\n                if (numeral._.includes(output, ')')) {\n                    output = output.split('');\n\n                    output.splice(-1, 0, space + 'BPS');\n\n                    output = output.join('');\n                } else {\n                    output = output + space + 'BPS';\n                }\n\n                return output;\n            },\n            unformat: function(string) {\n                return +(numeral._.stringToNumber(string) * 0.0001).toFixed(15);\n            }\n        });\n})();\n\n\n(function() {\n        var decimal = {\n            base: 1000,\n            suffixes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n        },\n        binary = {\n            base: 1024,\n            suffixes: ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB']\n        };\n\n    var allSuffixes =  decimal.suffixes.concat(binary.suffixes.filter(function (item) {\n            return decimal.suffixes.indexOf(item) < 0;\n        }));\n        var unformatRegex = allSuffixes.join('|');\n        // Allow support for BPS (http://www.investopedia.com/terms/b/basispoint.asp)\n        unformatRegex = '(' + unformatRegex.replace('B', 'B(?!PS)') + ')';\n\n    numeral.register('format', 'bytes', {\n        regexps: {\n            format: /([0\\s]i?b)/,\n            unformat: new RegExp(unformatRegex)\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                bytes = numeral._.includes(format, 'ib') ? binary : decimal,\n                suffix = numeral._.includes(format, ' b') || numeral._.includes(format, ' ib') ? ' ' : '',\n                power,\n                min,\n                max;\n\n            // check for space before\n            format = format.replace(/\\s?i?b/, '');\n\n            for (power = 0; power <= bytes.suffixes.length; power++) {\n                min = Math.pow(bytes.base, power);\n                max = Math.pow(bytes.base, power + 1);\n\n                if (value === null || value === 0 || value >= min && value < max) {\n                    suffix += bytes.suffixes[power];\n\n                    if (min > 0) {\n                        value = value / min;\n                    }\n\n                    break;\n                }\n            }\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + suffix;\n        },\n        unformat: function(string) {\n            var value = numeral._.stringToNumber(string),\n                power,\n                bytesMultiplier;\n\n            if (value) {\n                for (power = decimal.suffixes.length - 1; power >= 0; power--) {\n                    if (numeral._.includes(string, decimal.suffixes[power])) {\n                        bytesMultiplier = Math.pow(decimal.base, power);\n\n                        break;\n                    }\n\n                    if (numeral._.includes(string, binary.suffixes[power])) {\n                        bytesMultiplier = Math.pow(binary.base, power);\n\n                        break;\n                    }\n                }\n\n                value *= (bytesMultiplier || 1);\n            }\n\n            return value;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'currency', {\n        regexps: {\n            format: /(\\$)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                symbols = {\n                    before: format.match(/^([\\+|\\-|\\(|\\s|\\$]*)/)[0],\n                    after: format.match(/([\\+|\\-|\\)|\\s|\\$]*)$/)[0]\n                },\n                output,\n                symbol,\n                i;\n\n            // strip format of spaces and $\n            format = format.replace(/\\s?\\$\\s?/, '');\n\n            // format the number\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            // update the before and after based on value\n            if (value >= 0) {\n                symbols.before = symbols.before.replace(/[\\-\\(]/, '');\n                symbols.after = symbols.after.replace(/[\\-\\)]/, '');\n            } else if (value < 0 && (!numeral._.includes(symbols.before, '-') && !numeral._.includes(symbols.before, '('))) {\n                symbols.before = '-' + symbols.before;\n            }\n\n            // loop through each before symbol\n            for (i = 0; i < symbols.before.length; i++) {\n                symbol = symbols.before[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = numeral._.insert(output, locale.currency.symbol, i);\n                        break;\n                    case ' ':\n                        output = numeral._.insert(output, ' ', i + locale.currency.symbol.length - 1);\n                        break;\n                }\n            }\n\n            // loop through each after symbol\n            for (i = symbols.after.length - 1; i >= 0; i--) {\n                symbol = symbols.after[i];\n\n                switch (symbol) {\n                    case '$':\n                        output = i === symbols.after.length - 1 ? output + locale.currency.symbol : numeral._.insert(output, locale.currency.symbol, -(symbols.after.length - (1 + i)));\n                        break;\n                    case ' ':\n                        output = i === symbols.after.length - 1 ? output + ' ' : numeral._.insert(output, ' ', -(symbols.after.length - (1 + i) + locale.currency.symbol.length - 1));\n                        break;\n                }\n            }\n\n\n            return output;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'exponential', {\n        regexps: {\n            format: /(e\\+|e-)/,\n            unformat: /(e\\+|e-)/\n        },\n        format: function(value, format, roundingFunction) {\n            var output,\n                exponential = typeof value === 'number' && !numeral._.isNaN(value) ? value.toExponential() : '0e+0',\n                parts = exponential.split('e');\n\n            format = format.replace(/e[\\+|\\-]{1}0/, '');\n\n            output = numeral._.numberToFormat(Number(parts[0]), format, roundingFunction);\n\n            return output + 'e' + parts[1];\n        },\n        unformat: function(string) {\n            var parts = numeral._.includes(string, 'e+') ? string.split('e+') : string.split('e-'),\n                value = Number(parts[0]),\n                power = Number(parts[1]);\n\n            power = numeral._.includes(string, 'e-') ? power *= -1 : power;\n\n            function cback(accum, curr, currI, O) {\n                var corrFactor = numeral._.correctionFactor(accum, curr),\n                    num = (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n                return num;\n            }\n\n            return numeral._.reduce([value, Math.pow(10, power)], cback, 1);\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'ordinal', {\n        regexps: {\n            format: /(o)/\n        },\n        format: function(value, format, roundingFunction) {\n            var locale = numeral.locales[numeral.options.currentLocale],\n                output,\n                ordinal = numeral._.includes(format, ' o') ? ' ' : '';\n\n            // check for space before\n            format = format.replace(/\\s?o/, '');\n\n            ordinal += locale.ordinal(value);\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            return output + ordinal;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'percentage', {\n        regexps: {\n            format: /(%)/,\n            unformat: /(%)/\n        },\n        format: function(value, format, roundingFunction) {\n            var space = numeral._.includes(format, ' %') ? ' ' : '',\n                output;\n\n            if (numeral.options.scalePercentBy100) {\n                value = value * 100;\n            }\n\n            // check for space before %\n            format = format.replace(/\\s?\\%/, '');\n\n            output = numeral._.numberToFormat(value, format, roundingFunction);\n\n            if (numeral._.includes(output, ')')) {\n                output = output.split('');\n\n                output.splice(-1, 0, space + '%');\n\n                output = output.join('');\n            } else {\n                output = output + space + '%';\n            }\n\n            return output;\n        },\n        unformat: function(string) {\n            var number = numeral._.stringToNumber(string);\n            if (numeral.options.scalePercentBy100) {\n                return number * 0.01;\n            }\n            return number;\n        }\n    });\n})();\n\n\n(function() {\n        numeral.register('format', 'time', {\n        regexps: {\n            format: /(:)/,\n            unformat: /(:)/\n        },\n        format: function(value, format, roundingFunction) {\n            var hours = Math.floor(value / 60 / 60),\n                minutes = Math.floor((value - (hours * 60 * 60)) / 60),\n                seconds = Math.round(value - (hours * 60 * 60) - (minutes * 60));\n\n            return hours + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        },\n        unformat: function(string) {\n            var timeArray = string.split(':'),\n                seconds = 0;\n\n            // turn hours and minutes into seconds and add them all up\n            if (timeArray.length === 3) {\n                // hours\n                seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n                // minutes\n                seconds = seconds + (Number(timeArray[1]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[2]);\n            } else if (timeArray.length === 2) {\n                // minutes\n                seconds = seconds + (Number(timeArray[0]) * 60);\n                // seconds\n                seconds = seconds + Number(timeArray[1]);\n            }\n            return Number(seconds);\n        }\n    });\n})();\n\nreturn numeral;\n}));\n"],"sourceRoot":"webpack:///","file":"929.fd236eddac2ffe0e.js"}