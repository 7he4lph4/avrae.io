{"version":3,"file":"common.6750bf99843f770a.js","mappings":"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","names":["p","v","constructor","t","this","createCollection","i","n","http","post","name","description","image","pipe","e","getCollection","get","getCollectionFull","getCollectionsBatched","params","c","join","deleteCollection","delete","editCollection","l","patch","editCollectionState","state","addCollectionEditor","put","removeCollectionEditor","getCollectionEditors","addCollectionTag","tag","removeCollectionTag","body","createAlias","docs","createSubalias","getAlias","editAlias","deleteAlias","getAliasCodeVersions","skip","limit","createAliasCodeVersion","content","setActiveAliasCodeVersion","version","addAliasEntitlement","entity_type","entitlement_entity_type","entity_id","entitlement_entity_id","removeAliasEntitlement","createSnippet","getSnippet","editSnippet","deleteSnippet","getSnippetCodeVersions","createSnippetCodeVersion","setActiveSnippetCodeVersion","addSnippetEntitlement","removeSnippetEntitlement","personalSubscribe","alias_bindings","snippet_bindings","success","personalSubscribedIds","push","personalUnsubscribe","splice","indexOf","getMySubscription","guildSubscribe","guildUnsubscribe","getGuildSubscription","getMySubscriptions","data","getGuildSubscriptions","loadPersonalSubscribedIds","personalSubscribedIdsInflight","subscribe","getWorkshopExplore","a","fromObject","order","page","toString","length","append","getTags","tags","getOwnedCollectionIds","getEditableCollectionIds","getGuildPermissionCheck","g","r","$","factory","h","PRIVATE"],"sourceRoot":"webpack:///","sources":["./src/app/dashboard/workshop/workshop.service.ts","./src/app/schemas/Workshop.ts"],"sourcesContent":["import {HttpClient, HttpParams} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, share} from 'rxjs/operators';\nimport {environment} from '../../../environments/environment';\nimport {DiscordUser} from '../../schemas/Discord';\nimport {DDBEntity} from '../../schemas/GameData';\nimport {\n  CodeVersion,\n  PublicationState,\n  WorkshopAlias,\n  WorkshopAliasFull,\n  WorkshopBindings,\n  WorkshopCollection,\n  WorkshopCollectionFull,\n  WorkshopEntitlement,\n  WorkshopSnippet,\n  WorkshopSubscription,\n  WorkshopTag\n} from '../../schemas/Workshop';\nimport {ApiResponse, defaultErrorHandler, defaultOptions} from '../APIHelper';\n\nconst baseUrl = `${environment.apiURL}/workshop`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkshopService {\n\n  // cached stuff\n  tags: Observable<ApiResponse<WorkshopTag[]>>;\n  personalSubscribedIds: string[];\n  personalSubscribedIdsInflight = false;\n\n  constructor(private http: HttpClient) {\n  }\n\n  // ==== collection operations ====\n  createCollection(name: string, description: string, imageUrl: string | null): Observable<ApiResponse<WorkshopCollection>> {\n    return this.http.post<ApiResponse<WorkshopCollection>>(`${baseUrl}/collection`,\n      {name: name, description: description, image: imageUrl},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getCollection(id: string): Observable<ApiResponse<WorkshopCollection>> {\n    // gets a collection without auth\n    return this.http.get<ApiResponse<WorkshopCollection>>(`${baseUrl}/collection/${id}`)\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getCollectionFull(id: string): Observable<ApiResponse<WorkshopCollectionFull>> {\n    return this.http.get<ApiResponse<WorkshopCollectionFull>>(`${baseUrl}/collection/${id}/full`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getCollectionsBatched(ids: string[]): Observable<ApiResponse<WorkshopCollection[]>> {\n    return this.http.get<ApiResponse<WorkshopCollection[]>>(`${baseUrl}/collection/batch`,\n      defaultOptions({params: {c: ids.join(',')}}))\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  deleteCollection(collId: string): Observable<ApiResponse<string>> {\n    return this.http.delete<ApiResponse<string>>(`${baseUrl}/collection/${collId}`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  editCollection(collId: string, name: string, description: string, imageUrl: string | null): Observable<ApiResponse<WorkshopCollection>> {\n    return this.http.patch<ApiResponse<WorkshopCollection>>(`${baseUrl}/collection/${collId}`,\n      {name, description, image: imageUrl},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  editCollectionState(collId: string, state: PublicationState): Observable<ApiResponse<WorkshopCollection>> {\n    return this.http.patch<ApiResponse<WorkshopCollection>>(`${baseUrl}/collection/${collId}/state`,\n      {state},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  addCollectionEditor(collId: string, editorId: string): Observable<ApiResponse<DiscordUser[]>> {\n    return this.http.put<ApiResponse<DiscordUser[]>>(`${baseUrl}/collection/${collId}/editor/${editorId}`,\n      null,\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  removeCollectionEditor(collId: string, editorId: string): Observable<ApiResponse<DiscordUser[]>> {\n    return this.http.delete<ApiResponse<DiscordUser[]>>(`${baseUrl}/collection/${collId}/editor/${editorId}`,\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getCollectionEditors(id: string): Observable<ApiResponse<DiscordUser[]>> {\n    return this.http.get<ApiResponse<DiscordUser[]>>(`${baseUrl}/collection/${id}/editors`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  addCollectionTag(collId: string, tag: string): Observable<ApiResponse<string[]>> {\n    return this.http.post<ApiResponse<string[]>>(`${baseUrl}/collection/${collId}/tag`,\n      {tag},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  removeCollectionTag(collId: string, tag: string): Observable<ApiResponse<string[]>> {\n    return this.http.delete<ApiResponse<string[]>>(`${baseUrl}/collection/${collId}/tag`,\n      defaultOptions({body: {tag}}))\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  // ==== alias operations ====\n  createAlias(collId: string, name: string, docs: string): Observable<ApiResponse<WorkshopAliasFull>> {\n    return this.http.post<ApiResponse<WorkshopAliasFull>>(`${baseUrl}/collection/${collId}/alias`,\n      {name, docs},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  createSubalias(parentId: string, name: string, docs: string): Observable<ApiResponse<WorkshopAliasFull>> {\n    return this.http.post<ApiResponse<WorkshopAliasFull>>(`${baseUrl}/alias/${parentId}/alias`,\n      {name, docs},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getAlias(id: string): Observable<ApiResponse<WorkshopAlias>> {\n    return this.http.get<ApiResponse<WorkshopAlias>>(`${baseUrl}/alias/${id}`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  editAlias(aliasId: string, name: string, docs: string): Observable<ApiResponse<WorkshopAlias>> {\n    return this.http.patch<ApiResponse<WorkshopAlias>>(`${baseUrl}/alias/${aliasId}`,\n      {name, docs},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  deleteAlias(aliasId: string): Observable<ApiResponse<string>> {\n    return this.http.delete<ApiResponse<string>>(`${baseUrl}/alias/${aliasId}`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getAliasCodeVersions(aliasId: string, skip: number = 0, limit: number = 25): Observable<ApiResponse<CodeVersion[]>> {\n    return this.http.get<ApiResponse<CodeVersion[]>>(`${baseUrl}/alias/${aliasId}/code`,\n      defaultOptions({params: {skip, limit}}))\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  createAliasCodeVersion(aliasId: string, content: string): Observable<ApiResponse<CodeVersion>> {\n    return this.http.post<ApiResponse<CodeVersion>>(`${baseUrl}/alias/${aliasId}/code`,\n      {content},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  setActiveAliasCodeVersion(aliasId: string, codeVersionVersion: number): Observable<ApiResponse<WorkshopAlias>> {\n    return this.http.put<ApiResponse<WorkshopAlias>>(`${baseUrl}/alias/${aliasId}/active-code`,\n      {version: codeVersionVersion},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  addAliasEntitlement(aliasId: string, entity: DDBEntity): Observable<ApiResponse<WorkshopEntitlement[]>> {\n    return this.http.post<ApiResponse<WorkshopEntitlement[]>>(`${baseUrl}/alias/${aliasId}/entitlement`,\n      {entity_type: entity.entitlement_entity_type, entity_id: entity.entitlement_entity_id},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  removeAliasEntitlement(aliasId: string, entitlement: WorkshopEntitlement): Observable<ApiResponse<WorkshopEntitlement[]>> {\n    return this.http.delete<ApiResponse<WorkshopEntitlement[]>>(`${baseUrl}/alias/${aliasId}/entitlement`,\n      defaultOptions({\n        body: {entity_type: entitlement.entity_type, entity_id: entitlement.entity_id}\n      }))\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  // ==== snippet operations ====\n  createSnippet(collId: string, name: string, docs: string): Observable<ApiResponse<WorkshopSnippet>> {\n    return this.http.post<ApiResponse<WorkshopSnippet>>(`${baseUrl}/collection/${collId}/snippet`,\n      {name, docs},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getSnippet(id: string): Observable<ApiResponse<WorkshopSnippet>> {\n    return this.http.get<ApiResponse<WorkshopSnippet>>(`${baseUrl}/snippet/${id}`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  editSnippet(snippetId: string, name: string, docs: string): Observable<ApiResponse<WorkshopSnippet>> {\n    return this.http.patch<ApiResponse<WorkshopSnippet>>(`${baseUrl}/snippet/${snippetId}`,\n      {name, docs},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  deleteSnippet(snippetId: string): Observable<ApiResponse<string>> {\n    return this.http.delete<ApiResponse<string>>(`${baseUrl}/snippet/${snippetId}`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getSnippetCodeVersions(snippetId: string, skip: number = 0, limit: number = 25): Observable<ApiResponse<CodeVersion[]>> {\n    return this.http.get<ApiResponse<CodeVersion[]>>(`${baseUrl}/snippet/${snippetId}/code`,\n      defaultOptions({params: {skip, limit}}))\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  createSnippetCodeVersion(snippetId: string, content: string): Observable<ApiResponse<CodeVersion>> {\n    return this.http.post<ApiResponse<CodeVersion>>(`${baseUrl}/snippet/${snippetId}/code`,\n      {content},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  setActiveSnippetCodeVersion(snippetId: string, codeVersionVersion: number): Observable<ApiResponse<WorkshopSnippet>> {\n    return this.http.put<ApiResponse<WorkshopSnippet>>(`${baseUrl}/snippet/${snippetId}/active-code`,\n      {version: codeVersionVersion},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  addSnippetEntitlement(snippetId: string, entity: DDBEntity): Observable<ApiResponse<WorkshopEntitlement[]>> {\n    return this.http.post<ApiResponse<WorkshopEntitlement[]>>(`${baseUrl}/snippet/${snippetId}/entitlement`,\n      {entity_type: entity.entitlement_entity_type, entity_id: entity.entitlement_entity_id},\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  removeSnippetEntitlement(snippetId: string, entitlement: WorkshopEntitlement): Observable<ApiResponse<WorkshopEntitlement[]>> {\n    return this.http.delete<ApiResponse<WorkshopEntitlement[]>>(`${baseUrl}/snippet/${snippetId}/entitlement`,\n      defaultOptions({\n        body: {entity_type: entitlement.entity_type, entity_id: entitlement.entity_id}\n      }))\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  // ==== subscription operations ====\n  // ---- api endpoints ----\n  personalSubscribe(id: string, bindings: WorkshopBindings = null): Observable<ApiResponse<SubscriptionResponse>> {\n    let body;\n    if (bindings === null) {\n      body = {alias_bindings: null, snippet_bindings: null};\n    } else {\n      body = bindings;\n    }\n    return this.http.put<ApiResponse<SubscriptionResponse>>(`${baseUrl}/collection/${id}/subscription/me`,\n      body,\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler))\n      .pipe(map(resp => {\n        if (resp.success && this.personalSubscribedIds !== undefined) {\n          this.personalSubscribedIds.push(id);\n        }\n        return resp;\n      }));\n  }\n\n  personalUnsubscribe(id: string): Observable<ApiResponse<string>> {\n    return this.http.delete<ApiResponse<string>>(`${baseUrl}/collection/${id}/subscription/me`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler))\n      .pipe(map(resp => {\n        if (resp.success && this.personalSubscribedIds !== undefined) {\n          this.personalSubscribedIds.splice(this.personalSubscribedIds.indexOf(id), 1);\n        }\n        return resp;\n      }));\n  }\n\n  getMySubscription(id: string): Observable<ApiResponse<WorkshopSubscription>> {\n    return this.http.get<ApiResponse<WorkshopSubscription>>(`${baseUrl}/collection/${id}/subscription/me`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  guildSubscribe(id: string, guildId: string, bindings: WorkshopBindings = null): Observable<ApiResponse<SubscriptionResponse>> {\n    let body;\n    if (bindings === null) {\n      body = {alias_bindings: null, snippet_bindings: null};\n    } else {\n      body = bindings;\n    }\n    return this.http.put<ApiResponse<SubscriptionResponse>>(`${baseUrl}/collection/${id}/subscription/${guildId}`,\n      body,\n      defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  guildUnsubscribe(id: string, guildId: string): Observable<ApiResponse<string>> {\n    return this.http.delete<ApiResponse<string>>(`${baseUrl}/collection/${id}/subscription/${guildId}`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getGuildSubscription(id: string, guildId: string): Observable<ApiResponse<WorkshopSubscription>> {\n    return this.http.get<ApiResponse<WorkshopSubscription>>(`${baseUrl}/collection/${id}/subscription/${guildId}`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getMySubscriptions(): Observable<ApiResponse<string[]>> {\n    return this.http.get<ApiResponse<string[]>>(`${baseUrl}/subscribed/me`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler))\n      .pipe(map(resp => {\n        if (resp.success) {\n          this.personalSubscribedIds = resp.data;\n        }\n        return resp;\n      }));\n  }\n\n  getGuildSubscriptions(id: string): Observable<ApiResponse<string[]>> {\n    return this.http.get<ApiResponse<string[]>>(`${baseUrl}/subscribed/${id}`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  // ---- helpers ----\n  loadPersonalSubscribedIds() {\n    if (this.personalSubscribedIds !== undefined || this.personalSubscribedIdsInflight) {\n      return;\n    } else {\n      this.personalSubscribedIdsInflight = true;\n      this.getMySubscriptions().subscribe();  // the map should populate this\n    }\n  }\n\n  // ==== other ====\n  getWorkshopExplore(order: string = 'popular-1w', tags: string[] = null,\n                     q: string = null, page: number = 1): Observable<ApiResponse<string[]>> {\n    let exploreParams = new HttpParams({fromObject: {order, page: page.toString()}});\n    if (tags && tags.length) {\n      exploreParams = exploreParams.append('tags', tags.join(','));\n    }\n    if (q) {\n      exploreParams = exploreParams.append('q', q);\n    }\n    return this.http.get<ApiResponse<string[]>>(`${baseUrl}/explore`, defaultOptions({params: exploreParams}))\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getTags(): Observable<ApiResponse<WorkshopTag[]>> {  // cached since multiple components might want to get tags at once\n    if (this.tags) {\n      return this.tags;\n    }\n    const req = this.http.get<ApiResponse<WorkshopTag[]>>(`${baseUrl}/tags`, defaultOptions())\n      .pipe(share())\n      .pipe(catchError(defaultErrorHandler));\n    this.tags = req;\n    req.subscribe(result => this.tags = of(result));\n    return req;\n  }\n\n  getOwnedCollectionIds(): Observable<ApiResponse<string[]>> {\n    return this.http.get<ApiResponse<string[]>>(`${baseUrl}/owned`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getEditableCollectionIds(): Observable<ApiResponse<string[]>> {\n    return this.http.get<ApiResponse<string[]>>(`${baseUrl}/editable`, defaultOptions())\n      .pipe(catchError(defaultErrorHandler));\n  }\n\n  getGuildPermissionCheck(id: string): Observable<ApiResponse<{ can_edit: boolean, message: string | null }>> {\n    return this.http.get<ApiResponse<{ can_edit: boolean, message: string | null }>>(`${baseUrl}/guild-check`,\n      defaultOptions({params: {g: id}}))\n      .pipe(catchError(defaultErrorHandler));\n  }\n}\n\n\nexport class SubscriptionResponse extends WorkshopBindings {\n  new_subscription: boolean;\n}\n","export enum PublicationState {\n  PRIVATE = 'PRIVATE',\n  UNLISTED = 'UNLISTED',\n  PUBLISHED = 'PUBLISHED'\n}\n\nexport class WorkshopCollection {\n  _id: string;\n  name: string;\n  description: string;\n  image: string | null;\n  owner: string;\n  alias_ids: string[];\n  snippet_ids: string[];\n  publish_state: PublicationState;\n  num_subscribers: number;\n  num_guild_subscribers: number;\n  last_edited: string; // ISO8601 date\n  created_at: string; // ISO8601 date\n  tags: string[];\n}\n\nexport class WorkshopCollectionFull extends WorkshopCollection {\n  aliases: WorkshopAliasFull[];\n  snippets: WorkshopSnippet[];\n}\n\nexport abstract class WorkshopCollectable {\n  _id: string;\n  name: string;\n  code: string;\n  versions: CodeVersion[];\n  docs: string;\n  entitlements: WorkshopEntitlement[];\n  collection_id: string;\n}\n\nexport class WorkshopAlias extends WorkshopCollectable {\n  subcommand_ids: string[];\n  parent_id: string | null;\n}\n\nexport class WorkshopAliasFull extends WorkshopAlias {\n  subcommands: WorkshopAliasFull[];\n}\n\n// no extra fields, just not abstract\nexport class WorkshopSnippet extends WorkshopCollectable {\n}\n\nexport class WorkshopTag {\n  slug: string;\n  name: string;\n  category: string;\n}\n\nexport class WorkshopBindings {\n  alias_bindings: { name: string, id: string }[];\n  snippet_bindings: { name: string, id: string }[];\n}\n\nexport class WorkshopSubscription extends WorkshopBindings {\n  _id: string;\n  object_id: string;\n  subscriber_id: number;\n  type: string;\n}\n\nexport class CodeVersion {\n  version: number;\n  content: string;\n  created_at: string; // ISO8601\n  is_current: boolean;\n}\n\nexport class WorkshopEntitlement {\n  entity_type: string;\n  entity_id: number;\n  required: boolean;\n}\n\n// helper enums, not exposed in api\nexport enum CollectableType {\n  ALIAS = 'ALIAS',\n  SNIPPET = 'SNIPPET',\n  SUBALIAS = 'SUBALIAS',\n  SUBCOMMAND = SUBALIAS\n}\n"]}