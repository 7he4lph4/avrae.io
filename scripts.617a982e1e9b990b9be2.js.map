{"version":3,"sources":["node_modules/marked/lib/marked.js"],"names":["global","factory","exports","module","define","amd","self","marked","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","defaults","fn","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","xhtml","getDefaults","changeDefaults","newDefaults","createCommonjsModule","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape","html","replace","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","protocol","domain","rtrim","str","c","invert","l","suffLen","currChar","substr","helpers","encode","test","obj","arguments","hasOwnProperty","call","noopTest$1","exec","edit$1","regex","opt","source","name","val","getRegex","RegExp","merge$1","block","newline","code","fences","hr","heading","blockquote","list","def","nptable","table","lheading","_paragraph","text","_label","_title","bullet","item","_tag","_comment","paragraph","normal","inline","escape","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","rules","defaults$1","block$1","rtrim$1","splitCells$1","tableRow","count","cells","match","offset","escaped","curr","split","splice","push","trim","escape$1","Lexer_1","Lexer","options","tokens","links","create","lex","src","_proto","token","top","next","loose","cap","bull","b","listStart","listItems","t","space","isordered","istask","ischecked","type","lastToken","trimRight","codeBlockStyle","lang","depth","header","align","ordered","start","indexOf","slice","join","undefined","task","checked","pre","href","title","Error","charCodeAt","get","defaults$2","cleanUrl$1","base","prot","decodeURIComponent","e","relativeBase","resolveUrl","encodeURI","escape$2","Renderer_1","Renderer","_code","infostring","out","quote","_html","level","raw","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","codespan","image","_text","Slugger_1","Slugger","seen","value","originalSlug","defaults$3","inline$1","findClosingBracket$1","escape$3","InlineLexer_1","InlineLexer","output","prevCapZero","inLink","inRawBlock","lastParenIndex","linkLen","outputLink","escapes","Math","random","toString","TextRenderer_1","TextRenderer","defaults$4","merge$2","unescape$1","Parser_1","Parser","parse","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","nextToken","errMsg","console","log","merge$3","checkSanitizeDeprecation$1","warn","escape$4","defaults$5","callback","_ret","pending","v","done","err","message","setOptions","parser","lexer","inlineLexer"],"mappings":"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","file":"scripts.617a982e1e9b990b9be2.js","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2019, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n  var defaults_1 = defaults.defaults;\n  var defaults_2 = defaults.getDefaults;\n  var defaults_3 = defaults.changeDefaults;\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation\n  };\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^\\n+/,\n    code: /^( {4}[^\\n]+\\n*)+/,\n    fences: /^ {0,3}(`{3,}|~{3,})([^`~\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} +').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}|~{3,})[^`\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n    table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n  });\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n    em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n  }; // list of punctuation marks from common mark spec\n  // without ` and ] to workaround Rule 17 (inline code blocks/links)\n\n  inline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\n  inline.em = edit$1(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', block._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n    text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n\n  var defaults$1 = defaults.defaults;\n  var block$1 = rules.block;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      escape$1 = helpers.escape;\n  /**\n   * Block Lexer\n   */\n\n  var Lexer_1 =\n  /*#__PURE__*/\n  function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$1;\n      this.rules = block$1.normal;\n\n      if (this.options.pedantic) {\n        this.rules = block$1.pedantic;\n      } else if (this.options.gfm) {\n        this.rules = block$1.gfm;\n      }\n    }\n    /**\n     * Expose Block Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    };\n\n    var _proto = Lexer.prototype;\n\n    /**\n     * Preprocessing\n     */\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      return this.token(src, true);\n    };\n\n    /**\n     * Lexing\n     */\n    _proto.token = function token(src, top) {\n      src = src.replace(/^ +$/gm, '');\n      var next, loose, cap, bull, b, item, listStart, listItems, t, space, i, tag, l, isordered, istask, ischecked;\n\n      while (src) {\n        // newline\n        if (cap = this.rules.newline.exec(src)) {\n          src = src.substring(cap[0].length);\n\n          if (cap[0].length > 1) {\n            this.tokens.push({\n              type: 'space'\n            });\n          }\n        } // code\n\n\n        if (cap = this.rules.code.exec(src)) {\n          var lastToken = this.tokens[this.tokens.length - 1];\n          src = src.substring(cap[0].length); // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.text += '\\n' + cap[0].trimRight();\n          } else {\n            cap = cap[0].replace(/^ {4}/gm, '');\n            this.tokens.push({\n              type: 'code',\n              codeBlockStyle: 'indented',\n              text: !this.options.pedantic ? rtrim$1(cap, '\\n') : cap\n            });\n          }\n\n          continue;\n        } // fences\n\n\n        if (cap = this.rules.fences.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'code',\n            lang: cap[2] ? cap[2].trim() : cap[2],\n            text: cap[3] || ''\n          });\n          continue;\n        } // heading\n\n\n        if (cap = this.rules.heading.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'heading',\n            depth: cap[1].length,\n            text: cap[2]\n          });\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (cap = this.rules.nptable.exec(src)) {\n          item = {\n            type: 'table',\n            header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n            align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n            cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n          };\n\n          if (item.header.length === item.align.length) {\n            src = src.substring(cap[0].length);\n\n            for (i = 0; i < item.align.length; i++) {\n              if (/^ *-+: *$/.test(item.align[i])) {\n                item.align[i] = 'right';\n              } else if (/^ *:-+: *$/.test(item.align[i])) {\n                item.align[i] = 'center';\n              } else if (/^ *:-+ *$/.test(item.align[i])) {\n                item.align[i] = 'left';\n              } else {\n                item.align[i] = null;\n              }\n            }\n\n            for (i = 0; i < item.cells.length; i++) {\n              item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n            }\n\n            this.tokens.push(item);\n            continue;\n          }\n        } // hr\n\n\n        if (cap = this.rules.hr.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'hr'\n          });\n          continue;\n        } // blockquote\n\n\n        if (cap = this.rules.blockquote.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'blockquote_start'\n          });\n          cap = cap[0].replace(/^ *> ?/gm, ''); // Pass `top` to keep the current\n          // \"toplevel\" state. This is exactly\n          // how markdown.pl works.\n\n          this.token(cap, top);\n          this.tokens.push({\n            type: 'blockquote_end'\n          });\n          continue;\n        } // list\n\n\n        if (cap = this.rules.list.exec(src)) {\n          src = src.substring(cap[0].length);\n          bull = cap[2];\n          isordered = bull.length > 1;\n          listStart = {\n            type: 'list_start',\n            ordered: isordered,\n            start: isordered ? +bull : '',\n            loose: false\n          };\n          this.tokens.push(listStart); // Get each top-level item.\n\n          cap = cap[0].match(this.rules.item);\n          listItems = [];\n          next = false;\n          l = cap.length;\n          i = 0;\n\n          for (; i < l; i++) {\n            item = cap[i]; // Remove the list item's bullet\n            // so it is seen as the next token.\n\n            space = item.length;\n            item = item.replace(/^ *([*+-]|\\d+\\.) */, ''); // Outdent whatever the\n            // list item contains. Hacky.\n\n            if (~item.indexOf('\\n ')) {\n              space -= item.length;\n              item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n            } // Determine whether the next list item belongs here.\n            // Backpedal if it does not belong in this list.\n\n\n            if (i !== l - 1) {\n              b = block$1.bullet.exec(cap[i + 1])[0];\n\n              if (bull.length > 1 ? b.length === 1 : b.length > 1 || this.options.smartLists && b !== bull) {\n                src = cap.slice(i + 1).join('\\n') + src;\n                i = l - 1;\n              }\n            } // Determine whether item is loose or not.\n            // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n            // for discount behavior.\n\n\n            loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n            if (i !== l - 1) {\n              next = item.charAt(item.length - 1) === '\\n';\n              if (!loose) loose = next;\n            }\n\n            if (loose) {\n              listStart.loose = true;\n            } // Check for task list items\n\n\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n\n            t = {\n              type: 'list_item_start',\n              task: istask,\n              checked: ischecked,\n              loose: loose\n            };\n            listItems.push(t);\n            this.tokens.push(t); // Recurse.\n\n            this.token(item, false);\n            this.tokens.push({\n              type: 'list_item_end'\n            });\n          }\n\n          if (listStart.loose) {\n            l = listItems.length;\n            i = 0;\n\n            for (; i < l; i++) {\n              listItems[i].loose = true;\n            }\n          }\n\n          this.tokens.push({\n            type: 'list_end'\n          });\n          continue;\n        } // html\n\n\n        if (cap = this.rules.html.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: this.options.sanitize ? 'paragraph' : 'html',\n            pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n            text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape$1(cap[0]) : cap[0]\n          });\n          continue;\n        } // def\n\n\n        if (top && (cap = this.rules.def.exec(src))) {\n          src = src.substring(cap[0].length);\n          if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n          tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n\n          if (!this.tokens.links[tag]) {\n            this.tokens.links[tag] = {\n              href: cap[2],\n              title: cap[3]\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (cap = this.rules.table.exec(src)) {\n          item = {\n            type: 'table',\n            header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n            align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n            cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n          };\n\n          if (item.header.length === item.align.length) {\n            src = src.substring(cap[0].length);\n\n            for (i = 0; i < item.align.length; i++) {\n              if (/^ *-+: *$/.test(item.align[i])) {\n                item.align[i] = 'right';\n              } else if (/^ *:-+: *$/.test(item.align[i])) {\n                item.align[i] = 'center';\n              } else if (/^ *:-+ *$/.test(item.align[i])) {\n                item.align[i] = 'left';\n              } else {\n                item.align[i] = null;\n              }\n            }\n\n            for (i = 0; i < item.cells.length; i++) {\n              item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n            }\n\n            this.tokens.push(item);\n            continue;\n          }\n        } // lheading\n\n\n        if (cap = this.rules.lheading.exec(src)) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'heading',\n            depth: cap[2].charAt(0) === '=' ? 1 : 2,\n            text: cap[1]\n          });\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (cap = this.rules.paragraph.exec(src))) {\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'paragraph',\n            text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n          });\n          continue;\n        } // text\n\n\n        if (cap = this.rules.text.exec(src)) {\n          // Top-level should never reach here.\n          src = src.substring(cap[0].length);\n          this.tokens.push({\n            type: 'text',\n            text: cap[0]\n          });\n          continue;\n        }\n\n        if (src) {\n          throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n        }\n      }\n\n      return this.tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return block$1;\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$2 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 =\n  /*#__PURE__*/\n  function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$2(_code, true)) + '</code></pre>';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$2(lang, true) + '\">' + (escaped ? _code : escape$2(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    };\n\n    // span level renderer\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$2(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 =\n  /*#__PURE__*/\n  function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * Convert string to unique id\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.slug = function slug(value) {\n      var slug = value.toLowerCase().trim().replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n\n      if (this.seen.hasOwnProperty(slug)) {\n        var originalSlug = slug;\n\n        do {\n          this.seen[originalSlug]++;\n          slug = originalSlug + '-' + this.seen[originalSlug];\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      this.seen[slug] = 0;\n      return slug;\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var inline$1 = rules.inline;\n  var findClosingBracket$1 = helpers.findClosingBracket,\n      escape$3 = helpers.escape;\n  /**\n   * Inline Lexer & Compiler\n   */\n\n  var InlineLexer_1 =\n  /*#__PURE__*/\n  function () {\n    function InlineLexer(links, options) {\n      this.options = options || defaults$3;\n      this.links = links;\n      this.rules = inline$1.normal;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n\n      if (!this.links) {\n        throw new Error('Tokens array requires a `links` property.');\n      }\n\n      if (this.options.pedantic) {\n        this.rules = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        if (this.options.breaks) {\n          this.rules = inline$1.breaks;\n        } else {\n          this.rules = inline$1.gfm;\n        }\n      }\n    }\n    /**\n     * Expose Inline Rules\n     */\n\n\n    /**\n     * Static Lexing/Compiling Method\n     */\n    InlineLexer.output = function output(src, links, options) {\n      var inline = new InlineLexer(links, options);\n      return inline.output(src);\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    var _proto = InlineLexer.prototype;\n\n    _proto.output = function output(src) {\n      var out = '',\n          link,\n          text,\n          href,\n          title,\n          cap,\n          prevCapZero;\n\n      while (src) {\n        // escape\n        if (cap = this.rules.escape.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += escape$3(cap[1]);\n          continue;\n        } // tag\n\n\n        if (cap = this.rules.tag.exec(src)) {\n          if (!this.inLink && /^<a /i.test(cap[0])) {\n            this.inLink = true;\n          } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n            this.inLink = false;\n          }\n\n          if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n            this.inRawBlock = true;\n          } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n            this.inRawBlock = false;\n          }\n\n          src = src.substring(cap[0].length);\n          out += this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape$3(cap[0]) : cap[0];\n          continue;\n        } // link\n\n\n        if (cap = this.rules.link.exec(src)) {\n          var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n\n          src = src.substring(cap[0].length);\n          this.inLink = true;\n          href = cap[2];\n\n          if (this.options.pedantic) {\n            link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n            if (link) {\n              href = link[1];\n              title = link[3];\n            } else {\n              title = '';\n            }\n          } else {\n            title = cap[3] ? cap[3].slice(1, -1) : '';\n          }\n\n          href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n          out += this.outputLink(cap, {\n            href: InlineLexer.escapes(href),\n            title: InlineLexer.escapes(title)\n          });\n          this.inLink = false;\n          continue;\n        } // reflink, nolink\n\n\n        if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {\n          src = src.substring(cap[0].length);\n          link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n          link = this.links[link.toLowerCase()];\n\n          if (!link || !link.href) {\n            out += cap[0].charAt(0);\n            src = cap[0].substring(1) + src;\n            continue;\n          }\n\n          this.inLink = true;\n          out += this.outputLink(cap, link);\n          this.inLink = false;\n          continue;\n        } // strong\n\n\n        if (cap = this.rules.strong.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n          continue;\n        } // em\n\n\n        if (cap = this.rules.em.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n          continue;\n        } // code\n\n\n        if (cap = this.rules.code.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.codespan(escape$3(cap[2].trim(), true));\n          continue;\n        } // br\n\n\n        if (cap = this.rules.br.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.br();\n          continue;\n        } // del (gfm)\n\n\n        if (cap = this.rules.del.exec(src)) {\n          src = src.substring(cap[0].length);\n          out += this.renderer.del(this.output(cap[1]));\n          continue;\n        } // autolink\n\n\n        if (cap = this.rules.autolink.exec(src)) {\n          src = src.substring(cap[0].length);\n\n          if (cap[2] === '@') {\n            text = escape$3(this.mangle(cap[1]));\n            href = 'mailto:' + text;\n          } else {\n            text = escape$3(cap[1]);\n            href = text;\n          }\n\n          out += this.renderer.link(href, null, text);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.inLink && (cap = this.rules.url.exec(src))) {\n          if (cap[2] === '@') {\n            text = escape$3(cap[0]);\n            href = 'mailto:' + text;\n          } else {\n            // do extended autolink path validation\n            do {\n              prevCapZero = cap[0];\n              cap[0] = this.rules._backpedal.exec(cap[0])[0];\n            } while (prevCapZero !== cap[0]);\n\n            text = escape$3(cap[0]);\n\n            if (cap[1] === 'www.') {\n              href = 'http://' + text;\n            } else {\n              href = text;\n            }\n          }\n\n          src = src.substring(cap[0].length);\n          out += this.renderer.link(href, null, text);\n          continue;\n        } // text\n\n\n        if (cap = this.rules.text.exec(src)) {\n          src = src.substring(cap[0].length);\n\n          if (this.inRawBlock) {\n            out += this.renderer.text(this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape$3(cap[0]) : cap[0]);\n          } else {\n            out += this.renderer.text(escape$3(this.smartypants(cap[0])));\n          }\n\n          continue;\n        }\n\n        if (src) {\n          throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n        }\n      }\n\n      return out;\n    };\n\n    InlineLexer.escapes = function escapes(text) {\n      return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n    }\n    /**\n     * Compile Link\n     */\n    ;\n\n    _proto.outputLink = function outputLink(cap, link) {\n      var href = link.href,\n          title = link.title ? escape$3(link.title) : null;\n      return cap[0].charAt(0) !== '!' ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape$3(cap[1]));\n    }\n    /**\n     * Smartypants Transformations\n     */\n    ;\n\n    _proto.smartypants = function smartypants(text) {\n      if (!this.options.smartypants) return text;\n      return text // em-dashes\n      .replace(/---/g, \"\\u2014\") // en-dashes\n      .replace(/--/g, \"\\u2013\") // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n      .replace(/'/g, \"\\u2019\") // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n      .replace(/\"/g, \"\\u201D\") // ellipses\n      .replace(/\\.{3}/g, \"\\u2026\");\n    }\n    /**\n     * Mangle Links\n     */\n    ;\n\n    _proto.mangle = function mangle(text) {\n      if (!this.options.mangle) return text;\n      var l = text.length;\n      var out = '',\n          i = 0,\n          ch;\n\n      for (; i < l; i++) {\n        ch = text.charCodeAt(i);\n\n        if (Math.random() > 0.5) {\n          ch = 'x' + ch.toString(16);\n        }\n\n        out += '&#' + ch + ';';\n      }\n\n      return out;\n    };\n\n    _createClass(InlineLexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return inline$1;\n      }\n    }]);\n\n    return InlineLexer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 =\n  /*#__PURE__*/\n  function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var merge$2 = helpers.merge,\n      unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 =\n  /*#__PURE__*/\n  function () {\n    function Parser(options) {\n      this.tokens = [];\n      this.token = null;\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    };\n\n    var _proto = Parser.prototype;\n\n    /**\n     * Parse Loop\n     */\n    _proto.parse = function parse(tokens) {\n      this.inline = new InlineLexer_1(tokens.links, this.options); // use an InlineLexer with a TextRenderer to extract pure text\n\n      this.inlineText = new InlineLexer_1(tokens.links, merge$2({}, this.options, {\n        renderer: new TextRenderer_1()\n      }));\n      this.tokens = tokens.reverse();\n      var out = '';\n\n      while (this.next()) {\n        out += this.tok();\n      }\n\n      return out;\n    };\n\n    /**\n     * Next Token\n     */\n    _proto.next = function next() {\n      this.token = this.tokens.pop();\n      return this.token;\n    };\n\n    /**\n     * Preview Next Token\n     */\n    _proto.peek = function peek() {\n      return this.tokens[this.tokens.length - 1] || 0;\n    };\n\n    /**\n     * Parse Text Tokens\n     */\n    _proto.parseText = function parseText() {\n      var body = this.token.text;\n\n      while (this.peek().type === 'text') {\n        body += '\\n' + this.next().text;\n      }\n\n      return this.inline.output(body);\n    };\n\n    /**\n     * Parse Current Token\n     */\n    _proto.tok = function tok() {\n      var body = '';\n\n      switch (this.token.type) {\n        case 'space':\n          {\n            return '';\n          }\n\n        case 'hr':\n          {\n            return this.renderer.hr();\n          }\n\n        case 'heading':\n          {\n            return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, unescape$1(this.inlineText.output(this.token.text)), this.slugger);\n          }\n\n        case 'code':\n          {\n            return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);\n          }\n\n        case 'table':\n          {\n            var header = '',\n                i,\n                row,\n                cell,\n                j; // header\n\n            cell = '';\n\n            for (i = 0; i < this.token.header.length; i++) {\n              cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {\n                header: true,\n                align: this.token.align[i]\n              });\n            }\n\n            header += this.renderer.tablerow(cell);\n\n            for (i = 0; i < this.token.cells.length; i++) {\n              row = this.token.cells[i];\n              cell = '';\n\n              for (j = 0; j < row.length; j++) {\n                cell += this.renderer.tablecell(this.inline.output(row[j]), {\n                  header: false,\n                  align: this.token.align[j]\n                });\n              }\n\n              body += this.renderer.tablerow(cell);\n            }\n\n            return this.renderer.table(header, body);\n          }\n\n        case 'blockquote_start':\n          {\n            body = '';\n\n            while (this.next().type !== 'blockquote_end') {\n              body += this.tok();\n            }\n\n            return this.renderer.blockquote(body);\n          }\n\n        case 'list_start':\n          {\n            body = '';\n            var ordered = this.token.ordered,\n                start = this.token.start;\n\n            while (this.next().type !== 'list_end') {\n              body += this.tok();\n            }\n\n            return this.renderer.list(body, ordered, start);\n          }\n\n        case 'list_item_start':\n          {\n            body = '';\n            var loose = this.token.loose;\n            var checked = this.token.checked;\n            var task = this.token.task;\n\n            if (this.token.task) {\n              if (loose) {\n                if (this.peek().type === 'text') {\n                  var nextToken = this.peek();\n                  nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n                } else {\n                  this.tokens.push({\n                    type: 'text',\n                    text: this.renderer.checkbox(checked)\n                  });\n                }\n              } else {\n                body += this.renderer.checkbox(checked);\n              }\n            }\n\n            while (this.next().type !== 'list_item_end') {\n              body += !loose && this.token.type === 'text' ? this.parseText() : this.tok();\n            }\n\n            return this.renderer.listitem(body, task, checked);\n          }\n\n        case 'html':\n          {\n            // TODO parse inline content if parameter markdown=1\n            return this.renderer.html(this.token.text);\n          }\n\n        case 'paragraph':\n          {\n            return this.renderer.paragraph(this.inline.output(this.token.text));\n          }\n\n        case 'text':\n          {\n            return this.renderer.paragraph(this.parseText());\n          }\n\n        default:\n          {\n            var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n\n            if (this.options.silent) {\n              console.log(errMsg);\n            } else {\n              throw new Error(errMsg);\n            }\n          }\n      }\n    };\n\n    return Parser;\n  }();\n\n  var merge$3 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$4 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (callback || typeof opt === 'function') {\n      var _ret = function () {\n        if (!callback) {\n          callback = opt;\n          opt = null;\n        }\n\n        opt = merge$3({}, marked.defaults, opt || {});\n        checkSanitizeDeprecation$1(opt);\n        var highlight = opt.highlight;\n        var tokens,\n            pending,\n            i = 0;\n\n        try {\n          tokens = Lexer_1.lex(src, opt);\n        } catch (e) {\n          return {\n            v: callback(e)\n          };\n        }\n\n        pending = tokens.length;\n\n        var done = function done(err) {\n          if (err) {\n            opt.highlight = highlight;\n            return callback(err);\n          }\n\n          var out;\n\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n\n          opt.highlight = highlight;\n          return err ? callback(err) : callback(null, out);\n        };\n\n        if (!highlight || highlight.length < 3) {\n          return {\n            v: done()\n          };\n        }\n\n        delete opt.highlight;\n        if (!pending) return {\n          v: done()\n        };\n\n        for (; i < tokens.length; i++) {\n          (function (token) {\n            if (token.type !== 'code') {\n              return --pending || done();\n            }\n\n            return highlight(token.text, token.lang, function (err, code) {\n              if (err) return done(err);\n\n              if (code == null || code === token.text) {\n                return --pending || done();\n              }\n\n              token.text = code;\n              token.escaped = true;\n              --pending || done();\n            });\n          })(tokens[i]);\n        }\n\n        return {\n          v: void 0\n        };\n      }();\n\n      if (typeof _ret === \"object\") return _ret.v;\n    }\n\n    try {\n      opt = merge$3({}, marked.defaults, opt || {});\n      checkSanitizeDeprecation$1(opt);\n      return Parser_1.parse(Lexer_1.lex(src, opt), opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if ((opt || marked.defaults).silent) {\n        return '<p>An error occurred:</p><pre>' + escape$4(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$3(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Expose\n   */\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.InlineLexer = InlineLexer_1;\n  marked.inlineLexer = InlineLexer_1.output;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n"],"sourceRoot":"webpack:///"}